"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8868],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),k=s(n),g=a,m=k["".concat(p,".").concat(g)]||k[g]||c[g]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9071:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),o=["components"],l={title:"Kotlin + Spring GraphQL + Spring Security \uc0ac\uc6a9\ud558\uae30",slug:"2022/06/06/Kotlin-Spring-GraphQL-Spring-Security-\uc0ac\uc6a9\ud558\uae30",authors:"jake",tags:["spring","graphql","security","jwt"]},p=void 0,s={permalink:"/2022/06/06/Kotlin-Spring-GraphQL-Spring-Security-\uc0ac\uc6a9\ud558\uae30",editUrl:"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-06-06-spring-graphql/index.mdx",source:"@site/blog/2022-06-06-spring-graphql/index.mdx",title:"Kotlin + Spring GraphQL + Spring Security \uc0ac\uc6a9\ud558\uae30",description:"\uc774\ubc88 \ud3ec\uc2a4\ud2b8\uc5d0\uc11c\ub294 Spring for GraphQL \ud504\ub85c\uc81d\ud2b8\uac00 GA \ub418\uc5b4 \uc0d8\ud50c \ud504\ub85c\uc81d\ud2b8\ub97c \ub9cc\ub4dc\ub294 \uacfc\uc815\uc744 \uae30\uc220\ud558\ub824\uace0 \ud55c\ub2e4.",date:"2022-06-06T00:00:00.000Z",formattedDate:"2022\ub144 6\uc6d4 6\uc77c",tags:[{label:"spring",permalink:"/tags/spring"},{label:"graphql",permalink:"/tags/graphql"},{label:"security",permalink:"/tags/security"},{label:"jwt",permalink:"/tags/jwt"}],readingTime:16.69,hasTruncateMarker:!0,authors:[{name:"Jake Son",title:"Backend Developer",url:"https://github.com/jbl428",imageURL:"https://avatars.githubusercontent.com/u/22140938?v=4",key:"jake"}],frontMatter:{title:"Kotlin + Spring GraphQL + Spring Security \uc0ac\uc6a9\ud558\uae30",slug:"2022/06/06/Kotlin-Spring-GraphQL-Spring-Security-\uc0ac\uc6a9\ud558\uae30",authors:"jake",tags:["spring","graphql","security","jwt"]},prevItem:{title:"[Spring Data MongoDB] Atlas Search \ub97c \uc704\ud55c \ucee4\uc2a4\ud140 Kotlin DSL \ub9cc\ub4e4\uae30",permalink:"/2022/07/03/[Spring-Data-MongoDB]-Atlas-Search\ub97c-\uc704\ud55c-\ucee4\uc2a4\ud140-Kotlin-DSL-\ub9cc\ub4e4\uae30"},nextItem:{title:"Github Page\ub97c GraphQL \uc2a4\ud0a4\ub9c8 \uc11c\ubc84\ub85c \ub9cc\ub4e4\uae30",permalink:"/2022/05/18/Github-Page\ub97c-GraphQL-\uc2a4\ud0a4\ub9c8-\uc11c\ubc84\ub85c-\ub9cc\ub4e4\uae30"}},u={authorsImageUrls:[void 0]},c=[{value:"\ucd08\uae30 \ud504\ub85c\uc81d\ud2b8 \uc138\ud305",id:"\ucd08\uae30-\ud504\ub85c\uc81d\ud2b8-\uc138\ud305",level:2},{value:"MongoDB \uc124\uc815",id:"mongodb-\uc124\uc815",level:2},{value:"Repository",id:"repository",level:2},{value:"Service",id:"service",level:2},{value:"Controller",id:"controller",level:2},{value:"\uad6c\ud604 \ubc29\ubc95",id:"\uad6c\ud604-\ubc29\ubc95",level:3},{value:"\uc2a4\ud0a4\ub9c8 \uc791\uc131",id:"\uc2a4\ud0a4\ub9c8-\uc791\uc131",level:3},{value:"\ucee8\ud2b8\ub864\ub7ec \uc791\uc131",id:"\ucee8\ud2b8\ub864\ub7ec-\uc791\uc131",level:3},{value:"\ud14c\uc2a4\ud2b8 \ucf54\ub4dc",id:"\ud14c\uc2a4\ud2b8-\ucf54\ub4dc",level:3},{value:"Security",id:"security",level:2}],k={toc:c};function g(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},k,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\uc774\ubc88 \ud3ec\uc2a4\ud2b8\uc5d0\uc11c\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"Spring for GraphQL")," \ud504\ub85c\uc81d\ud2b8\uac00 GA \ub418\uc5b4 \uc0d8\ud50c \ud504\ub85c\uc81d\ud2b8\ub97c \ub9cc\ub4dc\ub294 \uacfc\uc815\uc744 \uae30\uc220\ud558\ub824\uace0 \ud55c\ub2e4.\n\ub2e4\uc74c\uacfc \uac19\uc740 \uae30\uc220\uc744 \uc0ac\uc6a9\ud574\uc11c \uad6c\ud604\ud558\uc600\ub2e4."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kotlinlang.org"},"Kotlin")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://spring.io/projects/spring-boot"},"Spring Boot (WebFlux)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://spring.io/projects/spring-graphql"},"Spring GraphQL")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://spring.io/projects/spring-security"},"Spring Security")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://spring.io/projects/spring-data-mongodb"},"Spring Data MongoDB (Reactive)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gradle.org"},"Gradle"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\uc0d8\ud50c \ud504\ub85c\uc81d\ud2b8 \ucf54\ub4dc\ub294 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/jbl428/study-note/tree/master/kotlin/spring-graphql"},"github")," \uc5d0\uc11c \ubcfc \uc218 \uc788\ub2e4.")),(0,i.kt)("h2",{id:"\ucd08\uae30-\ud504\ub85c\uc81d\ud2b8-\uc138\ud305"},"\ucd08\uae30 \ud504\ub85c\uc81d\ud2b8 \uc138\ud305"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://start.spring.io"},"Spring Initializr")," \uc5d0 \uc811\uc18d\ud574\uc11c \ucd08\uae30 \uc2a4\ud504\ub9c1 \ud504\ub85c\uc81d\ud2b8 \uc138\ud305\uc744 \uc2dc\uc791\ud55c\ub2e4.\n",(0,i.kt)("inlineCode",{parentName:"p"},"Gradle Project")," \ub97c \uc120\ud0dd\ud558\uace0 Language \ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"Kotlin")," \uc744 \uc120\ud0dd\ud55c\ub2e4.\n\uc758\uc874\uc131\uc740 \uc544\ub798 \ud654\uba74\uc5d0 \ubcf4\uc774\ub294 \uac83\uc744 \uc120\ud0dd\ud558\uba74 \ub41c\ub2e4."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"spring-initializr",src:n(3184).Z,width:"1482",height:"986"})),(0,i.kt)("h2",{id:"mongodb-\uc124\uc815"},"MongoDB \uc124\uc815"),(0,i.kt)("p",null,"\ubcf4\ud1b5 \uc2a4\ud504\ub9c1 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c ",(0,i.kt)("a",{parentName:"p",href:"https://spring.io/projects/spring-data-jpa"},"Spring Data JPA")," \ub97c \ud65c\uc6a9\ud558\ub294 \uc608\uc81c\uac00 \ub9ce\ub2e4.\n\ud558\uc9c0\ub9cc \ucf54\ud2c0\ub9b0\uc5d0\uc11c\ub294 \uc5d4\ud2f0\ud2f0 \uc120\uc5b8\uc2dc ",(0,i.kt)("inlineCode",{parentName:"p"},"data class")," \ub97c \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\uace0 \ud544\ub4dc\ub97c ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," \ub85c \uc120\uc5b8\ud574\uc57c \ud558\ub294 \ub4f1 \uc5ec\ub7ec \ubb38\uc81c\uac00 \uc788\ub2e4.\n\uadf8\ub798\uc11c \uc774\ubc88\uc5d0\ub294 \ucf54\ud2c0\ub9b0\uc744 \uc798 \uc9c0\uc6d0\ud558\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"Spring Data MongoDB")," \ub97c \uc0ac\uc6a9\ud558\uba70 reactive \uae30\ubc18\uc758 \ud504\ub85c\uc81d\ud2b8\ub97c \ub9cc\ub4e4\uc5b4\ubcf4\ub824\uace0 \ud55c\ub2e4."),(0,i.kt)("p",null,"\uba3c\uc800 docker-compose.yml \ud30c\uc77c\uc744 \uc0dd\uc131\ud574 \uc544\ub798\uc640 \uac19\uc740 \ub0b4\uc6a9\uc744 \ub123\uc5b4\uc900\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="docker-compose.yml"',title:'"docker-compose.yml"'},'services:\n  mongo:\n    image: mongo:5.0.6\n    restart: always\n    ports:\n      - "27017:27017"\n    environment:\n      MONGO_INITDB_DATABASE: test\n      MONGO_INITDB_ROOT_USERNAME: test\n      MONGO_INITDB_ROOT_PASSWORD: test\n')),(0,i.kt)("p",null,"\uc774\uc81c ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose up")," \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uba74 27017 \ud3ec\ud2b8\uc5d0 MongoDB \uc11c\ubc84\uac00 \uc2e4\ud589\ub41c\ub2e4.\n\ud504\ub85c\uc81d\ud2b8 \ud658\uacbd\ubcc0\uc218 \ud30c\uc77c\uc744 \ud1b5\ud574 \ub514\ube44 \uc811\uc18d\uc815\ubcf4\ub97c \ub123\uc5b4\uc900\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="src/main/resources/application.yml"',title:'"src/main/resources/application.yml"'},"spring:\n  data:\n    mongodb:\n      host: localhost\n      port: 27017\n      database: test\n      username: test\n      password: test\n      authentication-database: admin\n")),(0,i.kt)("p",null,"\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc5d0\uc11c\ub294 \uc2e4\uc81c \ud574\ub2f9 \uc11c\ubc84\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 ",(0,i.kt)("inlineCode",{parentName:"p"},"Embedded MongoDB")," \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.\n\uc544\ub798\uc640 \uac19\uc774 version \uc5d0 \uc6d0\ud558\ub294 \ubc84\uc804\uc744 \ub123\uc5b4\uc8fc\uba74 \ud574\ub2f9\ubc84\uc804\uc73c\ub85c \ub3d9\uc791\ud558\ub294 \ub0b4\uc7a5 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud55c\ub2e4."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"\uc704\uc640 \uac19\uc740 \ub0b4\uc7a5 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub85c \ud558\ub294 \ud14c\uc2a4\ud2b8\uac00 \uc2e4\uc81c \uc11c\ubc84\uc5d0\uc11c \ud558\ub294 \ud14c\uc2a4\ud2b8\ub97c \uc644\uc804\ud788 \ub300\uccb4\ud560 \uc218 \uc5c6\ub2e4.\nEmbedded \uc5d0\uc11c \ud2b9\uc815 \uae30\ub2a5\uc774 \uc81c\ub300\ub85c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0\ub098 \ub354 \uc5c4\uaca9\ud55c \ud14c\uc2a4\ud2b8\ub97c \uc6d0\ud55c\ub2e4\uba74 \uc2e4\uc81c \ub514\ube44\uc11c\ubc84\ub85c \ud14c\uc2a4\ud2b8 \ud574\uc57c\ud55c\ub2e4.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="src/test/resources/application.yml"',title:'"src/test/resources/application.yml"'},'spring:\n  mongodb:\n    embedded:\n      version: "5.0.6"\n')),(0,i.kt)("h2",{id:"repository"},"Repository"),(0,i.kt)("p",null,"\ub2e8\uc21c\ud55c \uc608\uc81c\ub97c \uc704\ud574 ",(0,i.kt)("inlineCode",{parentName:"p"},"Book")," document \ub97c \uc758\ubbf8\ud558\ub294 \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud55c\ub2e4.\nJPA \uc640 \ub2ec\ub9ac ",(0,i.kt)("inlineCode",{parentName:"p"},"data class")," \ub85c \uc120\uc5b8\ud560 \uc218 \uc788\uc73c\uba70 \ud544\uc694\ud55c annotation \uac1c\uc218\ub3c4 \uc801\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="Book.kt"',title:'"Book.kt"'},"data class Book(\n    val title: String,\n    val author: String,\n    val isbn: String,\n    val publishers: List<Publisher> = emptyList(),\n    val info: Info? = null\n) {\n    // \uc774 \ud544\ub4dc\ub294 _id \ub97c \uc758\ubbf8\ud558\uba70 insert \uc2dc \uc790\ub3d9 \ud560\ub2f9\ub418\ubbc0\ub85c lateinit \uc73c\ub85c \uc120\uc5b8\ud588\ub2e4\n    @Id\n    lateinit var id: String\n}\n\ndata class Publisher(\n    val name: String,\n    val email: String,\n)\n\ndata class Info(\n    val preface: String,\n)\n")),(0,i.kt)("p",null,"\uae30\ubcf8\uc801\uc778 CRUD \ub97c \ub2f4\ub2f9\ud560 repository \ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="BookRepository.kt"',title:'"BookRepository.kt"'},"import org.springframework.data.mongodb.repository.ReactiveMongoRepository\n\ninterface BookRepository : ReactiveMongoRepository<Book, String>\n")),(0,i.kt)("h2",{id:"service"},"Service"),(0,i.kt)("p",null,"\uc774\ubc88 \uc608\uc81c\uc5d0\uc11c\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"Book")," \ub97c \uc0dd\uc131\ud558\uace0 \uc870\ud68c\ud558\ub294 \ub85c\uc9c1\ub9cc \uad6c\ud604\ud558\ub824\uace0 \ud55c\ub2e4.\n",(0,i.kt)("inlineCode",{parentName:"p"},"BookService")," \ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"BookRepository")," \ub97c \uc774\uc6a9\ud558\uc5ec ",(0,i.kt)("inlineCode",{parentName:"p"},"Book")," \ub97c \uc0dd\uc131\ud558\uace0 \uc870\ud68c\ud55c\ub2e4.\nKotlin \uc758 suspend \ud568\uc218\uc640 ",(0,i.kt)("inlineCode",{parentName:"p"},"kotlinx-coroutines-reactor")," \ud328\ud0a4\uc9c0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud655\uc7a5\ud568\uc218\ub97c \ud65c\uc6a9\ud558\uba74 \uae30\uc874 reactive \uae30\ubc18\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"Mono"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Flux")," \uc0ac\uc6a9\uc744 \ub300\uccb4\ud560 \uc218 \uc788\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="BookService.kt"',title:'"BookService.kt"'},"@Service\nclass BookService(private val bookRepository: BookRepository) {\n\n    // java \ub97c \uc0ac\uc6a9\ud588\ub2e4\uba74 \uc774 \uba54\uc18c\ub4dc\ub294 Flux<Book> \uc744 \ubc18\ud658\ud560 \uac83\uc774\ub2e4\n    suspend fun find(): List<Book> =\n        bookRepository\n            .findAll()     // reactive \uae30\ubc18\uc5d0\uc11c\ub294 Flux \ub97c \ubc18\ud658\ud55c\ub2e4\n            .collectList() // Flux \ub97c Mono \ub85c \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \uba54\uc18c\ub4dc\n            .awaitSingle() // \uc774 \ud655\uc7a5\ud568\uc218 \ub355\ubd84\uc5d0 \ubc18\ud658\uac12\uc740 List<Book> \uc774 \ub420 \uc218 \uc788\ub2e4\n\n    // Book \uc744 \uc0dd\uc131\ud558\uace0 \ubc18\ud658\ud55c\ub2e4 id \ud544\ub4dc\ub294 \uc790\ub3d9\uc73c\ub85c \uc124\uc815\ub41c\ub2e4\n    suspend fun create(input: CreateBookInput): Book =\n        Book(\n            title = input.title,\n            author = input.author,\n            isbn = input.isbn,\n        ).run {\n            bookRepository.save(this)\n        }.awaitSingle()\n}\n")),(0,i.kt)("p",null,"\uc704 \uc11c\ube44\uc2a4 \ub85c\uc9c1\uc744 ",(0,i.kt)("inlineCode",{parentName:"p"},"Embedded MongoDb")," \ub97c \ud65c\uc6a9\ud574 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud574\ubcf4\uc790.\n\ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"Junit")," \ub300\uc2e0 \ucf54\ud2c0\ub9b0 dsl \uc744 \ud65c\uc6a9\ud558\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"kotest")," \ub97c \uc0ac\uc6a9\ud588\ub2e4.\njunit \uc5d0\uc11c\ub294 suspend \ud568\uc218\ub97c \ud14c\uc2a4\ud2b8\ud558\ub824\uba74 ",(0,i.kt)("inlineCode",{parentName:"p"},"runBlocking")," \ud568\uc218\ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ub4f1 \ubc88\uac70\ub85c\uc6b4 \uc791\uc5c5\uc774 \ud544\uc694\ud55c\uc9c0\ub9cc kotest \ub294 test scope \uc790\uccb4\uac00 suspend \ud568\uc218\ub97c \uc9c0\uc6d0\ud558\uae30\uc5d0 \ub354 \uac04\uacb0\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4."),(0,i.kt)("p",null,"\uba3c\uc800 \ub2e4\uc74c \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud574\uc57c \ud55c\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kts",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},'dependencies {\n    testImplementation("io.kotest:kotest-runner-junit5:5.3.0")\n    testImplementation("io.kotest.extensions:kotest-extensions-spring:1.1.1")\n}\n')),(0,i.kt)("p",null,"\ub2e4\uc74c\uc740 kotest \uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc5ec\ub7ec spec \uc911 ",(0,i.kt)("inlineCode",{parentName:"p"},"FreeSpec")," \uc744 \ud65c\uc6a9\ud55c \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc774\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="BookServiceTest.kt"',title:'"BookServiceTest.kt"'},'@DataMongoTest\ninternal class BookServiceTest(\n    private val bookRepository: BookRepository,\n) : FreeSpec({\n    val bookService = BookService(bookRepository)\n\n    beforeSpec {\n        // \uac01 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uac04\uc758 \ub3c5\ub9bd\uc131\uc744 \uc704\ud574 book \uceec\ub809\uc158\uc758 \ub370\uc774\ud130\ub97c \ubaa8\ub450 \uc0ad\uc81c\ud55c\ub2e4\n        // block \uc744 \uc0ac\uc6a9\ud574 \uc0ad\uc81c \uc791\uc5c5\uc774 \ub05d\ub0a0\ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9b0\ub2e4\n        // \ub9cc\uc57d awaitSingle \uc744 \uc0ac\uc6a9\ud558\uba74 \uc544\uc9c1 \uc0ad\uc81c\uac00 \uc644\ub8cc\ub418\uc9c0 \uc54a\uc558\ub294\ub370\ub3c4 \ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc8fc\uc758\n        bookRepository.deleteAll().block()\n    }\n\n    "find" {\n        // given\n        val book = Book(\n            title = "The Lord of the Rings",\n            author = "J.R.R. Tolkien",\n            isbn = "0-395-07477-1",\n        )\n        // awaitSingle \ud655\uc7a5\ud568\uc218\ub294 suspend \ud568\uc218\uc5d0\uc11c\ub9cc \ud638\ucd9c\ud560 \uc218 \uc788\ub2e4\n        bookRepository.save(book).awaitSingle()\n\n        // when\n        val foundBook = bookService.find()\n\n        // then\n        foundBook shouldBe listOf(book)\n    }\n\n    "create" {\n        // given\n        val input = CreateBookInput(\n            title = "The Lord of the Rings",\n            author = "J.R.R. Tolkien",\n            isbn = "0-395-07477-1",\n        )\n\n        // when\n        val result = bookService.create(input)\n\n        // then\n        assertSoftly(result) {\n            title shouldBe input.title\n            author shouldBe input.author\n            isbn shouldBe input.isbn\n        }\n    }\n})\n')),(0,i.kt)("h2",{id:"controller"},"Controller"),(0,i.kt)("p",null,"\uc774\uc81c GraphQL \uacfc \uc5f0\uad00\ub41c \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc791\uc131\ud574\ubcf4\uc790."),(0,i.kt)("h3",{id:"\uad6c\ud604-\ubc29\ubc95"},"\uad6c\ud604 \ubc29\ubc95"),(0,i.kt)("p",null,"\uadf8\uc804\uc5d0 \uc6a9\uc5b4\uc5d0 \ub300\ud55c \uc124\uba85\uc744 \ud558\ub824\uace0\ud55c\ub2e4."),(0,i.kt)("p",null,"GraphQL api \ub97c \uac1c\ubc1c\ud560 \ub54c \ub2e4\uc74c \ub450 \ubc29\uc2dd\uc911 \ud558\ub098\ub97c \uc120\ud0dd\ud558\uac8c \ub41c\ub2e4."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"code first"),(0,i.kt)("li",{parentName:"ul"},"schema first")),(0,i.kt)("p",null,"code first \ub294 \uc774\ub984 \uadf8\ub300\ub85c \ucf54\ub4dc\ub97c \uba3c\uc800 \uc791\uc131\ud558\uace0 GraphQL \uc2a4\ud0a4\ub9c8\ub97c \uc790\ub3d9 \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc774\ub2e4.\n\ubc18\ub300\ub85c schema first \ub294 GraphQL \uc2a4\ud0a4\ub9c8\ub97c \uba3c\uc800 \uc791\uc131\ud558\uace0 \ucf54\ub4dc\ub97c \uc790\ub3d9 \uc0dd\uc131\ud558\uac70\ub098 \uc9c1\uc811 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc774\ub2e4."),(0,i.kt)("p",null,"code first \ubc29\uc2dd\uc740 \uc2e4\uc81c \ucf54\ub4dc\uc640 \uc2a4\ud0a4\ub9c8\uac00 \ud56d\uc0c1 \uc77c\uce58\ud558\ub294 \uac83\uc744 \ubcf4\uc7a5\ud558\uc9c0\ub9cc FE \uc5d0\uc11c \ud544\uc694\ud55c \uc2a4\ud0a4\ub9c8\ub97c \uc704\ud574\uc11c \ubc31\uc5d4\ub4dc \uc791\uc5c5\uc744 \uae30\ub2e4\ub824\uc57c \ud55c\ub2e4.\nschema first \ubc29\uc2dd\uc740 \ubc18\ub300\ub85c \uc2a4\ud0a4\ub9c8\ub97c \uba3c\uc800 \ub9cc\ub4e4\uae30\uc5d0 FE, BE \ub3d9\uc2dc \uac1c\ubc1c\uc774 \uac00\ub2a5\ud558\uc9c0\ub9cc \uc2a4\ud0a4\ub9c8\uc640 \uc2e4\uc81c\ucf54\ub4dc\uac04\uc758 \ubd88\uc77c\uce58\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc8fc\uc758\ud574\uc57c \ud55c\ub2e4."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\uae00 \uc791\uc131\uc77c \uae30\uc900 Spring GraphQL \uc740 schema first \ubc29\uc2dd\ub9cc \uc9c0\uc6d0\ud55c\ub2e4.")),(0,i.kt)("h3",{id:"\uc2a4\ud0a4\ub9c8-\uc791\uc131"},"\uc2a4\ud0a4\ub9c8 \uc791\uc131"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"src/main/resources/graphql")," \uacbd\ub85c\uc5d0 ",(0,i.kt)("inlineCode",{parentName:"p"},"graphqls")," \ub098 ",(0,i.kt)("inlineCode",{parentName:"p"},"gqls")," \ud655\uc7a5\uc790\ub97c \uac00\uc9c4 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uba74 \uc2a4\ud504\ub9c1\uc774 \ud574\ub2f9 \uc2a4\ud0a4\ub9c8\ub97c \uc77d\ub294\ub2e4.\n\uc774\ubc88\uc5d0\ub294 \uac04\ub2e8\ud55c \uc608\uc81c\ub85c \ucc45\uc744 \uc0dd\uc131\ud558\uace0 \ubaa9\ub85d\uc744 \uc870\ud68c\ud558\ub294 api \ub97c \uad6c\ud604\ud55c\ub2e4\uace0 \uac00\uc815\ud558\uc790."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql",metastring:'title="schema.graphqls"',title:'"schema.graphqls"'},"type Query {\n  books: [Book!]!\n}\n\ntype Mutation {\n  createBook(input: CreateBookInput!): Book!\n}\n\ninput CreateBookInput {\n  title: String!\n  author: String!\n  isbn: String!\n}\n\ntype Book {\n  id: ID!\n  title: String!\n  author: String!\n  isbn: String!\n}\n")),(0,i.kt)("h3",{id:"\ucee8\ud2b8\ub864\ub7ec-\uc791\uc131"},"\ucee8\ud2b8\ub864\ub7ec \uc791\uc131"),(0,i.kt)("p",null,"\uc774\uc81c \uc704 \uc2a4\ud0a4\ub9c8\uc5d0 \ub300\uc751\ud558\ub294 \ucee8\ud2b8\ub864\ub7ec \ucf54\ub4dc\ub97c \uc791\uc131\ud574\ubcf4\uc790.\n\uc6b0\uc120 REST API \uc640 \ub3d9\uc77c\ud558\uac8c ",(0,i.kt)("inlineCode",{parentName:"p"},"@Controller")," \ub97c \uc0ac\uc6a9\ud574 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc815\uc758\ud55c\ub2e4.\nREST API \uc640 \ub2e4\ub978\uc810\uc740 ",(0,i.kt)("inlineCode",{parentName:"p"},"@GetMapping")," \uacfc \uac19\uc740 \uc5b4\ub178\ud14c\uc774\uc158 \ub300\uc2e0 ",(0,i.kt)("inlineCode",{parentName:"p"},"@QueryMapping")," \uacfc ",(0,i.kt)("inlineCode",{parentName:"p"},"@MutationMapping")," \ub97c \uc0ac\uc6a9\ud55c\ub2e4.\n\uac01\uac01 \uc774\ub984 \uadf8\ub300\ub85c Query \uc640 Mutation \uc744 \uc704\ud55c \uac83\uc774\uba70 \uba54\uc18c\ub4dc\uba85\uc774 GraphQL \ud544\ub4dc\uba85\uc774 \ub41c\ub2e4.\n\uba54\uc18c\ub4dc\uc758 \ubc18\ud658\uac12\uc740 \uc694\uccad\uc758 \uc751\ub2f5\uc73c\ub85c \ub9e4\ud551\ub41c\ub2e4."),(0,i.kt)("p",null,"GraphQL input \uac1d\uccb4\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"@Argument")," \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud574 \uc815\uc758\ud55c\ub2e4.\n\uac1d\uccb4\uc758 \ud0c0\uc785\uc774 ",(0,i.kt)("inlineCode",{parentName:"p"},"CreateBookInput")," \uc774\uba70 \uc2a4\ud0a4\ub9c8\uc5d0 \uc815\uc758\ud55c input \uba85\uacfc \uc77c\uce58\ud558\uc9c0\ub9cc \uaf2d \uc77c\uce58\ud560 \ud544\uc694\ub294 \uc5c6\ub2e4.\n\ub2e4\ub9cc \uac1d\uccb4\uc758 \ud504\ub85c\ud37c\ud2f0\uba85\uacfc \ud0c0\uc785\uc774 input \uc5d0 \uc9c0\uc815\ud55c \uac83\uacfc \uac19\uc544\uc57c \uc62c\ubc14\ub974\uac8c \uc791\ub3d9\ud55c\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="BookController.kt"',title:'"BookController.kt"'},"@Controller\nclass BookController(private val bookService: BookService) {\n\n    @QueryMapping\n    suspend fun books(): List<Book> = bookService.find()\n\n    @MutationMapping\n    suspend fun createBook(@Argument input: CreateBookInput): Book = bookService.create(input)\n}\n")),(0,i.kt)("h3",{id:"\ud14c\uc2a4\ud2b8-\ucf54\ub4dc"},"\ud14c\uc2a4\ud2b8 \ucf54\ub4dc"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Spring for GraphQL")," \uc5d0\uc11c\ub294 GraphQL \ucee8\ud2b8\ub864\ub7ec \ud14c\uc2a4\ud2b8\ub97c \uc704\ud55c \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud55c\ub2e4.\n\uba3c\uc800 \uc544\ub798 \ud328\ud0a4\uc9c0\ub97c \ucd94\uac00\ud55c\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kts"},'dependencies {\n    testImplementation("org.springframework.graphql:spring-graphql-test")\n}\n')),(0,i.kt)("p",null,"\ud574\ub2f9 \ud328\ud0a4\uc9c0\ub294 GraphQL \uc694\uccad\uc744 \uc704\ud55c \uc5ec\ub7ec \uc885\ub958\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc81c\uacf5\ud55c\ub2e4.\n\uc774\ubc88 \ud3ec\uc2a4\ud2b8\uc5d0\uc11c\ub294 ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpGraphQlTester")," \ub97c \uc0ac\uc6a9\ud558\ub824\uace0 \ud55c\ub2e4.\n\uc9c1\uc811 Client \ub97c \ub9cc\ub4e4 \uc218 \uc788\uc9c0\ub9cc ",(0,i.kt)("inlineCode",{parentName:"p"},"@AutoConfigureHttpGraphQlTester")," \ub97c \uc0ac\uc6a9\ud558\uba74 \uc2a4\ud504\ub9c1\uc774 \uc790\ub3d9\uc73c\ub85c \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \ub9cc\ub4e4\uc5b4 \uc900\ub2e4."),(0,i.kt)("p",null,"GraphQL \uc694\uccad body \ub294 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc5d0 \uc9c1\uc811 \uc120\uc5b8\ud574\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc syntax highlighting \uc774\ub098 indent \ub97c \uc9c0\ud0a4\uba74\uc11c \uc791\uc131\ud558\ub294\uac83\uc774 \ubd88\ud3b8\ud558\uae30\uc5d0 \ub2e4\ub978 \ud30c\uc77c\uc5d0 \uc791\uc131 \ud6c4 \ubd88\ub7ec\uc624\ub294 \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc600\ub2e4.\n",(0,i.kt)("inlineCode",{parentName:"p"},"src/test/resources/graphql-test")," \uacbd\ub85c\uc5d0 \uc544\ub798 \ud30c\uc77c\uc744 \uc0dd\uc131\ud55c\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql",metastring:'title="createBook.gql"',title:'"createBook.gql"'},"mutation createBook($input: CreateBookInput!) {\n  createBook(input: $input) {\n    id\n    title\n    author\n    isbn\n  }\n}\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"\uc704\ucc98\ub7fc \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc640 \uc694\uccad\uc815\ubcf4\uac00 \ub2e4\ub978 \ud30c\uc77c\ub85c \ubd84\ub9ac\ub418\uba74 \ub450 \ud30c\uc77c\uc744 \uc774\ub3d9\ud558\uba74\uc11c \ub85c\uc9c1\uc744 \ud655\uc778\ud574\uc57c \ud558\ub294 \ubd88\ud3b8\ud568\uc774 \uc874\uc7ac\ud55c\ub2e4.\n\ud558\uc9c0\ub9cc IntelliJ IDEA \uc758 ",(0,i.kt)("a",{parentName:"p",href:"https://plugins.jetbrains.com/plugin/8097-graphql"},"GraphQL")," \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud574 GraphQL \uc790\ub3d9\uc644\uc131\uacfc \uad6c\ubb38 \uc624\ub958\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub294 \uc7a5\uc810\uc774 \uc788\ub2e4.")),(0,i.kt)("p",null,"\uc774\uc81c \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud574\ubcf4\uc790."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="BookControllerTest.kt"',title:'"BookControllerTest.kt"'},'@SpringBootTest\n@AutoConfigureHttpGraphQlTester\ninternal class BookControllerTest(\n    // mokito \ub300\uc2e0 mockk \ub97c \ud1b5\ud574 bean \uc744 mocking \ud558\uc600\ub2e4\n    @MockkBean\n    private val bookService: BookService,\n    private val graphQlTester: HttpGraphQlTester\n) : StringSpec({\n\n    "create" {\n        // given\n        val input = CreateBookInput("title", "author", "isbn")\n        val book = Book("title", "author", "isbn").also { it.id = "1" }\n        coEvery { bookService.create(any()) } returns book\n\n        // when\n        val response = graphQlTester\n            // documentName \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \uc694\uccad body \ub97c \uac00\uc9c4 \ud30c\uc77c\uba85(createBook.gql)\uc744 \uc9c0\uc815\ud55c\ub2e4\n            .documentName("createBook")\n            // input \uc740 variable \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \ub123\uc744 \uc218 \uc788\ub2e4\n            .variable("input", input)\n            .execute()\n\n        // then\n        response\n            // \uc751\ub2f5\uc740 JsonPath \ub97c \ud1b5\ud574 \uac80\uc99d\ud558\uba70 \uc544\ub798\ub294 data \ubc11\uc758 createBook \ud544\ub4dc\ub97c \uc9c0\uc815\ud55c \uac83\uc774\ub2e4\n            .path("createBook")\n            // data.createBook \ud544\ub4dc\ub97c Book \ud074\ub798\uc2a4\ub85c \ubcc0\ud658\ud55c\ub2e4\n            .entity(Book::class.java)\n            // \ubcc0\ud658\ud55c \uacb0\uacfc\uac00 book \uacfc \uc77c\uce58\ud558\ub294\uc9c0 \uac80\uc99d\ud55c\ub2e4\n            .isEqualTo(book)\n    }\n})\n')),(0,i.kt)("h2",{id:"security"},"Security"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\uc774\ubc88 \ub0b4\uc6a9\uc740 Spring Security \uc640 jwt \uc778\uc99d\uc5d0 \ub300\ud574 \uc5b4\ub290\uc815\ub3c4 \uc54c\uace0 \uc788\ub2e4\uace0 \uac00\uc815\ud558\uace0 \uc791\uc131\ud558\uc600\ub2e4.")),(0,i.kt)("p",null,"\uc774\uc81c ",(0,i.kt)("inlineCode",{parentName:"p"},"Spring Security")," \ub97c \ud65c\uc6a9\ud574 jwt \uae30\ubc18 \uc778\uc99d\uc744 \uad6c\ud604\ud574\ubcf4\uc790.\nREST API \ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 url path \ub97c \uad6c\ubd84\uc790\ub85c \ud558\uc5ec \uc778\uc99d\uc774 \ud544\uc694\ud55c api \ub97c \uc815\uc758\ud560 \uc218 \uc788\uc73c\ub098 \ubaa8\ub4e0 \uc694\uccad\uc774 \ud558\ub098\uc758 url \uc5d0\uc11c \uc774\ub8e8\uc5b4\uc9c0\ub294 GraphQL \uc758 \uacbd\uc6b0 \uac01 \ucee8\ud2b8\ub864\ub7ec\uc758 \uba54\uc18c\ub4dc\ub9c8\ub2e4 ",(0,i.kt)("inlineCode",{parentName:"p"},"@PreAuthorize")," \uac19\uc740 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ud65c\uc6a9\ud574 \uc778\uc99d\uc744 \uad6c\ud604\ud55c\ub2e4.\n\uba3c\uc800 AuthenticationManager \uc744 \uc0dd\uc131\ud55c\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="AuthenticationManager.kt"',title:'"AuthenticationManager.kt"'},"@Component\nclass AuthenticationManager : ReactiveAuthenticationManager {\n\n    override fun authenticate(authentication: Authentication): Mono<Authentication> {\n        return authentication.toMono()\n    }\n}\n")),(0,i.kt)("p",null,"WebFlux \ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 ReactiveAuthenticationManager \ub97c \uc0c1\uc18d\ubc1b\uc558\uace0 authenticate \uba54\uc18c\ub4dc\ub294 \ub2e8\uc21c\ud788 \ud30c\ub77c\ubbf8\ud130\ub97c Mono \ub85c \uac10\uc2f8 \uadf8\ub300\ub85c \ubc18\ud658\ud55c\ub2e4.\n\ud30c\ub77c\ubbf8\ud130 authentication \ub294 jwt \ud1a0\ud070\uc744 \ud30c\uc2f1\ud55c \uacb0\uacfc\ub97c \ub2f4\uace0 \uc788\ub294\ub370 \uc774\ub97c \ud65c\uc6a9\ud55c \ucd94\uac00\uc801\uc778 \ub85c\uc9c1\uc774 \ud544\uc694\ud558\ub2e4\uba74 \uc774 \uba54\uc18c\ub4dc\uc5d0 \ub123\uc5b4\uc900\ub2e4.\n\uc774\uc81c \ubcf8\uaca9\uc801\uc778 \uc778\uc99d\uc744 \uc124\uc815\ud574\ubcf4\uc790."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="SecurityConfig.kt"',title:'"SecurityConfig.kt"'},'// \uc544\ub798 import \ub294 \uc9c1\uc811 \ubcf5\uc0ac\ud574\uc11c \ub123\uc5b4\uc8fc\ub3c4\ub85d \ud55c\ub2e4. IDE \uc5d0\uc11c \uc81c\ub300\ub85c \uc790\ub3d9 import \uac00 \uc548\ub418\ub294 \uacbd\uc6b0\uac00 \uc788\ub2e4.\nimport org.springframework.security.config.web.server.invoke\n\n@Configuration\n@EnableWebFluxSecurity\n@EnableReactiveMethodSecurity\nclass SecurityConfig {\n\n    @Bean\n    fun springWebFilterChain(\n        http: ServerHttpSecurity,\n        manager: AuthenticationManager,\n    ): SecurityWebFilterChain =\n        // \uc544\ub798 \ucc98\ub7fc kotlin dsl \uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \uc0c1\ub2e8\uc758 import \uad6c\ubb38\uc744 \ub123\uc5b4\uc8fc\uc5b4\uc57c \ud55c\ub2e4.\n        http {\n            csrf { disable() }\n            authorizeExchange {\n                // \uc6b0\uc120 \ubaa8\ub4e0 \uc694\uccad\uc740 \ud5c8\uc6a9\ud558\ub3c4\ub85d \ud558\uace0 \uc778\uc99d\uc774 \ud544\uc694\ud55c api \uc5d0\ub9cc \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ucd94\uac00\ud558\ub824\uace0 \ud55c\ub2e4.\n                authorize(anyExchange, permitAll)\n            }\n            httpBasic { disable() }\n            addFilterAt(jwtAuthenticationFilter(manager), SecurityWebFiltersOrder.AUTHENTICATION)\n        }\n\n    fun jwtAuthenticationFilter(manager: ReactiveAuthenticationManager): AuthenticationWebFilter {\n        val bearerAuthenticationFilter = AuthenticationWebFilter(manager)\n\n        bearerAuthenticationFilter.setServerAuthenticationConverter { exchange ->\n            /*\n                \uc774\uacf3\uc5d0\uc11c exchange \ub97c \ud65c\uc6a9\ud574 jwt \ud1a0\ud070\uc744 \ud30c\uc2f1\ud558\ub294 \ub85c\uc9c1\uc744 \ub123\uc5b4\uc8fc\uc5b4\uc57c \ud55c\ub2e4.\n                \uc608\uc81c \ucf54\ub4dc\ub294 kjwt \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud65c\uc6a9\ud588\ub294\ub370 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0 \uc775\uc219\ud558\uc9c0 \uc54a\ub2e4\uba74 \uc774\ud574\ud558\uae30 \uc5b4\ub824\uc6b8 \uc218 \uc788\ub2e4.\n                \ud558\ub294 \uc77c\uc740 \uc694\uccad Authorizaion \ud5e4\ub354\uc5d0 \uc874\uc7ac\ud558\ub294 jwt \ud1a0\ud070\uc744 \ud30c\uc2f1\ud574 role \ud544\ub4dc\ub97c \uc77d\ub294 \ub85c\uc9c1\uc774\ub2e4.\n            */\n            exchange\n                .request\n                .headers\n                .getOrDefault(HttpHeaders.AUTHORIZATION, emptyList())\n                .firstOrNone()\n                .filter { it.startsWith("Bearer ") }\n                .map { it.substring(7) }\n                .toEither { KJWTVerificationError.InvalidJWT }\n                .flatMap { verifySignature<JWSHMAC256Algorithm>(it, JWT_SECRET) }\n                .flatMap { it.claimValue("role").toEither { KJWTVerificationError.InvalidJWT } }\n                .fold(\n                    ifLeft = { Mono.empty() }, // \ud1a0\ud070 \ud30c\uc2f1\uc774 \uc2e4\ud328\ud558\uba74 empty \ub97c \ubc18\ud658\ud55c\ub2e4.\n                    ifRight = {\n                        // \uc131\uacf5\ud558\uba74 \ud1a0\ud070\uc5d0\uc11c \uac00\uc838\uc628 role \uac12\uc744 SimpleGrantedAuthority \ub85c \uac10\uc2f8\uc11c UsernamePasswordAuthenticationToken \uc5d0 \ub123\uc5b4\uc900\ub2e4.\n                        UsernamePasswordAuthenticationToken(\n                            null,\n                            null,\n                            listOf(SimpleGrantedAuthority("ROLE_$it"))\n                        ).toMono()\n                    },\n                )\n        }\n\n        return bearerAuthenticationFilter\n    }\n\n    companion object {\n        // \ud3b8\uc758\ub97c \uc704\ud574 secret \uac12\uc744 \uac04\ub2e8\ud558\uac8c \uc124\uc815\ud588\ub294\ub370 \uc2e4\uc81c\ub85c\ub294 \ucd94\ub860\ud558\uae30 \uc5b4\ub824\uc6b4 \uac12\uc744 \ub123\uc5b4\uc8fc\uc5b4\uc57c \ud55c\ub2e4.\n        const val JWT_SECRET = "secret"\n    }\n}\n')),(0,i.kt)("p",null,"\uc774\uc81c \uc778\uc99d\uc744 \uc6d0\ud558\ub294 api \uc5d0 ",(0,i.kt)("inlineCode",{parentName:"p"},"@PreAuthorize")," \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ucd94\uac00\ud574\ubcf4\uc790."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="BookController.kt"',title:'"BookController.kt"'},"@Controller\nclass BookController(private val bookService: BookService) {\n\n    @QueryMapping\n    // ADMIN \uad8c\ud55c\uc744 \uac00\uc9c4 \uc0ac\uc6a9\uc790\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\ub2e4.\n    @PreAuthorize(\"hasRole('ADMIN')\")\n    suspend fun books(): List<Book> = bookService.find()\n}\n")),(0,i.kt)("p",null,"\uc774\uc81c books \ub97c \uc870\ud68c\ud558\ub294 \uacbd\uc6b0 \uc720\ud6a8\ud55c jwt \ud1a0\ud070\uc758 role \uac12\uc774 ADMIN \uc774 \uc544\ub2cc\uacbd\uc6b0 \uc5d0\ub7ec\uc751\ub2f5\uc744 \ubc1b\uac8c\ub41c\ub2e4.\n\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub85c \uac80\uc99d\ud574\ubcf4\uc790."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kt",metastring:'title="BookControllerTest.kt"',title:'"BookControllerTest.kt"'},'"find" {\n    // given\n    val book = Book("title", "author", "isbn").also { it.id = "1" }\n    coEvery { bookService.find() } returns listOf(book)\n    val authTester = graphQlTester\n        .mutate()\n        // \ud5e4\ub354\uc5d0 \uc720\ud6a8\ud55c jwt \ud1a0\ud070\uc744 \ub123\uc5b4\uc900\ub2e4.\n        .headers { it.setBearerAuth("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiQURNSU4ifQ.YugxAPZbmANcCJRY1jC2sYnOhcngLeJpdH7jpEHrB_c") }\n        .build()\n\n    // when\n    val response = authTester\n        .documentName("books")\n        .execute()\n\n    // then\n    response\n        .path("books")\n        .entityList(Book::class.java)\n        .hasSize(1)\n        .contains(book)\n}\n')),(0,i.kt)("p",null,"\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc5d0\uc11c jwt \ud1a0\ud070\uc744 \ub123\uc5b4 \uc694\uccad\ud558\ub824\uba74 headers \uba54\uc18c\ub4dc\uc640 setBearerAuth \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4.\n\uc8fc\uc5b4\uc9c4 jwt \ud1a0\ud070\uc744 \ud655\uc778\ud574\ubcf4\uba74 role \uac12\uc774 ADMIN \uc774\ub77c\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\n\ub610\ud55c secret \uac12\uc744 \uc774\uc804 \ud30c\uc77c\uc5d0\uc11c \uc124\uc815\ud55c ",(0,i.kt)("inlineCode",{parentName:"p"},"secret")," \uc73c\ub85c \ub123\uc5b4\uc900 \uacbd\uc6b0 \uc720\ud6a8\ud55c jwt \ud1a0\ud070\uc774\ub77c\ub294 \uac83\ub3c4 \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"jwt",src:n(6967).Z,width:"2444",height:"1392"})))}g.isMDXComponent=!0},6967:function(e,t,n){t.Z=n.p+"assets/images/jwt-bda81f22148b116298b81bae813ae70c.png"},3184:function(e,t,n){t.Z=n.p+"assets/images/spring-initializr-c524e9698f8a57952f284b77c0271afe.png"}}]);