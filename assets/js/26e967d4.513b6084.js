"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7922],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return c}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),u=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},m=function(e){var n=u(e.components);return a.createElement(o.Provider,{value:n},e.children)},k={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=u(t),c=r,y=s["".concat(o,".").concat(c)]||s[c]||k[c]||l;return t?a.createElement(y,p(p({ref:n},m),{},{components:t})):a.createElement(y,p({ref:n},m))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,p=new Array(l);p[0]=s;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var u=2;u<l;u++)p[u]=t[u];return a.createElement.apply(null,p)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},3930:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return k}});var a=t(3117),r=t(102),l=(t(7294),t(3905)),p=["components"],i={title:"Kotlin\uc73c\ub85c \uc9c0\uc5f0\ud3c9\uac00 \uad6c\ud604\ud558\uae30",slug:"Kotlin\uc73c\ub85c-\uc9c0\uc5f0\ud3c9\uac00-\uad6c\ud604\ud558\uae30",authors:"jake",tags:["kotlin","lazy-evaluation"]},o=void 0,u={permalink:"/Kotlin\uc73c\ub85c-\uc9c0\uc5f0\ud3c9\uac00-\uad6c\ud604\ud558\uae30",editUrl:"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-01-30-lazy-eval-in-kotlin/index.mdx",source:"@site/blog/2022-01-30-lazy-eval-in-kotlin/index.mdx",title:"Kotlin\uc73c\ub85c \uc9c0\uc5f0\ud3c9\uac00 \uad6c\ud604\ud558\uae30",description:"\uc9c0\uc5f0\ud3c9\uac00\ub294 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \uc790\uc8fc \ub4f1\uc7a5\ud558\ub294 \uac1c\ub150\uc774\uba70 \uc5b4\ub5a4 \ud45c\ud604\uc2dd\uc758 \uac12\uc744 \ud544\uc694\ub85c \ud560 \ub54c\uae4c\uc9c0 \ud3c9\uac00\ub97c \ubbf8\ub8e8\ub294 \ubc29\ubc95\uc774\ub2e4.",date:"2022-01-30T00:00:00.000Z",formattedDate:"2022\ub144 1\uc6d4 30\uc77c",tags:[{label:"kotlin",permalink:"/tags/kotlin"},{label:"lazy-evaluation",permalink:"/tags/lazy-evaluation"}],readingTime:10.97,hasTruncateMarker:!0,authors:[{name:"Jake Son",title:"Backend Developer",url:"https://github.com/jbl428",imageURL:"https://avatars.githubusercontent.com/u/22140938?v=4",key:"jake"}],frontMatter:{title:"Kotlin\uc73c\ub85c \uc9c0\uc5f0\ud3c9\uac00 \uad6c\ud604\ud558\uae30",slug:"Kotlin\uc73c\ub85c-\uc9c0\uc5f0\ud3c9\uac00-\uad6c\ud604\ud558\uae30",authors:"jake",tags:["kotlin","lazy-evaluation"]},prevItem:{title:"MikroORM\uacfc TypeORM \ube44\uad50",permalink:"/MikroORM\uacfc-TypeORM-\ube44\uad50"},nextItem:{title:"ts-morph\ub85c \uac1c\ubc1c \ucee8\ubca4\uc158 \uac80\uc99d \uc790\ub3d9\ud654\ud558\uae30",permalink:"/ts-morph\ub85c-\uac1c\ubc1c-\ucee8\ubca4\uc158-\uac80\uc99d-\uc790\ub3d9\ud654\ud558\uae30"}},m={authorsImageUrls:[void 0]},k=[{value:"Lazy \uc704\uc784 \ud074\ub798\uc2a4",id:"lazy-\uc704\uc784-\ud074\ub798\uc2a4",level:2},{value:"\ucd94\uac00\uae30\ub2a5 \uad6c\ud604",id:"\ucd94\uac00\uae30\ub2a5-\uad6c\ud604",level:2},{value:"\uba54\ubaa8\uc774\uc81c\uc774\uc158",id:"\uba54\ubaa8\uc774\uc81c\uc774\uc158",level:3},{value:"\ud569\uc131",id:"\ud569\uc131",level:3},{value:"\ucee4\uc2a4\ud140 Lazy \ud074\ub798\uc2a4",id:"\ucee4\uc2a4\ud140-lazy-\ud074\ub798\uc2a4",level:2},{value:"\uc120\uc5b8",id:"\uc120\uc5b8",level:3},{value:"\ub17c\ub9ac\uc5f0\uc0b0",id:"\ub17c\ub9ac\uc5f0\uc0b0",level:3},{value:"map",id:"map",level:3},{value:"flatMap",id:"flatmap",level:3},{value:"sequence",id:"sequence",level:3}],s={toc:k};function c(e){var n=e.components,t=(0,r.Z)(e,p);return(0,l.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\uc9c0\uc5f0\ud3c9\uac00\ub294 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \uc790\uc8fc \ub4f1\uc7a5\ud558\ub294 \uac1c\ub150\uc774\uba70 \uc5b4\ub5a4 \ud45c\ud604\uc2dd\uc758 \uac12\uc744 \ud544\uc694\ub85c \ud560 \ub54c\uae4c\uc9c0 \ud3c9\uac00\ub97c \ubbf8\ub8e8\ub294 \ubc29\ubc95\uc774\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ud568\uc218\ud615 \uc5b8\uc5b4\uc5d0\uc11c\ub294 \uae30\ubcf8\uc73c\ub85c \ubaa8\ub4e0 \uacc4\uc0b0\uc774 \uc9c0\uc5f0\ud3c9\uac00\ub85c \ub3d9\uc791\ud558\uae30\uc5d0 \ub530\ub85c \uad6c\ud604\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc \uadf8\ub807\uc9c0 \uc54a\uc740 \uc5b8\uc5b4\uc5d0\uc11c\ub294 \uac01\uc790\uc758 \uc5b8\uc5b4 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud574 \uad6c\ud604\ud55c\ub2e4."),(0,l.kt)("p",null,"\ucf54\ud2c0\ub9b0\uc5d0\uc11c\ub294 \ud45c\uc900 \uc704\uc784 \ud074\ub798\uc2a4 \uc911 \ud558\ub098\uc778 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \ub97c \ud1b5\ud574 \uc9c0\uc5f0\ud3c9\uac00\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ud558\uc9c0\ub9cc \uc774\ub294 \uc644\ubcbd\ud55c \uc9c0\uc5f0\ud3c9\uac00\ub77c\uae30 \ubcf4\ub2e4 \ud504\ub85c\ud37c\ud2f0\uc758 \uc9c0\uc5f0 \ucd08\uae30\ud654\uc5d0 \uac00\uae5d\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 \uba54\ubaa8\uc774\uc81c\uc774\uc158 \uae30\ub2a5\uc774 \uc788\ub294 \ucee4\uc2a4\ud140 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uacfc\uc815\uc744 \uae30\uc220\ud558\ub824\uace0 \ud55c\ub2e4."),(0,l.kt)("blockquote",null,(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},"\ubaa8\ub4e0 \ucf54\ub4dc\ub294 ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/jbl428/study-note/tree/master/kotlin/lazy"},"https://github.com/jbl428/study-note/tree/master/kotlin/lazy")," \uc5d0 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("li",{parentName:"ul"},"\ubcf8 \uae00\uc740 ",(0,l.kt)("a",{parentName:"li",href:"https://thebook.io/080208"},"\ucf54\ud2c0\ub9b0\uc744 \ub2e4\ub8e8\ub294 \uae30\uc220")," \uc5d0 \uc788\ub294 \uc9c0\uc5f0\uacc4\uc0b0 \ucc55\ud130\uc758 \ub0b4\uc6a9\uc744 \ucc38\uace0\ud574 \uc791\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4."))),(0,l.kt)("h2",{id:"lazy-\uc704\uc784-\ud074\ub798\uc2a4"},"Lazy \uc704\uc784 \ud074\ub798\uc2a4"),(0,l.kt)("p",null,"\uba3c\uc800 \ucf54\ud2c0\ub9b0\uc758 Lazy \uc704\uc784 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud55c \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uc790."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},'internal class LazyTest {\n    @Test\n    fun `\ub0b4\uc7a5 Lazy \ud14c\uc2a4\ud2b8`() {\n        // given\n        class Foo {\n            val bar: String by lazy {\n                println("lazy")\n                "bar"\n            }\n\n            init {\n                println("init")\n                println(bar)\n            }\n        }\n\n        // when\n        val foo = Foo()\n        println(foo.bar)\n    }\n}\n')),(0,l.kt)("p",null,"\uc704 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud55c \ud6c4 \ub85c\uadf8\ub97c \uc0b4\ud3b4\ubcf4\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ucd9c\ub825\ub41c\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"init\nlazy\nbar\nbar\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Foo")," \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \uc2dc ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," \uc774 \uc2e4\ud589\ub418\uace0 ",(0,l.kt)("strong",{parentName:"p"},'"init"')," \uc774 \ucd9c\ub825\ub41c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uc774\ud6c4 ",(0,l.kt)("inlineCode",{parentName:"p"},"print(bar)")," \uc5d0\uc11c \ucc98\uc74c ",(0,l.kt)("inlineCode",{parentName:"p"},"bar")," \ub97c \ucc38\uc870\ud558\uba70 ",(0,l.kt)("inlineCode",{parentName:"p"},"by lazy")," \uc5d0 \uc9c0\uc815\ud55c \uba54\uc18c\ub4dc\uac00 \uc2e4\ud589\ub41c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ub530\ub77c\uc11c ",(0,l.kt)("strong",{parentName:"p"},'"lazy"'),", ",(0,l.kt)("strong",{parentName:"p"},'"bar"')," \uac00 \ucd9c\ub825\ub418\uace0 \uc774\ud6c4 ",(0,l.kt)("inlineCode",{parentName:"p"},"foo.bar")," \ub97c \ucc38\uc870\ud560 \ub54c\uc5d0\ub294 ",(0,l.kt)("strong",{parentName:"p"},'"lazy"')," \ub294 \ucd9c\ub825\ub418\uc9c0 \uc54a\ub294\uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,l.kt)("h2",{id:"\ucd94\uac00\uae30\ub2a5-\uad6c\ud604"},"\ucd94\uac00\uae30\ub2a5 \uad6c\ud604"),(0,l.kt)("p",null,"\uc774\ucc98\ub7fc ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc704\uc784 \ud074\ub798\uc2a4\ub294 \ud504\ub85c\ud37c\ud2f0\uc758 \ucd08\uae30\ud654\ub97c \uc9c0\uc5f0\uc2dc\ud0ac \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud574\uc8fc\uace0 \uc774\ub97c \ud655\uc7a5\ud574 \ub2e4\uc74c \uae30\ub2a5\uc744 \ucd94\uac00\ub85c \uad6c\ud604\ud558\ub824\uace0 \ud55c\ub2e4."),(0,l.kt)("h3",{id:"\uba54\ubaa8\uc774\uc81c\uc774\uc158"},"\uba54\ubaa8\uc774\uc81c\uc774\uc158"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"\uba54\ubaa8\uc774\uc81c\uc774\uc158(memoization)\uc740 \ucef4\ud4e8\ud130 \ud504\ub85c\uadf8\ub7a8\uc774 \ub3d9\uc77c\ud55c \uacc4\uc0b0\uc744 \ubc18\ubcf5\ud574\uc57c \ud560 \ub54c, \uc774\uc804\uc5d0 \uacc4\uc0b0\ud55c \uac12\uc744 \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud568\uc73c\ub85c\uc368 \ub3d9\uc77c\ud55c \uacc4\uc0b0\uc758 \ubc18\ubcf5 \uc218\ud589\uc744 \uc81c\uac70\ud558\uc5ec \ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589 \uc18d\ub3c4\ub97c \ube60\ub974\uac8c \ud558\ub294 \uae30\uc220\uc774\ub2e4. (\ucd9c\ucc98: wikipedia)")),(0,l.kt)("p",null,"\uc774\uc804 \uc608\uc81c\ucf54\ub4dc\uc5d0\uc11c ",(0,l.kt)("inlineCode",{parentName:"p"},"by lazy")," \uc5d0 \uae30\uc220\ud55c \ucd08\uae30\ud654 \ub85c\uc9c1\uc740 \ud55c \ubc88\ub9cc \uc2e4\ud589\ub418\uace0 \uc774\ud6c4\uc5d0\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"bar")," \uc758 \uac12\uc744 \ubc14\ub85c \uc0ac\uc6a9\ud558\ub4ef\uc774 \ud568\uc218\uc758 \ub85c\uc9c1\uc740 \ud55c \ubc88\ub9cc \uc2e4\ud589\ub418\uace0 \uc774\ud6c4\uc5d0\ub294 \uacb0\uacfc\ub97c \ubc14\ub85c \uc81c\uacf5\ud55c\ub2e4."),(0,l.kt)("h3",{id:"\ud569\uc131"},"\ud569\uc131"),(0,l.kt)("p",null,"\uc9c0\uc5f0\ud3c9\uac00 \uc778\uc2a4\ud134\uc2a4\uac00 \ubc18\ud658\ud558\ub294 \uacb0\uacfc\uc5d0 \uc0c8\ub85c\uc6b4 \ud568\uc218\ub97c \ud569\uc131\ud574 \uc0c8\ub85c\uc6b4 \uc9c0\uc5f0\ud3c9\uac00 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\uc900\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ud569\uc131\ud558\ub294 \ud568\uc218\ub294 \uc77c\ubc18\uc801\uc778 \uac12\uc744 \ubc18\ud658\ud558\uac70\ub098 \uc0c8\ub85c\uc6b4 \uc9c0\uc5f0 \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud558\ub294 \ud615\ud0dc\ub97c \uac00\uc9c4\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uc608\ub97c\ub4e4\uba74 \uc544\ub798\uc640 \uac19\uc740 \ud0c0\uc785\uc758 \ud568\uc218\ub97c \ub9d0\ud55c\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},"fun normal(a: Int): String\nfun newLazy(a: String): Lazy<Boolean>\n")),(0,l.kt)("h2",{id:"\ucee4\uc2a4\ud140-lazy-\ud074\ub798\uc2a4"},"\ucee4\uc2a4\ud140 Lazy \ud074\ub798\uc2a4"),(0,l.kt)("h3",{id:"\uc120\uc5b8"},"\uc120\uc5b8"),(0,l.kt)("p",null,"\uba3c\uc800 \uc544\ub798\uc640 \uac19\uc740 \ucee4\uc2a4\ud140 Lazy \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud55c\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},"class Lazy<out A>(fn: () -> A) {\n    private val value by lazy(fn)\n    operator fun invoke(): A {\n        return value\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \ub294 generic \ud074\ub798\uc2a4\ub85c \uc0dd\uc131\uc790 \ud30c\ub77c\ubbf8\ud130\ub85c \ud568\uc218\ub97c \ubc1b\uc73c\uba70 \ub0b4\ubd80 value \ubcc0\uc218\uc758 \ucd08\uae30\ud654\ub97c \uc704\ud574 \uc0ac\uc6a9\ub41c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"invoke")," \uba54\uc18c\ub4dc\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9c8\uce58 \ud568\uc218\ud638\ucd9c \ud558\ub4ef\uc774 \uc791\uc131\ud558\uba74 \uc218\ud589\ub418\ub294 \ub85c\uc9c1\uc73c\ub85c \ub2e8\uc21c\ud788 value \ub97c \ubc18\ud658\ud55c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uc774 \uba54\uc18c\ub4dc\uac00 \ucc98\uc74c \uc218\ud589\ub418\uba74 \ucd08\uae30\ud654 \ud568\uc218\uac00 \uc2e4\ud589\ub418\uba70 \uc774\ud6c4\uc5d0\ub294 \ud560\ub2f9\uc744 \uc644\ub8cc\ud55c value \ub97c \ubc14\ub85c \ubc18\ud658\ud55c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uc774\ucc98\ub7fc \ucf54\ud2c0\ub9b0\uc758 \uae30\ubcf8\ubb38\ubc95\ub9cc \uc0ac\uc6a9\ud574\ub3c4 \uc9c0\uc5f0\ud3c9\uac00\uc640 \uba54\ubaa8\uc774\uc81c\uc774\uc158\uc744 \uc190\uc27d\uac8c \uad6c\ud604\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4."),(0,l.kt)("p",null,"\ucf54\ud2c0\ub9b0\uc744 \ud1b5\ud574 \uc5bb\uc744 \uc218 \uc788\ub294 \ub610 \ud558\ub098\uc758 \uc7a5\uc810\uc740 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\ucf54\ub4dc\uac00 \ub9c8\uce58 \ud568\uc218 \uc120\uc5b8\ubb38\ucc98\ub7fc \ubcf4\uc774\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub2e4\ub294 \uac83\uc774\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uc774\uac70\ub294 \uac1c\uc778\uc801\uc778 \ucde8\ud5a5\uc774\uae34 \ud558\uc9c0\ub9cc \ub9c8\uce58 Lazy \ub85c \ub3d9\uc791\ud558\ub294 block \uc744 \ub9cc\ub4dc\ub294 \uac83\ucc98\ub7fc \ubcf4\uc5ec \ub354 \uae54\ub054\ud574\ubcf4\uc778\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},'val lazy = Lazy {\n    println("lazy")\n    true\n}\nval result = lazy() // prints "lazy", returns true\n')),(0,l.kt)("h3",{id:"\ub17c\ub9ac\uc5f0\uc0b0"},"\ub17c\ub9ac\uc5f0\uc0b0"),(0,l.kt)("p",null,"\ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\uc5d0\uc11c \ub17c\ub9ac\uc5f0\uc0b0\ub85c \ub4f1\uc7a5\ud558\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"or"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"and")," \ub294 \ubcf4\ud1b5 \uccab \ubc88\uc9f8 \ud45c\ud604\uc2dd\uc758 \uacb0\uacfc\uc5d0 \ub530\ub77c \ub2e4\uc74c \ud45c\ud604\uc2dd\uc744 \ud3c9\uac00\ud558\uc9c0 \uc54a\ub3c4\ub85d \ub3d9\uc791\ud55c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uc608\ub97c\ub4e4\uba74 ",(0,l.kt)("inlineCode",{parentName:"p"},"or")," \ub294 \uccab \ubc88\uc9f8 \ud45c\ud604\uc2dd\uc774 true \uc774\uba74 \ub2e4\uc74c \ud45c\ud604\uc2dd\uc740 \ud3c9\uac00\ud558\uc9c0 \uc54a\ub294\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\ub85c \uac10\uc2fc \uacbd\uc6b0\uc5d0\ub3c4 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ub3d9\uc791\ud558\uac8c \ub41c\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},'@Test\nfun `Or \ub3d9\uc791 \ud14c\uc2a4\ud2b8`() {\n    // given\n    val lazyA = Lazy {\n        true\n    }\n    val lazyB = Lazy<Boolean> {\n        throw Error("error")\n    }\n\n    // when\n    val result = lazyA() || lazyB()\n\n    // then\n    assertTrue(result)\n}\n')),(0,l.kt)("p",null,"\ub9cc\uc57d ",(0,l.kt)("inlineCode",{parentName:"p"},"lazyB()")," \ud45c\ud604\uc2dd\uc744 \ud3c9\uac00\ud55c\ub2e4\uba74 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\uc9c0\ub9cc ",(0,l.kt)("inlineCode",{parentName:"p"},"lazyA()")," \uac00 true \ub97c \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0 \ubb34\uc2dc\ub418\uace0 \ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud55c\ub2e4."),(0,l.kt)("h3",{id:"map"},"map"),(0,l.kt)("p",null,"\uc774\uc81c \ud568\uc218\ub97c \ud569\uc131\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \ucd94\uac00\ud574\ubcf4\uc790.",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"map")," \uba54\uc18c\ub4dc\ub294 \uc9c0\uc5f0\ud3c9\uac00 \uae30\ub2a5\uc774 \uc5c6\ub294 \uc77c\ubc18\uc801\uc778 \ud568\uc218\ub97c \ubc1b\uc544 \uc0c8\ub85c\uc6b4 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e0\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ub9c8\uce58 List \uc758 map \uba54\uc18c\ub4dc\uac00 \ubc30\uc5f4\ud615\ud0dc\ub294 \uadf8\ub300\ub85c \uc720\uc9c0\ud55c\ucc44\ub85c \ub0b4\ubd80 \uac12\ub4e4\ub9cc \ubc14\uafb8\ub294\uac83\ucc98\ub7fc \uc9c0\uc5f0\ud3c9\uac00\uc640 \uba54\ubaa8\uc774\uc81c\uc774\uc158 \uae30\ub2a5\uc740 \uadf8\ub300\ub85c \uc720\uc9c0\ud55c\ucc44\ub85c \ucd5c\uc885 \ud3c9\uac00 \uacb0\uacfc\ubb3c\ub9cc \ub2ec\ub77c\uc9c0\uac8c \ud574\uc900\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt",metastring:"{4}","{4}":!0},"class Lazy<out A>(fn: () -> A) {\n    private val value by lazy(fn)\n\n    fun <B> map(fn: (A) -> B): Lazy<B> = Lazy { fn(value) }\n}\n")),(0,l.kt)("p",null,"\ucf54\ub4dc\ub97c \ubcf4\uba74 \uad6c\ud604\uc774 \ub9e4\uc6b0 \uac04\ub2e8\ud55c \uac83\uc744 \uc54c \uc218 \uc788\ub2e4. \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub97c \ub0b4\ubd80 value \ub97c \uc804\ub2ec\ud574 \ud638\ucd9c\ud558\ub294 \ub85c\uc9c1\uc744 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \ub85c \uac10\uc2f8\uba74\ub41c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uc790."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},"@Test\nfun `Map \ub3d9\uc791 \ud14c\uc2a4\ud2b8`() {\n    // given\n    var count = 0\n    val lazy = Lazy {\n        count++\n        10\n    }\n\n    // when\n    val result = lazy.map { a -> a + 10 }\n\n    // then\n    assertEquals(count, 0)\n    assertEquals(result(), 20)\n    assertEquals(count, 1)\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"lazy")," \uc778\uc2a4\ud134\uc2a4\ub294 \uc2e4\ud589 \uc2dc ",(0,l.kt)("inlineCode",{parentName:"p"},"count")," \ub97c 1 \uc99d\uac00\uc2dc\ud0a4\uace0 10 \uc744 \ubc18\ud658\ud55c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uc774\ud6c4 map \uc744 \ud638\ucd9c\ud574 \ub0b4\ubd80\uac12\uc744 10 \uc99d\uac00\uc2dc\ud0a4\ub294 \uc0c8\ub85c\uc6b4 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud55c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ub530\ub77c\uc11c ",(0,l.kt)("inlineCode",{parentName:"p"},"result")," \ud638\ucd9c \uc804\uae4c\uc9c0\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"count")," \ub294 0 \uc774\uc9c0\ub9cc \ud638\ucd9c\uc774\ud6c4 1 \ub85c \ubcc0\ud558\uac8c\ub41c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ub610\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"reulst()")," \ub294 20 \uc744 \ubc18\ud658\ud558\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4."),(0,l.kt)("h3",{id:"flatmap"},"flatMap"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"map")," \uc774 \uc77c\ubc18\ud568\uc218\ub97c \ud569\uc131\ud558\ub294 \uc5ed\ud560\uc774\uc5c8\ub2e4\uba74 ",(0,l.kt)("inlineCode",{parentName:"p"},"flatMap")," \uc740 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \ud569\uc131\ud558\ub294 \uc5ed\ud560\uc744\ud55c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ub9cc\uc57d \ud574\ub2f9\ud568\uc218\ub97c ",(0,l.kt)("inlineCode",{parentName:"p"},"map")," \uc73c\ub85c \ud569\uc131\ud558\uba74 \uacb0\uacfc\uac00 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy<Lazy<A>>")," \ud615\ud0dc\uac00 \ub418\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\uae30 \ub9e4\uc6b0 \ubd88\ud3b8\ud574\uc9c4\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\uadf8\ub798\uc11c ",(0,l.kt)("inlineCode",{parentName:"p"},"flatMap")," \uc740 \uc774\ub984 \uadf8\ub300\ub85c ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \ub97c \ud55c \ub2e8\uacc4 flatten \ud574\uc8fc\ub294 \uc5ed\ud560\uc744 \ud55c\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt",metastring:"{4}","{4}":!0},"class Lazy<out A>(fn: () -> A) {\n    private val value by lazy(fn)\n\n    fun <B> flatMap(fn: (A) -> Lazy<B>): Lazy<B> = Lazy { fn(value)() }\n}\n")),(0,l.kt)("p",null,"\uc774\ubc88\uc5d0\ub3c4 \uad6c\ud604\uc740 \uac04\ub2e8\ud558\ub2e4. ",(0,l.kt)("inlineCode",{parentName:"p"},"fn(value)")," \uac00 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\ubbc0\ub85c \ubc14\ub85c \ud3c9\uac00\ud55c \ud6c4 \uacb0\uacfc\ub97c ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \ub85c \ub2e4\uc2dc \uac10\uc2f8\uba74 \ub41c\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},"@Test\nfun `FlatMap \ub3d9\uc791 \ud14c\uc2a4\ud2b8`() {\n    // given\n    var count = 0\n    val lazy = Lazy {\n        count++\n        10\n    }\n\n    // when\n    val result = lazy.flatMap { a -> Lazy { a + 10 } }\n\n    // then\n    assertEquals(count, 0)\n    assertEquals(result(), 20)\n    assertEquals(count, 1)\n    result()\n    assertEquals(count, 1)\n}\n")),(0,l.kt)("p",null,"\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub3c4 ",(0,l.kt)("inlineCode",{parentName:"p"},"map")," \uacfc \uac70\uc758 \uc720\uc0ac\ud558\uba70 ",(0,l.kt)("inlineCode",{parentName:"p"},"result()")," \ub97c 2\ubc88 \uc218\ud589\ud574\ub3c4 ",(0,l.kt)("inlineCode",{parentName:"p"},"count")," \uc758 \uac12\uc740 1 \ub85c \uc720\uc9c0\ub418\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4."),(0,l.kt)("h3",{id:"sequence"},"sequence"),(0,l.kt)("p",null,"\ub9c8\uc9c0\ub9c9\uc73c\ub85c ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\uc758 \ub9ac\uc2a4\ud2b8\ub97c \ub2e4\ub8f0 \ub54c \uc0ac\uc6a9\ud558\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"sequence")," \ub97c \uad6c\ud604\ud574\ubcf4\uc790.",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"sequence")," \uba54\uc18c\ub4dc\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"node.js")," \uac1c\ubc1c\uc790\uc5d0\uac8c \uce5c\uc219\ud55c ",(0,l.kt)("inlineCode",{parentName:"p"},"Promise.all")," \uacfc \ube44\uc2b7\ud55c \uc5ed\ud560\uc744 \ud55c\ub2e4."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Promise.all")," \uc740 promise \uc758 \ubc30\uc5f4\ud0c0\uc785\uc778 ",(0,l.kt)("inlineCode",{parentName:"p"},"Array<Promise<A>>")," \ub97c ",(0,l.kt)("inlineCode",{parentName:"p"},"Promise<Array<A>>")," \ud615\ud0dc\uc758 ",(0,l.kt)("strong",{parentName:"p"},"\ub2e8\uc77c promise"),"\ub85c \ub9cc\ub4e4\uc5b4\uc900\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ub9c8\ucc2c\uac00\uc9c0\ub85c ",(0,l.kt)("inlineCode",{parentName:"p"},"sequence")," \ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"List<Lazy<A>>")," \ud615\ud0dc\ub97c ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy<List<A>>")," \uc758 ",(0,l.kt)("strong",{parentName:"p"},"\ub2e8\uc77c Lazy \uc778\uc2a4\ud134\uc2a4"),"\ub85c \ub9cc\ub4e4\uc5b4\uc900\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},"fun <A> sequence(list: List<Lazy<A>>): Lazy<List<A>> = Lazy { list.map { it() } }\n")),(0,l.kt)("p",null,"\uc8fc\uc5b4\uc9c4 \ub9ac\uc2a4\ud2b8\ub97c \uc21c\ud68c\ud558\uba74\uc11c \uac01 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\ub97c \ud3c9\uac00\ud574 ",(0,l.kt)("inlineCode",{parentName:"p"},"List<A>")," \ub97c \uc5bb\ub294 \ub85c\uc9c1\uc744 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \ub85c \uac10\uc2fc\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kt"},"@Test\nfun `Sequence \ub3d9\uc791 \ud14c\uc2a4\ud2b8`() {\n    // given\n    var count = 0\n    val list = (1..10).map {\n        Lazy {\n            count++\n            it\n        }\n    }\n\n    // when\n    val result = sequence(list)\n\n    // then\n    assertEquals(count, 0)\n    assertEquals(result(), (1..10).toList())\n    assertEquals(count, 10)\n    result()\n    assertEquals(count, 10)\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list")," \ubcc0\uc218\ub294 ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\ub4e4\uc758 \ubc30\uc5f4\ub85c \ucd5c\uc885 \ud3c9\uac00\ub418\ub294 \uac12\uc744 \uc5bb\uc73c\ub824\uba74 \uac01 \ubc30\uc5f4\uc744 \uc21c\ud68c\uc5d0 \uc77c\uc77c\ud788 \uac12\uc744 \ud3c9\uac00\ud558\ub294 \ub85c\uc9c1\uc744 \uc791\uc131\ud574\uc57c\ud55c\ub2e4.",(0,l.kt)("br",{parentName:"p"}),"\n","\ud558\uc9c0\ub9cc ",(0,l.kt)("inlineCode",{parentName:"p"},"sequence")," \ud568\uc218\ub97c \ud65c\uc6a9\ud574 \ub2e8\uc77c ",(0,l.kt)("inlineCode",{parentName:"p"},"Lazy")," \uc778\uc2a4\ud134\uc2a4\ub85c \ub9cc\ub4e4\uc5c8\uace0 \uadf8 \uacb0\uacfc\uc778 ",(0,l.kt)("inlineCode",{parentName:"p"},"result")," \ub97c \uc218\ud589\ud558\uba74 \uc27d\uac8c \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\ub2e4."))}c.isMDXComponent=!0}}]);