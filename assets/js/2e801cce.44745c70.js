"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9450],{6029:function(n){n.exports=JSON.parse('{"blogPosts":[{"id":"/2022/05/18/graphql-server-by-github-page","metadata":{"permalink":"/2022/05/18/graphql-server-by-github-page","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-05-18-graphql-server-by-github-page/index.mdx","source":"@site/blog/2022-05-18-graphql-server-by-github-page/index.mdx","title":"Github Page \ub97c GraphQL \uc2a4\ud0a4\ub9c8 \uc11c\ubc84\ub85c \ub9cc\ub4e4\uae30","description":"\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 Github Page \ub97c GraphQL \uc2a4\ud0a4\ub9c8 \uc11c\ubc84\ub85c \ud65c\uc6a9\ud558\ub294 \uacfc\uc815\uc744 \uae30\uc220\ud558\ub824\uace0 \ud55c\ub2e4.","date":"2022-05-18T00:00:00.000Z","formattedDate":"2022\ub144 5\uc6d4 18\uc77c","tags":[{"label":"graphql","permalink":"/tags/graphql"},{"label":"github","permalink":"/tags/github"},{"label":"page","permalink":"/tags/page"}],"readingTime":10,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"Github Page \ub97c GraphQL \uc2a4\ud0a4\ub9c8 \uc11c\ubc84\ub85c \ub9cc\ub4e4\uae30","authors":"jake","tags":["graphql","github","page"]},"nextItem":{"title":"kotlin \uc5d0\uc11c testcontainers \uc0ac\uc6a9\ud558\uae30","permalink":"/2022/04/30/testcontainers-in-kotlin"}},"content":"\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 Github Page \ub97c GraphQL \uc2a4\ud0a4\ub9c8 \uc11c\ubc84\ub85c \ud65c\uc6a9\ud558\ub294 \uacfc\uc815\uc744 \uae30\uc220\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## \uc0c1\ud669\\n\\n\ucd5c\uadfc GraphQL \uc744 \uc0ac\uc6a9\ud558\ub294 \uc0ac\uc774\ub4dc \ud504\ub85c\uc81d\ud2b8\ub97c \uc9c4\ud589\ud558\uace0 \uc788\ub294\ub370 FE \uc5d0\uc11c [graphql-codegen](https://www.graphql-code-generator.com/) \uc744 \ud65c\uc6a9\ud574 \uc2a4\ud0a4\ub9c8 \ud0c0\uc785\uc815\ubcf4\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud558\ub294 (codegen) \uc0c1\ud669\uc774 \uc0dd\uacbc\ub2e4.  \\n\ubcf4\ud1b5 \ud0c0\uc785\uc815\ubcf4\ub97c \ub9cc\ub4e4\ub54c\uc5d0\ub294 `introspection` \uc744 \uc9c0\uc6d0\ud558\ub294 GraphQL \uc11c\ubc84 URL \uc744 \uc81c\uacf5\ud558\uac70\ub098 schema \ud30c\uc77c \uacbd\ub85c\ub97c \uc9c0\uc815\ud574\uc57c \ud55c\ub2e4.  \\n\ub2f9\uc2dc GraphQL \uc11c\ubc84\ub97c \ub530\ub85c \ub744\uc6b0\uae30 \uc704\ud55c \uc138\ud305\uc774 \uc5c6\uc5c8\uace0 \uc11c\ubc84\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 \uc790\uccb4\uac00 \ube44\uc6a9\uc774 \ub4e4\uae30\ub54c\ubb38\uc5d0 \uae30\uc874\uc5d0\ub294 FE \uc800\uc7a5\uc18c\uc5d0\uc11c BE \uc800\uc7a5\uc18c\uc758 \uc2a4\ud0a4\ub9c8 \ud30c\uc77c\uc744 \ubcf5\uc0ac\ud574\uc11c \uc0ac\uc6a9\ud558\uc600\ub2e4.\\n\\n\uc774 \ubc29\uc2dd\uc758 \ub2e8\uc810\uc740 \uc2a4\ud0a4\ub9c8 \ubcc0\uacbd \uc2dc \ub9e4\ubc88 BE \uc800\uc7a5\uc18c\uc5d0\uc11c \ubcf5\uc0ac\ud558\ub294 \uacfc\uc815\uc744 \uac70\uccd0\uc57c \ud558\uae30\uc5d0 \ub9e4\uc6b0 \ubc88\uac70\ub85c\uc6e0\ub2e4.  \\nBE \uc791\uc5c5\uc774 \ub05d\ub098\uba74 \uc2a4\ud0a4\ub9c8\uac00 \ubcc0\uacbd\ub418\uc5c8\uc74c\uc744 \ub9e4\ubc88 FE \uc5d0\uac8c \uc54c\ub824\uc8fc\uc5b4\uc57c \ud558\ub294 \uac83 \ub610\ud55c \ubd88\ud3b8\ud558\uc600\ub2e4.  \\n\ucc98\uc74c\uc5d0\ub294 \ubb34\ub8cc\ub85c GraphQL \uc11c\ubc84\ub97c \uc81c\uacf5\ud574\uc8fc\ub294 \uc11c\ube44\uc2a4\ub97c \ucc3e\uc544\ubcf4\ub824\uace0 \ud588\ub2e4.  \\n\ud558\uc9c0\ub9cc \uc0dd\uac01\ud574\ubcf4\ub2c8 codegen \uc744 \uc704\ud574\uc11c Graphql \uc11c\ubc84\uc758 \ubaa8\ub4e0 \uae30\ub2a5\uc774 \ud544\uc694\ud55c\uac8c \uc544\ub2c8\ub77c `introspection` \uacb0\uacfc\ub9cc \ub0b4\ub824\uc904 \uc218 \uc788\uc73c\uba74 \ub418\uae30\uc5d0 \uc815\uc801 \ud398\uc774\uc9c0 \uae30\ub2a5\ub9cc \uc788\uc73c\uba74 \ucda9\ubd84\ud558\ub2e4\uace0 \uc0dd\uac01\ud588\ub2e4.  \\n\ub530\ub77c\uc11c \uc774\ubc88 \uae00\uc740 Github Page \ub97c \ud65c\uc6a9\ud558\ub294 \uacfc\uc815\uc744 \ub2f4\uace0 \uc788\uc9c0\ub9cc \ub2e4\ub978 \uc815\uc801 \ud398\uc774\uc9c0\ub97c \uc81c\uacf5\ud558\ub294 \uc5b4\ub290 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud574\ub3c4 \ub3d9\uc77c\ud558\uac8c \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4.\\n\\n## Introspection\\n\\nGraphQL \uc5d0\uc11c `introspection` \uc774\ub780 \uc2a4\ud0a4\ub9c8 \ud0c0\uc785\uacfc \ud544\ub4dc\uac19\uc740 \uba54\ud0c0\uc815\ubcf4\ub97c \uc81c\uacf5\ud558\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4.  \\n\uc774\ub97c \ud1b5\ud574 \uc11c\ubc84\uac00 \uc81c\uacf5\ud558\ub294 Query, Mutation, Subscription \uc758 \uc774\ub984, \ud544\ub4dc \ud0c0\uc785\uac19\uc740 \uc815\ubcf4\ub97c \ud655\uc778\ud560 \uc218 \uc788\uac8c\ub41c\ub2e4.  \\n`graphql-codegen` \uc774\ub098 `apollo-sandbox` \uc640 \uac19\uc740 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\uac00 \ud544\uc694\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \uc774 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud55c\ub2e4.  \\n\uc2a4\ud0a4\ub9c8 \uc815\ubcf4\uc5d0 \ub300\ud55c \uc0c1\uc138\ud55c \uc815\ubcf4\ub97c \uc804\ub2ec\ud558\uae30\uc5d0 \ubcf4\ud1b5 \uc6b4\uc601\ud658\uacbd\uc5d0\uc11c\ub294 \uc774 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\ud574\uc57c \ud55c\ub2e4.\\n\\n\ub370\uc774\ud130\ub97c \uac00\uc838\uc624\uae30 \uc704\ud55c \uc694\uccad\uc740 GraphQL \uc694\uccad\ubc29\ubc95\uc744 \uadf8\ub300\ub85c \uc0ac\uc6a9\ud558\uba74 \ub418\uba70 \ub2e8\uc21c\ud788 body \uc6d0\ud558\ub294 \uc815\ubcf4\ub97c \ub123\uc5b4\uc900\ub2e4.  \\n\uc608\ub97c\ub4e4\uba74 \uc544\ub798\uc640 \uac19\uc740 \uc694\uccad\uc744 \ud558\uba74 \uc11c\ubc84\uac00 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \ud0c0\uc785\uc774\ub984\uc744 \uc5bb\uc744 \uc218 \uc788\ub2e4.\\n\\n- \uc694\uccad\\n\\n```graphql\\nquery {\\n  __schema {\\n    types {\\n      name\\n    }\\n  }\\n}\\n```\\n\\n- \uc751\ub2f5\\n\\n```json\\n{\\n  \\"data\\": {\\n    \\"__schema\\": {\\n      \\"types\\": [\\n        {\\n          \\"name\\": \\"Query\\"\\n        },\\n        {\\n          \\"name\\": \\"String\\"\\n        },\\n        ... \uc0dd\ub7b5\\n      ]\\n    }\\n  }\\n}\\n```\\n\\ncodegen \uc5d0\uc11c\ub294 \uc704\ucc98\ub7fc \ub2e8\uc21c\ud788 type name \ubfd0\ub9cc \uc544\ub2c8\ub77c \ubaa8\ub4e0 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ub97c \uc694\uad6c\ud558\uae30\uc5d0 \uc694\uccad body \uc5d0 \uad49\uc7a5\ud788 \ub9ce\uc740 \ub0b4\uc6a9\uc774 \ub4e4\uc5b4\uac04\ub2e4.  \\ncodegen \uc774 graphql \uc11c\ubc84\ub85c \uc694\uccad\ud560 \ub54c \uc5b4\ub5a4 body \ub97c \uc0ac\uc6a9\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 `graphql-js` \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 `getIntrospectionQuery` \ud568\uc218\ub97c \ud638\ucd9c\ud558\uba74 \ub41c\ub2e4.\\n\\n```typescript\\nimport { getIntrospectionQuery } from \'graphql\';\\n\\nconsole.log(getIntrospectionQuery());\\n```\\n\\n## GraphQL \uc758 GET \uc694\uccad\\n\\nGraphQL \uc740 \ubcf4\ud1b5 \ub300\ubd80\ubd84\uc758 \uc694\uccad\uc5d0 `POST` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc GraphQL \uc2a4\ud329\ubb38\uc11c\ub97c \ubcf4\uba74 `GET` \uba54\uc18c\ub4dc\ub3c4 \uc9c0\uc6d0\ud574\uc57c \ud55c\ub2e4.\\n\\n- https://graphql.org/learn/serving-over-http/#http-methods-headers-and-body\\n\\nGET \uba54\uc18c\ub4dc\ub85c \uc694\uccad\ud558\ub824\uba74 \uae30\uc874 body \uc5d0 \ub123\uc5c8\ub358 \ub0b4\uc6a9\uc744 \ub2e8\uc21c\ud788 querystring \uc5d0 \ub123\uc5b4\uc8fc\uba74 \ub41c\ub2e4.\\n\\n> http://myapi/graphql?query=`GraphQL body`\\n\\ncodegen \ub610\ud55c GraphQL \uc11c\ubc84\ub85c \uc694\uccad \uc2dc \uc5b4\ub5a4 \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uac83\uc778\uc9c0 \uc9c0\uc815\ud560 \uc218 \uc788\ub2e4.\\n\\n\uc9c0\uae08\uae4c\uc9c0 \uc54c\uc544\ubcf8 \ub0b4\uc6a9\uc744 \uc815\ub9ac\ud574\ubcf4\uba74 codegen \uc744 \uc704\ud574\uc11c\ub294 \ubaa8\ub4e0 \uc2a4\ud0a4\ub9c8 \uc815\ubcf4\ub97c \uc704\ud574 `introspection` \uc694\uccad\uc744 \ud558\uba70 `GET` \ub610\ub294 `POST` \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4.  \\n\uc774\ub294 \uaf2d GraphQL \uc11c\ubc84\uac00 \uc544\ub2c8\ub354\ub77c\ub3c4 `introspection` \uc694\uccad\uc758 \uc751\ub2f5 body \ub97c \ud30c\uc77c\ub85c \ub9cc\ub4e0 \ub2e4\uc74c\uc5d0 url \ub85c \ud574\ub2f9 \ud30c\uc77c\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uac8c\ud55c\ub2e4\uba74 codegen \uc744 \uc0ac\uc6a9\ud558\ub294\ub370 \uc804\ud600 \ubb38\uc81c\uac00 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4.  \\n\uc989 S3 \uac19\uc740 \ubc84\ud0b7 \uc11c\ube44\uc2a4\ub098 \uc815\uc801 \ud398\uc774\uc9c0 \uc11c\ube44\uc2a4\ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\ub2e4.\\n\ud558\uc9c0\ub9cc \ud604\uc7ac \ucf54\ub4dc \uc800\uc7a5\uc18c\ub85c Github \uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc73c\ubbc0\ub85c \uc2a4\ud0a4\ub9c8 \ud30c\uc77c\ub3c4 Github \uc800\uc7a5\uc18c\ub85c \uad00\ub9ac\ud558\uace0 \uc2f6\uc5c8\uae30\uc5d0 Github Page \ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \ud558\uc600\ub2e4.\\n\\n## \uc124\uc815\\n\\n### Introspection \ud30c\uc77c \uc0dd\uc131\\n\\n\uba3c\uc800 `introspection` \uc694\uccad\uc758 \uc751\ub2f5 json \uc744 \ud30c\uc77c\ub85c \uc800\uc7a5\ud574\uc57c \ud55c\ub2e4.  \\n`graphql-js` \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 GraphQL \uc2a4\ud0a4\ub9c8\ub97c \uc77d\uc5b4\uc11c `introspection` \uacb0\uacfc\ub85c \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \ud568\uc218\ub97c \uc81c\uacf5\ud55c\ub2e4.  \\n\ub9cc\uc57d \uc2a4\ud0a4\ub9c8 \ud30c\uc77c\uc774 \uc874\uc7ac\ud55c\ub2e4\uba74 \ud574\ub2f9 \ud30c\uc77c\uc744 \uc77d\uc5b4\uc11c `buildSchema` \ud568\uc218\ub97c \ud1b5\ud574 \uc2a4\ud0a4\ub9c8 \uac1d\uccb4\ub85c \ub9cc\ub4e0 \ud6c4 `introspectionFromSchema` \ud568\uc218\ub97c \ud638\ucd9c\ud558\uba74 \ub41c\ub2e4.\\n\\n```ts\\nimport { readFileSync, writeFileSync } from \'fs\';\\nimport { buildSchema, introspectionFromSchema } from \'graphql\';\\n\\nconst schema = readFileSync(\'\uc2a4\ud0a4\ub9c8 \ud30c\uc77c \uacbd\ub85c\');\\n\\nconst introspectionQuery = introspectionFromSchema(\\n  buildSchema(schema.toString())\\n);\\n\\nwriteFileSync(\\n  \'introspection.json\',\\n  // GraphQL \uc751\ub2f5\uc740 \ud56d\uc0c1 data \ud544\ub4dc\uc548\uc5d0 \ub4e4\uc5b4\uac00\ubbc0\ub85c \uc544\ub798\uc640\uac19\uc774 \uac10\uc2f8\uc8fc\uc5b4\uc57c \ud55c\ub2e4\\n  JSON.stringify({ data: introspectionQuery })\\n);\\n```\\n\\n### Github Action \uc124\uc815\\n\\n\uc774\uc81c \uc2a4\ud0a4\ub9c8\uc758 \ubcc0\uacbd\uc774 \ubc1c\uc0dd\ud55c \uacbd\uc6b0 Github Page \ub85c \ub3d9\uc791\ud558\ub294 \uc2a4\ud0a4\ub9c8 \uc800\uc7a5\uc18c\uc5d0 \uc62c\ub77c\uac08 `introspection` \ud30c\uc77c\uc744 \uac31\uc2e0\ud558\ub294 \uc791\uc5c5\uc774 \ud544\uc694\ud558\ub2e4.  \\nBE \uc800\uc7a5\uc18c\uc758 `main` \ube0c\ub79c\uce58\uc5d0 \ucee4\ubc0b\uc774 \ud478\uc2dc\ub418\uba74 \uc2a4\ud0a4\ub9c8 \uc800\uc7a5\uc18c\uc758 workflow \ub97c \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc73c\ub85c \ud574\uacb0\ud560 \uc218 \uc788\ub2e4.  \\n\ud574\ub2f9 workflow \ub294 BE \uc800\uc7a5\uc18c\ub97c \uac00\uc838\uc640 `introspection` \ud30c\uc77c\uc744 \ub9cc\ub4e4\uace0 \uc774\ub97c \ucee4\ubc0b\ud574 \uc800\uc7a5\uc18c\uc5d0 push \ud558\ub294 \uacfc\uc815\uc774 \ud544\uc694\ud558\ub2e4.\\n\\n:::info\\n\uc2a4\ud0a4\ub9c8 \uc800\uc815\uc18c\ub97c \ub530\ub85c \ubd84\ub9ac\ud558\uc9c0 \uc54a\uace0 GraphQL \uc11c\ubc84 \uc800\uc7a5\uc18c \ud558\ub098\ub85c \ud1b5\uc77c\ud560 \uc218\ub3c4 \uc788\ub2e4.  \\n`Github content API` \ub97c \ud65c\uc6a9\ud558\uba74 \uc800\uc7a5\uc18c\uc5d0 \uc62c\ub77c\uac04 \ud30c\uc77c\ub0b4\uc6a9\ub9cc \uc751\ub2f5\uc73c\ub85c \ubc1b\uc744 \uc218 \uc788\uae30\uc5d0 `introspection` \ud30c\uc77c\ub9cc Github \uc5d0 \ud478\uc2dc\ud558\uba74 \ub41c\ub2e4.  \\n\ud574\ub2f9 \ud30c\uc77c\uc744 \uac00\uc838\uc624\ub294 \uc8fc\uc18c\ub97c \uc54c\ub824\uba74 \uc544\ub798 \uc6f9 \ud654\uba74\uc5d0\uc11c `raw` \ubc84\ud2bc\uc744 \ud074\ub9ad\ud558\uba74 \ub41c\ub2e4.  \\n\ud574\ub2f9 \uc8fc\uc18c\ub97c codegen \uc5d0 \uc81c\uacf5\ud558\uba74 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud55c\ub2e4.\\n\\n![github-raw](github-raw.png)\\n:::\\n\\n\uba3c\uc800 \uc11c\ub85c \ub2e4\ub978 \uc800\uc7a5\uc18c\uc758 workflow \ub97c \uc2e4\ud589\ud574\uc57c \ud558\ub294\ub370 `repository_dispatch` \uc774\ubca4\ud2b8\ub97c \ud65c\uc6a9\ud574 \ud574\uacb0\ud560 \uc218 \uc788\ub2e4.  \\n\ub2e4\uc74c \ube14\ub85c\uadf8 \uae00\uc744 \ucc38\uc870\ud558\uba74 \ud1a0\ud070 \ubc1c\uae09\uc774\ub098 \uc124\uc815\ubc29\ubc95\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\\n\\n- https://blog.outsider.ne.kr/1589\\n\\n\ub9cc\uc57d \uc2a4\ud0a4\ub9c8 \uc800\uc7a5\uc18c\uac00 `santa-close/santa-close.github.io` \ub77c \ud55c\ub2e4\uba74 GraphQL \uc11c\ubc84 \uc800\uc7a5\uc18c\uc758 workflow \ud30c\uc77c\uc5d0 \uc544\ub798\uc640 \uac19\uc740 \ub0b4\uc6a9\uc744 \ub123\uc5b4\uc900\ub2e4.  \\nSCHEMA_PAGE_TOKEN \ub294 `Personal access token` \uc73c\ub85c \ubc1c\uae09\ubc29\ubc95\uc740 \ube14\ub85c\uadf8 \uae00\uc744 \ucc38\uc870\ud55c\ub2e4.\\n\\n```yaml\\njobs:\\n  gradle:\\n    runs-on: ubuntu-latest\\n      steps:\\n      - name: Trigger dispatch to generate graphql schema\\n        run: gh api /repos/santa-close/santa-close.github.io/dispatches -f event_type=\'schema\'\\n        env:\\n          GITHUB_TOKEN: ${{ secrets.SCHEMA_PAGE_TOKEN }}\\n```\\n\\n\uc2a4\ud0a4\ub9c8 \uc800\uc7a5\uc18c\uc758 workflow \ud30c\uc77c\uc5d0\uc11c\ub294 \uc11c\ubc84 \uc800\uc7a5\uc18c\ub97c checkout \ud6c4 `introspection` \ud30c\uc77c \uc0dd\uc131 \ud6c4 \ubcc0\uacbd\uc0ac\ud56d\uc744 \ucee4\ubc0b\ud574 \ud478\uc2dc\ud55c\ub2e4.\\n\\n```yaml\\nname: Update graphql introspection\\n\\non:\\n  repository_dispatch:\\n    types: [ schema ] # \uc774\ubca4\ud2b8 \uc720\ud615\uc774 schema \uc77c \ub54c workflow \uc2e4\ud589\\n\\njobs:\\n  schema:\\n    runs-on: ubuntu-latest\\n\\n    steps:\\n      - name: Checkout server repo\\n        uses: actions/checkout@v3\\n        with:\\n          repository: santa-close/santa-close-server # \uc11c\ubc84 \uc800\uc7a5\uc18c\ub97c \uba3c\uc800 checkout\\n          ref: main\\n\\n      - name: Setup node.js\\n        uses: actions/setup-node@v3\\n        with:\\n          cache: \'yarn\'\\n\\n      - name: Install dependencies\\n        run: yarn install\\n\\n      - name: Generate introspection\\n        run: yarn run generate # \uc774 \uba85\ub839\uc5b4\ub294 \uc608\uc2dc\uc774\uba70 introspection \ud30c\uc77c\uc744 \ud2b9\uc815 \uacbd\ub85c\uc5d0 \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \uc2a4\ud06c\ub9bd\ud2b8\ub77c \uac00\uc815\ud558\uc790.\\n\\n      - name: Checkout main repo\\n        uses: actions/checkout@v3\\n        with:\\n          path: main-repo # with \uc635\uc158\uc5d0 path \uac00 \uc5c6\ub2e4\uba74 \ubcf8 \uc800\uc7a5\uc18c (\uc2a4\ud0a4\ub9c8 \uc800\uc7a5\uc18c) \ub97c checkout \ud558\uba70 \uadf8 \uc704\uce58\ub294 main-repo \uac00 \ub41c\ub2e4.\\n          ref: main\\n\\n      - name: Commit introspection.json\\n        working-directory: ./main-repo\\n        continue-on-error: true\\n        # introspection \ud30c\uc77c\uc744 \uc800\uc7a5\uc18c\ub85c \ubcf5\uc0ac\ud558\ub294 cp \uba85\ub839\uc5b4\ub294 \uc0dd\uc131\ud55c \ud30c\uc77c\uba85\uacfc \uc704\uce58\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc57c\ud55c\ub2e4.\\n        # \ub9c8\uc9c0\ub9c9\uc5d0 \uc2e0\uaddc introspection \uacb0\uacfc\ub97c \uc800\uc7a5\uc18c\uc5d0 \ud478\uc2dc\ud55c\ub2e4.\\n        run: |\\n          git config user.name github-actions\\n          git config user.email github-actions@github.com\\n          cp ../introspection.json . \\n          git add introspection.json\\n          git commit -m \\"update introspection\\"\\n          git push \\n```\\n\\n\uc774\uc81c \uac31\uc2e0\ud55c \ud30c\uc77c\uc744 Github Page \uc8fc\uc18c\ub97c \ud1b5\ud574 \ud655\uc778\ud560 \uc218 \uc788\uc73c\uba70 \ud574\ub2f9 url \uc744 codegen \uc5d0 \uc81c\uacf5\ud558\uba74 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud55c\ub2e4.\\n\\n## \ucc38\uace0\uc0ac\ud56d\\n\\n\uc774\ubc88 \uae00\uc5d0\uc11c \ub098\uc628 \uc138\ud305\uc740 \ubaa8\ub450 \uc544\ub798 \uc800\uc7a5\uc18c\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\\n\\n- \uc11c\ubc84 \uc800\uc7a5\uc18c : https://github.com/santa-close/santa-close-server\\n- \uc2a4\ud0a4\ub9c8 \uc800\uc7a5\uc18c : https://github.com/santa-close/santa-close.github.io\\n- Introspection url: https://santa-close.github.io/introspection.json"},{"id":"/2022/04/30/testcontainers-in-kotlin","metadata":{"permalink":"/2022/04/30/testcontainers-in-kotlin","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-04-30-testcontainers-in-kotlin/index.mdx","source":"@site/blog/2022-04-30-testcontainers-in-kotlin/index.mdx","title":"kotlin \uc5d0\uc11c testcontainers \uc0ac\uc6a9\ud558\uae30","description":"\uc774\uc804\uc5d0 node.js \ud658\uacbd\uc5d0\uc11c testcontainers \ub97c \ud65c\uc6a9\ud55c \uae00\uc744 \uc791\uc131\ud558\uc600\ub2e4.","date":"2022-04-30T00:00:00.000Z","formattedDate":"2022\ub144 4\uc6d4 30\uc77c","tags":[{"label":"kotlin","permalink":"/tags/kotlin"},{"label":"testcontainers","permalink":"/tags/testcontainers"}],"readingTime":4.09,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"kotlin \uc5d0\uc11c testcontainers \uc0ac\uc6a9\ud558\uae30","authors":"jake","tags":["kotlin","testcontainers"]},"prevItem":{"title":"Github Page \ub97c GraphQL \uc2a4\ud0a4\ub9c8 \uc11c\ubc84\ub85c \ub9cc\ub4e4\uae30","permalink":"/2022/05/18/graphql-server-by-github-page"},"nextItem":{"title":"graphql \uc7a5\uc810","permalink":"/2022/03/27/graphql-restapi"}},"content":"\uc774\uc804\uc5d0 node.js \ud658\uacbd\uc5d0\uc11c `testcontainers` \ub97c \ud65c\uc6a9\ud55c \uae00\uc744 \uc791\uc131\ud558\uc600\ub2e4.  \\n\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc5d0 \uc9c1\uc811 \ucee8\ud14c\uc774\ub108\ub97c \uc2dc\uc791\ud558\uace0 \uc885\ub8cc\ud558\ub294 \ub85c\uc9c1\uc744 \ub123\uc5b4\uc57c \ud588\uc9c0\ub9cc jvm \uc5d0\uc11c\ub294 annotation \uc744 \ud65c\uc6a9\ud574 \ub354 \uac04\uacb0\ud55c \ucf54\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub2e4.  \\n\uc774\ubc88\uc5d0\ub294 Kotlin/Jvm \ud658\uacbd\uc5d0\uc11c `testcontainers` \ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \uc18c\uac1c\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## \uc0c1\ud669\\n\\ns3 \ub97c \uc0ac\uc6a9\ud558\ub294 \ub85c\uc9c1\uc744 `junit`, `localstack` \uc744 \ud65c\uc6a9\ud574 \ud14c\uc2a4\ud2b8\ub97c \ud558\ub294 \uc0c1\ud669\uc744 \uac00\uc815\ud574\ubcf4\uc790.  \\ndocker \ub97c \ud65c\uc6a9\ud574 \ud14c\uc2a4\ud2b8 \uc2e4\ud589\uc804\uc5d0 \ubbf8\ub9ac `localstack` \ucee8\ud14c\uc774\ub108\ub97c \ub744\uc6b0\ub294 \ubc29\ubc95\uc774 \uc788\uc9c0\ub9cc \ubc88\uac70\ub85c\uc6b8 \uc218 \uc788\ub2e4.  \\n\ud558\uc9c0\ub9cc `testcontainers` \ub97c \uc0ac\uc6a9\ud558\uba74 \ub2e8\uc77c \ud14c\uc2a4\ud2b8 \uc2e4\ud589 \uc18d\ub3c4\ub294 \ub290\ub9ac\uc9c0\ub9cc \uc0ac\uc804\uc5d0 \ud544\uc694\ud55c \uc138\ud305\uc774 \uc5c6\uc5b4\uc11c \ud3b8\ub9ac\ud558\ub2e4.\\n\\n## \ud328\ud0a4\uc9c0 \uc124\uce58\\n\\njava \uc5b8\uc5b4\uc6a9 `testcontainers` \uc5d0\uc11c\ub294 `localstack` \uc804\uc6a9 \ubaa8\ub4c8\uc744 \uc9c0\uc6d0\ud558\uae30 \ub54c\ubb38\uc5d0 node.js \ubcf4\ub2e4 \ud3b8\ub9ac\ud558\uac8c \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub2e4.  \\ngradle \ud658\uacbd\uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc744 \ub123\uc5b4\uc900\ub2e4.\\n\\n```kts\\ndependencies {\\n  testImplementation(\\"org.testcontainers:testcontainers:1.17.1\\")\\n  testImplementation(\\"org.testcontainers:junit-jupiter:1.17.1\\")\\n  testImplementation(\\"org.testcontainers:localstack:1.17.1\\")\\n}\\n```\\n\\njunit5 \uc6a9 \ud328\ud0a4\uc9c0\uc640 localstack \uc6a9 \ud328\ud0a4\uc9c0\ub97c \ud568\uaed8 \uc124\uce58\ud55c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.  \\n\ub9cc\uc57d \uac01\uac01\uc758 \ubc84\uc804\uc744 \uba85\uc2dc\ud558\ub294\uac8c \ubc88\uac70\ub85c\uc6b4 \uacbd\uc6b0 `BOM` \ud328\ud0a4\uc9c0\ub97c \ud65c\uc6a9\ud574 \ub2e4\uc74c\uacfc \uac19\uc774 \uc124\uc815\ud560 \uc218 \uc788\ub2e4.\\n\\n```kts\\ndependencies {\\n  testImplementation(platform(\\"org.testcontainers:testcontainers-bom:1.17.1\\"))\\n  testImplementation(\\"org.testcontainers:junit-jupiter\\")\\n  testImplementation(\\"org.testcontainers:localstack\\")\\n}\\n```\\n\\ns3 \ub97c \uc704\ud55c aws-sdk \ub97c \uc124\uce58\ud574\uc57c \ud558\ub294\ub370 \uc774\ubc88 \uc608\uc81c\uc5d0\uc11c\ub294 Kotlin \uc6a9 sdk \ub97c \uc0ac\uc6a9\ud558\uace0\uc790 \ud55c\ub2e4.  \\n\ud574\ub2f9 sdk \ub294 \uae00 \uc791\uc131 \uc2dc\uc810\uc5d0\uc11c \uac1c\ubc1c\uc790 \ud504\ub9ac\ubdf0 \uc0c1\ud0dc\uc774\uae30 \ub54c\ubb38\uc5d0 **\uc6b4\uc601\ud658\uacbd \uc801\uc6a9\uc740 \uad8c\uc7a5\ud558\uc9c0 \uc54a\ub294\ub2e4.**\\n\\n```kts\\ndependencies {\\n    implementation(\\"aws.sdk.kotlin:s3:0.+\\")\\n    implementation(\\"com.amazonaws:aws-java-sdk-s3:1.12.200\\")\\n}\\n```\\n\\n## \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\\n\\n\uc774\uc81c \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc900\ube44\uac00 \ub418\uc5c8\ub2e4.  \\ns3 \ub97c \uc2e4\ud589\ud558\ub294 `localstack` \ucee8\ud14c\uc774\ub108\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ub9cc\ub4e4 \uc218 \uc788\ub2e4.  \\n\ud574\ub2f9 \ucee8\ud14c\uc774\ub108\ub294 \ud14c\uc2a4\ud2b8\uac00 \ub05d\ub098\uba74 \uc790\ub3d9\uc73c\ub85c \uc885\ub8cc\ub41c\ub2e4.\\n\\n```kt\\n// highlight-next-line\\n@Testcontainers // testcontainer \ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c annotaion\\ninternal class S3UploaderTest {\\n  companion object {\\n    // highlight-next-line\\n    @Container // \ucee8\ud14c\uc774\ub108 \uc124\uc815\\n    private val localStack =\\n      LocalStackContainer(DockerImageName.parse(\\"localstack/localstack:0.14.0\\")).apply {\\n        // highlight-next-line\\n        withServices(LocalStackContainer.Service.S3) // s3 \uc11c\ube44\uc2a4\ub9cc \uc2e4\ud589\\n      }\\n    lateinit var s3Client: S3Client\\n\\n    @BeforeAll\\n    @JvmStatic\\n    fun beforeAll() {\\n      // highlight-next-line\\n      // localstack \uc815\ubcf4\ub97c \ud65c\uc6a9\ud574\uc11c s3client \ub97c \uc0dd\uc131\ud55c\ub2e4 \\n      s3Client =\\n        S3Client {\\n          region = localStack.region\\n          endpointResolver =\\n            StaticEndpointResolver(\\n              AwsEndpoint(\\n                url = localStack.getEndpointOverride(LocalStackContainer.Service.S3).toString()\\n              )\\n            )\\n          credentialsProvider =\\n            StaticCredentialsProvider(Credentials(localStack.accessKey, localStack.secretKey))\\n        }\\n    }\\n  }\\n}\\n```\\n\\n`org.testcontainers.containers.localstack.LocalStackContainer` \ud328\ud0a4\uc9c0\ub97c \ud65c\uc6a9\ud574 `localstack` \ucee8\ud14c\uc774\ub108\ub97c \ub744\uc6b8 \uc218 \uc788\ub2e4.  \\n`withServices` \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \uc5b4\ub5a4 aws \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uac83\uc778\uc9c0 \uc9c0\uc815\ud560 \uc218 \uc788\ub2e4.  \\n\uc774\ud6c4 `localstack` \ubcc0\uc218\ub97c \ud1b5\ud574 \uc811\uc18d \uc815\ubcf4\ub97c \uac00\uc838\uc640 s3client \ub97c \ucd08\uae30\ud654 \ud558\uc600\ub2e4.  \\n\uc774\uc804 node.js \uc640 \ub2e4\ub974\uac8c \ucee8\ud14c\uc774\ub108\ub97c \uc2dc\uc791/\uc885\ub8cc\ud558\ub294 \ub85c\uc9c1\uacfc \ud658\uacbd\ubcc0\uc218 \uc138\ud305\uacfc \uac19\uc740 \uc791\uc5c5\uc774 \uc0ac\ub77c\uc9c4 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\\n\\n## \ub9c8\ubb34\ub9ac\\n\\n`testcontainers` \ub294 `localstack` \uc678\uc5d0\ub3c4 \ub370\uc774\ud130\ubca0\uc774\uc2a4, Elasticsearch, Nginx \ub4f1 \uc5ec\ub7ec \ubaa8\ub4c8\uc744 \uc9c0\uc6d0\ud55c\ub2e4.  \\njvm \ud658\uacbd\uc5d0\uc11c\ub294 \ubc18\ubcf5\ub418\ub294 \ubc88\uac70\ub85c\uc6b4 \ub85c\uc9c1\uc744 annotation \uc744 \ud1b5\ud574 \uc27d\uac8c \ub9cc\ub4e4\uc5b4 \uc8fc\ub294 \uacbd\uc6b0\uac00 \ub9ce\ub2e4\uace0 \uc0dd\uac01\ud55c\ub2e4.  \\n\ub2e4\ub9cc \uc774\ubc88 `testcontainers` \ub3c4 \uadf8\ub807\uace0 \uacf5\uc2dd\ubb38\uc11c\uc5d0 \ub530\ub85c kotlin \uc6a9 \uc608\uc81c\ub97c \uc81c\uacf5\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0\uac00 \uc788\uc5b4 \uc544\uc26c\uc6e0\ub2e4.  \\n\uc55e\uc73c\ub85c kotlin \ubb38\uc11c\ub3c4 \ub9ce\uc544\uc9c0\uae38 \ubc14\ub77c\ubcf8\ub2e4.\\n\\n## \ucc38\uace0\\n\\n- https://www.testcontainers.org/"},{"id":"/2022/03/27/graphql-restapi","metadata":{"permalink":"/2022/03/27/graphql-restapi","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-03-27-graphql-restapi/index.mdx","source":"@site/blog/2022-03-27-graphql-restapi/index.mdx","title":"graphql \uc7a5\uc810","description":"\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 Node.js \ud658\uacbd\uc5d0\uc11c REST API \uc640 GraphQL \uc744 \uc0ac\uc6a9\ud574\ubcf4\uba74\uc11c \ub290\ub080\uc810\uacfc GraphQL \uc744 \uc120\ud638\ud558\ub294 \uc774\uc720\ub97c \uc791\uc131\ud558\ub824\uace0 \ud55c\ub2e4.","date":"2022-03-27T00:00:00.000Z","formattedDate":"2022\ub144 3\uc6d4 27\uc77c","tags":[{"label":"graphql","permalink":"/tags/graphql"},{"label":"codegen","permalink":"/tags/codegen"}],"readingTime":11.35,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"graphql \uc7a5\uc810","authors":"jake","tags":["graphql","codegen"]},"prevItem":{"title":"kotlin \uc5d0\uc11c testcontainers \uc0ac\uc6a9\ud558\uae30","permalink":"/2022/04/30/testcontainers-in-kotlin"},"nextItem":{"title":"MikroORM \uacfc TypeORM \ube44\uad50","permalink":"/2022/02/16/mikroorm-vs-typeorm"}},"content":"\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 Node.js \ud658\uacbd\uc5d0\uc11c REST API \uc640 GraphQL \uc744 \uc0ac\uc6a9\ud574\ubcf4\uba74\uc11c \ub290\ub080\uc810\uacfc GraphQL \uc744 \uc120\ud638\ud558\ub294 \uc774\uc720\ub97c \uc791\uc131\ud558\ub824\uace0 \ud55c\ub2e4.  \\n\uba3c\uc800 \ub098\uc758 \uc774\uc57c\uae30\ub97c \ud574\ubcf4\uc790\uba74 \uac1c\ubc1c\uc790\ub85c \uc804\uc9c1 \ud6c4 \uccab \uc9c1\uc7a5\uc5d0\uc11c\ub294 GraphQL \uc744 \uc0ac\uc6a9\ud558\ub2e4\uac00 REST \ub97c \uc0ac\uc6a9\ud558\ub294 \uacf3\uc73c\ub85c \uc774\uc9c1\ud558\uc600\ub2e4.  \\nGraphQL \uc0ac\uc6a9 \uacbd\ud5d8\uc774 \uc88b\uc558\uae30\uc5d0 \ub2e4\uc2dc REST \ub97c \ud55c\ub2e4\ub294 \uc810\uc5d0\ub294 \uc544\uc26c\uc6e0\uace0 \uc2e4\uc81c\ub85c \uc5ec\ub7ec \ubd88\ud3b8\ud55c\uc810\uc744 \uacaa\uc5c8\ub2e4.  \\n\uadf8\ub54c\ub9c8\ub2e4 GraphQL \uc744 \uc0ac\uc6a9\ud588\ub2e4\uba74 \uc5b4\ub5bb\uac8c \ubd88\ud3b8\ud55c\uc810\uc774 \ud574\uacb0\ub418\uc5c8\uc744\uae4c \uc0dd\uac01\ud558\uace4 \ud588\uc5c8\uace0 \uc774\ubc88\uc5d0 \uadf8 \ub0b4\uc6a9\uc744 \uc801\uc5b4\ubcf4\ub824\uace0 \ud55c\ub2e4.\\n\\n> \uae30\uc220\uc5d0 \ub300\ud55c \uc120\ud638\ub294 \uc0ac\ub78c\ub9c8\ub2e4 \ub2e4\ub974\uae30\uc5d0 \uc774\ubc88 \uae00\uc744 \uc8fc\uad00\uc801\uc778 \ub0b4\uc6a9\uc744 \ub2f4\uace0\uc788\uc2b5\ub2c8\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n### API Spec \uc815\ud558\uae30\\n\\n\ubcf4\ud1b5 REST \ud658\uacbd\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \ub3d9\uc791\uc744 \uc218\ud589\ud558\uac70\ub098 \ub370\uc774\ud130\ub97c \uc694\uccad\ud558\ub824\uba74 \ub2e4\uc74c \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc124\uacc4\uac00 \ud544\uc694\ud558\ub2e4.\\n\\n- HTTP method\\n- path\\n- body \ub610\ub294 querystring \ud615\ud0dc\\n\\n\uacbd\ud5d8\uc0c1 \ub2e4\uc74c\uacfc \uac19\uc740 \uc0c1\ud669\uc5d0\uc11c \uac1c\ubc1c\uc790\ub9c8\ub2e4 \uc11c\ub85c \ub2e4\ub978 \uc0dd\uac01\uc744 \uac00\uc9c0\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc558\ub2e4.\\n\\n- \uc5b8\uc81c PATCH \ub97c \uc0ac\uc6a9\ud558\uace0 PUT \uc744 \uc0ac\uc6a9\ud560\uc9c0\\n- resource \ud45c\ud604\uc744 \ub2e8\uc218\ub85c \ud560\uc9c0 \ubcf5\uc218\ub85c \ud560\uc9c0\\n- id \uc5d0 \ub300\ud55c \uac12\uc744 path, querystring, body \uc911 \uc5b4\ub514\uc5d0 \ub123\uc744\uc9c0\\n\\n\ubb3c\ub860 \uac80\uc0c9\ud574\ubcf4\uba74 \uc5ec\ub7ec \uac00\uc774\ub4dc \ubb38\uc11c\uac00 \uc874\uc7ac\ud558\uc9c0\ub9cc \uc774\ub294 \ub9d0 \uadf8\ub300\ub85c \uac00\uc774\ub4dc\uc77c\ubfd0 \uc9c0\ucf1c\uc57c \ud560 \uac15\uc81c\uc131\uc774 \uc5c6\ub2e4.  \\n\ud558\uc9c0\ub9cc GraphQL \uc5d0\uc11c\ub294 \uc704\uc640\uac19\uc740 \uc120\ud0dd\uc758 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294\ub2e4.\\n\\n- \ubaa8\ub4e0 \uc694\uccad\uc740 GET \ub610\ub294 POST \ub85c \uc774\ub8e8\uc5b4\uc9c4\ub2e4. (\ub300\ubd80\ubd84 POST \ub85c \uc694\uccad\ud558\uba70 FE \uac1c\ubc1c \uc2dc \ub458 \uc911 \uc5b4\ub290\uac83\uc744 \uc120\ud0dd\ud574\uc57c \ud558\ub294\uc9c0 \uc2e0\uacbd\uc4f0\uc9c0 \uc54a\uace0 \ucf54\ub4dc\ub97c \uc791\uc131\ud55c\ub2e4)\\n- path \ub3c4 \ub2e8\uc77c endpoint \ub85c \uc774\ub8e8\uc5b4\uc9c4\ub2e4. (\ubcf4\ud1b5 /graphql)\\n- \ubaa8\ub4e0 parameter \ub370\uc774\ud130\ub294 body \uc5d0 \ub4e4\uc5b4\uac04\ub2e4.\\n- \uc870\ud68c API \ub294 `Query` \ud544\ub4dc \uc544\ub798\uc5d0 \uc218\uc815 API \ub294 `Mutation` \ud544\ub4dc \uc544\ub798\uc5d0 \ub4e4\uc5b4\uac04\ub2e4.\\n\\n\ubb3c\ub860 GraphQL \uc5d0\uc11c\ub3c4 \ud544\ub4dc\uba85\uc744 \uc5b4\ub5bb\uac8c \uac00\uc838\uac00\uc57c \ud560\uc9c0\uc5d0 \ub300\ud55c \ub17c\uc758\uac00 \ud544\uc694\ud558\uc9c0\ub9cc REST \uc5d0 \ube44\ud574\uc11c \uc120\ud0dd\ud574\uc57c \ud558\ub294 \uac00\uc9d3\uc218\uac00 \ud6e8\uc52c \uc801\ub2e4.  \\n\ud2b9\ud788 \ud544\ub4dc\uba85\uc758 \uacbd\uc6b0 FE \uc5d0\uc11c \ub2e4\ub978 \uc774\ub984\uc73c\ub85c \ubc14\uafb8\uae38 \uc6d0\ud558\ub294 \uacbd\uc6b0 GraphQL \uc5d0\uc11c\ub294 BE \uc758 \uc791\uc5c5\uc5c6\uc774 alias \ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uc7a5\uc810\uc774 \uc788\ub2e4.\\n\\n```graphql\\nquery getPosts {\\n  # posts \ub300\uc2e0 myPosts \ub85c \ubcc0\uacbd\\n  myPosts: posts(id: 1) {\\n    postId: id # id \ub300\uc2e0 postId \ub85c \ubcc0\uacbd\\n    createdAt\\n  }\\n}\\n```\\n\\n### \ubb38\uc11c\ud654\\n\\n\ucc98\uc74c \uc815\ud55c API \uc2a4\ud329\uc740 \uac1c\ubc1c\uc911\uc5d0 \uc5b8\uc81c\ub4e0 \ubcc0\uacbd\ub420 \uac00\ub2a5\uc131\uc774 \uc874\uc7ac\ud558\uba70 \uc6b4\uc601 \ubc30\ud3ec \uc774\ud6c4\uc5d0\ub3c4 \uc0c8\ub85c\uc6b4 \uc694\uad6c\uc0ac\ud56d\uc73c\ub85c \uc778\ud574 \ubcc0\uacbd\ub420 \uc218 \uc788\ub2e4.  \\nAPI \uba85\uc138\uc11c\ub97c \ubb38\uc11c\ub85c \uad00\ub9ac\ud558\ub294 \uacbd\uc6b0 \ubaa8\ub4e0 \ubb38\uc11c\uac00 \uadf8\ub807\ub4ef \uc2dc\uac04\uc774 \uc9c0\ub098\uba74 \ucd5c\uc2e0\ud654\uac00 \uc81c\ub300\ub85c \ub418\uc9c0\uc54a\ub294 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud55c\ub2e4.  \\n\ud2b9\ud788 BE \uc5d0\uc11c \ubcc0\uacbd\ud55c \uc0ac\ud56d\uc744 FE \uc5d0\uac8c \uc804\ub2ec\ud558\ub294 \uac83\uc744 \ube60\ud2b8\ub9b0 \uacbd\uc6b0 \uc774\ub97c \uc54c\uc544\ucc28\ub9ac\ub294 \uc2dc\uae30\uac00 QA \ub098 \uc2ec\uac01\ud55c \uacbd\uc6b0 \uc6b4\uc601 \ubc30\ud3ec \uc774\ud6c4\uac00 \ub420 \uc218 \uc788\ub2e4.\\n\\nGraphQL \uc740 API \uc2a4\ud329\uc744 \ud558\ub098\uc758 schema \ud30c\uc77c\ub85c \uc720\uc9c0\ud558\uace0 \uc2a4\ud329\uc774 \ubcc0\uacbd\ub418\uba74 \ud574\ub2f9 \ud30c\uc77c\uc740 \uc790\ub3d9\uc73c\ub85c \ub3d9\uae30\ud654\uac00 \uc774\ub8e8\uc5b4\uc9c0\uae30\uc5d0 \ucd5c\uc2e0\ud654\uc758 \ubb38\uc81c\uc5d0\uc11c \uc790\uc720\ub86d\ub2e4.  \\n\ud2b9\ud788 [graphql-code-generator](https://www.graphql-code-generator.com/) \ub97c \ud65c\uc6a9\ud558\uba74 FE \uc5d0\uc11c schema \uc758 \ubcc0\uacbd\uc774 \uae30\uc874 \uc791\uc131\ud55c \ucf54\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\ub294\uc9c0 \uac80\uc99d\ud560 \uc218 \uc788\uae30\uc5d0 \ub354 \uc548\uc804\ud55c \uac1c\ubc1c\uc774 \uac00\ub2a5\ud558\ub2e4.\\n\\nGraphQL \uc2a4\ud0a4\ub9c8\uc5d0\ub294 \uc8fc\uc11d\uc744 \ub123\uc744 \uc218 \uc788\uace0 `@depreacted` \uac19\uc740 directive \ub97c \ud1b5\ud574 \ud2b9\uc815 \ud544\ub4dc\uc5d0 \ub300\ud55c \uc124\uba85\uc744 \ub123\uac70\ub098 \ud3d0\uae30\uc5ec\ubd80\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\ub2e4.  \\n\uc774\ub294 API \uba85\uc138\ub97c \uac1c\ubc1c\uc790\uac00 IDE \ub0b4\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uac8c \ub9cc\ub4e4\uc5b4\uc900\ub2e4.  \\n\uc608\ub97c\ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 schema \uac00 \uc788\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uc790.\\n\\n```graphql\\n\\"\\"\\"\\n\uc5ec\uae30\uc5d0 \uc8fc\uc11d\\n\\"\\"\\"\\ntype User {\\n  id: ID!\\n  username: String!\\n  email: String! @deprecated(reason: \\"Use `socialEmail`.\\") # deprecated \ud45c\uc2dc\\n  socialEmail: String!\\n}\\n```\\n\\ngenerate \ud6c4\uc5d0\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ud0c0\uc785\uc744 \ub9cc\ub4e4\uc5b4\uc8fc\uba70 IDE \uc5d0\uc11c `User` \ud544\ub4dc\uc5d0 \ub300\ud55c \uc124\uba85\uc744 \ubcfc \uc218 \uc788\uace0 `email` \ud544\ub4dc \uc0ac\uc6a9 \uc2dc \ucde8\uc18c\uc120\uc73c\ub85c \ud45c\uc2dc\ud574\uc900\ub2e4.\\n\\n```ts\\n/** \uc5ec\uae30\uc5d0 \uc8fc\uc11d */\\nexport type User = {\\n  __typename?: \\"User\\";\\n  id: Scalars[\\"ID\\"];\\n  username: Scalars[\\"String\\"];\\n  /** @deprecated Use `socialEmail`. */\\n  email: Scalars[\\"String\\"];\\n  socialEmail: Scalars[\\"String\\"];\\n};\\n```\\n\\n### Type safe\\n\\n\uc704\uc5d0\uc11c \uc18c\uac1c\ud55c `graphql-code-generator` \ub97c \ud65c\uc6a9\ud558\uba74 FE \uc5d0\uc11c TypeScript \ud658\uacbd\uc5d0\uc11c \uac1c\ubc1c \uc2dc API \uc2a4\ud329\uc5d0 \ub300\ud55c \ud0c0\uc785 \uc120\uc5b8\uacfc \uc11c\ubc84\ub85c \uc694\uccad \uc2dc \ud544\uc694\ud55c \ud30c\ub77c\ubbf8\ud130\ub4e4\uc5d0 \ub300\ud55c \uc120\uc5b8\uc744 \uc790\ub3d9 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4\ub294 \uc7a5\uc810\uc774 \uc788\ub2e4.  \\n\uc774\ub294 API \uc640 \ud0c0\uc785 \uc120\uc5b8\uac04\uc758 \ub3d9\uae30\ud654 \uc791\uc5c5\uac19\uc740 \ub2e8\uc21c\ud55c \uc791\uc5c5\uc740 \ucef4\ud4e8\ud130\uc5d0\uac8c \ub9e1\uae30\uace0 \uc624\uc9c1 \ub85c\uc9c1\uad6c\ud604\uc5d0\ub9cc \uc9d1\uc911\ud560 \uc218 \uc788\uac8c \ub9cc\ub4e4\uc5b4\uc900\ub2e4.  \\n\ub610\ud55c Enum \ud0c0\uc785\uc744 \uc9c0\uc6d0\ud558\uae30\uc5d0 \uc5b4\ub5a4 \uc5f4\uac70\ud615 \uac12\uc744 string \uc73c\ub85c \uc120\uc5b8\ud574\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 \ub9ac\ud329\ud1a0\ub9c1\uc774 \ud3b8\ud558\uace0 \uc0ac\uc6a9\ud558\ub294 \uacf3 \ucd94\uc801\uc774 \uc6a9\uc774\ud558\ub2e4.  \\nBE \uc5d0\uc11c\ub294 \uc694\uccad\uac12\uc758 \uac80\uc99d\ub85c\uc9c1\uc744 \uc791\uc131\ud560 \ub54c \ud0c0\uc785\uc5d0 \ub300\ud574\uc11c\ub294 \uc2e0\uacbd\uc4f0\uc9c0 \uc54a\uc544\ub3c4 \ub418\ub294 \uc7a5\uc810\uc774 \uc788\ub2e4.  \\n\uc608\ub97c\ub4e4\uc5b4 `class-transformer` \ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 `@IsString`, `@IsInt` \uac19\uc740 \ud0c0\uc785\uac80\uc99d \ub370\ucf54\ub808\uc774\ud130\ub294 \ub123\uc5b4\uc904 \ud544\uc694\uac00 \uc5c6\uc73c\uba70 null \ud655\uc778 \ub610\ud55c \ud0c0\uc785 \uc790\uccb4\ub97c required \ub85c \uc120\uc5b8\ub9cc \ud558\uba74 \ub41c\ub2e4.\\n\\n```ts\\n@ObjectType()\\nexport class Author {\\n  @Field((type) => Int) // Int \ud0c0\uc785\uc774\uba70 required\\n  id: number;\\n\\n  @Field({ nullable: true }) // string \ud0c0\uc785\uc774\uba70 nullable\\n  name?: string;\\n}\\n```\\n\\n\uc774\ub294 \ud0c0\uc785\uac80\uc99d\uc5d0 \ub300\ud55c \ub85c\uc9c1\uc740 graphql \uc11c\ubc84\uc5d0\uac8c \uc704\uc784\ud558\uace0 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc \uc791\uc131\uc2dc \uc785\ub825\uac12 \uac80\uc99d\uc5d0 \ub300\ud574\uc11c REST \ubcf4\ub2e4 \ub354 \uc801\uc740 \ucf00\uc774\uc2a4\ub9cc \uace0\ub824\ud574 \uc791\uc131\ud574\ub3c4 \ub41c\ub2e4\ub294 \uc7a5\uc810\uc774 \uc788\ub2e4.  \\nGraphQL \uc740 \uc785\ub825\uac12 \ubfd0\ub9cc \uc544\ub2c8\ub77c \uc751\ub2f5\uac12\ub3c4 \uac80\uc99d\uc744 \ud558\ub294\ub370 \uc608\ub97c\ub4e4\uc5b4 `String` \ud0c0\uc785\uc73c\ub85c \uc120\uc5b8\ub41c \ud544\ub4dc\uac00 \ub7f0\ud0c0\uc784\uc5d0\uc11c `null` \uc774\ub098 `number` \ub97c \ubc18\ud658\ud558\ub294 \uacbd\uc6b0 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud55c\ub2e4.\\n\\n```ts\\n@ObjectType()\\nexport class Response {\\n  @Field()\\n  get name(): string {\\n    return 123 as any; // error\\n  }\\n}\\n```\\n\\n\ubc18\uba74 REST \uc5d0\uc11c\ub294 \ub7f0\ud0c0\uc784\uc5d0\uc11c \uc804\ud600 \ub2e4\ub978 \ud0c0\uc785\uc744 \ubc18\ud658\ud574\ub3c4 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294\ub2e4.  \\n\uc120\uc5b8\ub41c \ud0c0\uc785\uacfc \ub2e4\ub978 \ud0c0\uc785\uc744 \ubc18\ud658\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc9c0\ub9cc not null \ub85c \uae30\ub300\ud558\ub294 \ud544\ub4dc\uac00 \ub7f0\ud0c0\uc784\uc5d0\uc11c null \ub85c \uc624\ub294 \uacbd\uc6b0\ub294 \uc790\uc8fc \ubc1c\uc0dd\ud55c\ub2e4.  \\nGraphQL \uc5d0\uc11c\ub294 not null \ub85c \uc120\uc5b8\ub41c \ud0c0\uc785\uc740 \ub7f0\ud0c0\uc784\uc5d0\uc11c\ub3c4 \uc808\ub300 null \ub85c \uc624\uc9c0 \uc54a\uc74c\uc744 \ubcf4\uc7a5\ud558\ubbc0\ub85c FE \ub294 API \uc2a4\ud329\uc744 \ubbff\uace0 \ub85c\uc9c1\uc744 \uc791\uc131\ud560 \uc218 \uc788\ub2e4.\\n\\n### Versioning\\n\\nREST \uc5d0\uc11c\ub294 \ubc84\uc804\uc774 \ud06c\uac8c \ubc14\ub00c\ub294 \uacbd\uc6b0\uc5d0 \ub300\ube44\ud574 \uc8fc\ub85c path \uc5d0 \ubc84\uc804\uc815\ubcf4\ub97c \ub123\uc5b4 \ud558\uc704 \ud638\ud658\uc131\uc744 \ub300\uc751\ud55c\ub2e4.  \\n\uc0c8\ub85c\uc6b4 \ubc84\uc804\uc744 \ub9cc\ub4dc\ub294 \uacbd\uc6b0 \uae30\uc874 \ubc84\uc804\uc758 \ud30c\uc77c\uc744 \ubcf5\uc0ac\ud574 \uc218\uc815\ud558\uac8c \ub418\uace0 \uc0c1\ud669\uc5d0 \ub530\ub77c \ub9ce\uc740 \ucf54\ub4dc\ub97c \uc911\ubcf5\uc73c\ub85c \uc0dd\uc131\ud558\uac8c \ub41c\ub2e4.  \\n\uc2dc\uac04\uc774 \uc9c0\ub098 \uae30\uc874 \ubc84\uc804\uc744 \ub354\uc774\uc0c1 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uc0c1\ud669\uc774 \uc640\ub3c4 \uae30\uc874 \ucf54\ub4dc\ub97c \uc0ad\uc81c\ud558\ub294 \uac83\uc744 \uae5c\ubc15\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uace0 \uc8fd\uc740 \ucf54\ub4dc\ub85c \ub0a8\uac8c\ub418\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uac8c \ub41c\ub2e4.  \\nGraphQL \uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc694\uccad\ud558\ub294 \ud544\ub4dc\uc5d0 \ub300\ud574\uc11c\ub9cc \uc751\ub2f5\uc744 \ub0b4\ub824\uc8fc\ub294 \ubc29\uc2dd\uc774\ubbc0\ub85c \ubc84\uc800\ub2dd\uc5d0 \ub300\ud55c \ud544\uc694\uac00 \ud06c\uac8c \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294\ub2e4.\\nBE \uc5d0\uc11c\ub294 \uae30\uc874 \ud544\ub4dc\uc5d0 deprecated \ud45c\uc2dc\ub97c \ud558\uace0 \uc0c8\ub85c\uc6b4 \ud544\ub4dc\ub9cc \ucd94\uac00\ud558\uba74 \ub418\uba70 FE \uc5d0\uc11c\ub294 \uc694\uccad body \uc5d0 \uae30\uc874 \ud544\ub4dc\ub294 \uc9c0\uc6b0\uace0 \uc0c8\ub85c\uc6b4 \ud544\ub4dc\ub9cc \uc9c0\uc815\ud558\uba74 \ub41c\ub2e4.  \\n\uae30\uc874 \ud544\ub4dc\uba85\uc744 \uadf8\ub300\ub85c \uc0ac\uc6a9\ud558\uace0 \uc2f6\ub2e4\uba74 alias \ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\ub2e4.\\n\\n### \ub2e8\uc810\\n\\nGraphQL \uc740 \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 REST \ubcf4\ub2e4 \uc7a5\uc810\uc774 \uc788\uc9c0\ub9cc \uc544\ub798\uc640 \uac19\uc740 \ub2e8\uc810\ub3c4 \uc874\uc7ac\ud55c\ub2e4.\\n\\n#### \ubaa8\ub2c8\ud130\ub9c1\\n\\n\ubaa8\ub4e0 api \uac00 \ud558\ub098\uc758 endpoint \ub97c \uac00\uc9c0\ub294 \uc0c1\ud669\uc774 \ubaa8\ub2c8\ud130\ub9c1 \uad00\uc810\uc5d0\uc11c\ub294 \ub2e8\uc810\uc774 \ub420 \uc218 \uc788\ub2e4.  \\napi \ub97c \uad6c\ubd84\ud558\ub824\uba74 body \ub97c \ud65c\uc6a9\ud574\uc57c \ud558\uba70 \ud68c\uc0ac\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 APM \uc194\ub8e8\uc158\uc774 GraphQL \uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \ubb38\uc81c\uac00 \ub420 \uc218 \uc788\ub2e4.  \\n\ub2e4\ub9cc `apollo server` \ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 `apollo studio` \ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uace0 `Datadog` \uc640 \uc5f0\ub3d9\ub3c4 \uac00\ub2a5\ud558\ub2e4.\\n\\n#### \ud30c\uc77c \uc5c5\ub85c\ub4dc\\n\\n\uacf5\uc2dd\uc801\uc778 \ud30c\uc77c \uc5c5\ub85c\ub4dc\uc5d0 \ub300\ud55c \uc2a4\ud329\uc774 \uc5c6\uc5b4 \uc9c1\uc811 multipart form \uc9c0\uc6d0\uc744 \uad6c\ud604\ud558\uac70\ub098 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4.  \\nnode.js \uc5d0\uc11c\ub294 `graphql-upload` \uac00 \ub9ce\uc774 \uc0ac\uc6a9\ub418\uace0 \ubb38\uc11c\ub3c4 \ub9ce\uc544\uc11c \ud070 \ubb38\uc81c\uac00 \uc5c6\uc9c0\ub9cc \ub2e4\ub978 \uc5b8\uc5b4\uc5d0\uc11c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \uc5c6\ub294 \uacbd\uc6b0\uac00 \uc788\ub2e4.  \\n\ucd5c\uadfc [graphql-kotlin](https://github.com/ExpediaGroup/graphql-kotlin) \uc73c\ub85c \ud30c\uc77c \uc5c5\ub85c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c \ud558\ub294 \uc0c1\ud669\uc774 \uc788\uc5c8\ub294\ub370 \ubb38\uc11c\uac00 \uc5c6\uc5b4 \uc5c5\ub85c\ub4dc\ub9cc REST API \ub85c \uad6c\ud604\ud558\uc600\ub2e4.\\n\\n### \ub9c8\ubb34\ub9ac\\n\\n\uac1c\uc778\uc801\uc73c\ub85c typesafe \ud55c \uac1c\ubc1c\uc744 \uc120\ud638\ud558\uae30\uc5d0 GraphQL \uc744 \uc0ac\uc6a9\ud558\ub2e4\uac00 REST API \ub97c \uc4f0\ub294 \uacbd\ud5d8\uc774 \ub9c8\uce58 TypeScript \ub97c \uc0ac\uc6a9\ud558\ub2e4\uac00 \ub2e4\uc2dc JavaScript \ub85c \ub3cc\uc544\uac00\ub294 \ub290\ub08c\uc744 \ubc1b\uc558\ub2e4."},{"id":"/2022/02/16/mikroorm-vs-typeorm","metadata":{"permalink":"/2022/02/16/mikroorm-vs-typeorm","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-02-16-mikroorm-vs-typeorm/index.md","source":"@site/blog/2022-02-16-mikroorm-vs-typeorm/index.md","title":"MikroORM \uacfc TypeORM \ube44\uad50","description":"\uc774\ubc88 \uae00\uc740 ts \ud658\uacbd\uc5d0\uc11c \uc8fc\ub85c \uc0ac\uc6a9\ub418\ub294 ORM \uc778 TypeORM \ub97c \uc0ac\uc6a9\ud558\uba74\uc11c \ubc1c\uc0dd\ud55c \ubb38\uc81c\uc810\uc744 \uc18c\uac1c\ud558\uace0 \ub610 \ub2e4\ub978 ORM \uc778 MikroORM \uc5d0\uc11c \uc5b4\ub5bb\uac8c \ud574\uacb0\ud558\uace0 \uc788\ub294\uc9c0\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc744 \ub2f4\uace0\uc788\ub2e4.","date":"2022-02-16T00:00:00.000Z","formattedDate":"2022\ub144 2\uc6d4 16\uc77c","tags":[{"label":"mikroorm","permalink":"/tags/mikroorm"},{"label":"typeorm","permalink":"/tags/typeorm"}],"readingTime":26.62,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"MikroORM \uacfc TypeORM \ube44\uad50","authors":"jake","tags":["mikroorm","typeorm"]},"prevItem":{"title":"graphql \uc7a5\uc810","permalink":"/2022/03/27/graphql-restapi"},"nextItem":{"title":"Kotlin \uc73c\ub85c \uc9c0\uc5f0\ud3c9\uac00 \uad6c\ud604\ud558\uae30","permalink":"/2022/01/30/lazy-eval-in-kotlin"}},"content":"import Tabs from \\"@theme/Tabs\\";\\nimport TabItem from \\"@theme/TabItem\\";\\n\\n\uc774\ubc88 \uae00\uc740 ts \ud658\uacbd\uc5d0\uc11c \uc8fc\ub85c \uc0ac\uc6a9\ub418\ub294 ORM \uc778 `TypeORM` \ub97c \uc0ac\uc6a9\ud558\uba74\uc11c \ubc1c\uc0dd\ud55c \ubb38\uc81c\uc810\uc744 \uc18c\uac1c\ud558\uace0 \ub610 \ub2e4\ub978 ORM \uc778 `MikroORM` \uc5d0\uc11c \uc5b4\ub5bb\uac8c \ud574\uacb0\ud558\uace0 \uc788\ub294\uc9c0\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc744 \ub2f4\uace0\uc788\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## TypeORM\\n\\nTypeORM \uc740 `JavaScript` \uc640 `TypeScript` \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 ORM (Object\u2013relational mapping) \uc774\ub2e4.  \\n\uc8fc\ub85c ts \uc9c4\uc601\uc5d0\uc11c \ub9ce\uc774 \uc0ac\uc6a9\ud558\uba70 `Active Record` \uc640 `Data Mapper` \ud328\ud134\uc744 \uc9c0\uc6d0\ud55c\ub2e4.\\n\\n\ucc98\uc74c \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ubc1c\uacac\ud588\uc744 \ub54c\uc5d0\ub294 \uad49\uc7a5\ud788 \ub9c8\uc74c\uc5d0 \ub4e4\uc5c8\uc9c0\ub9cc \uc2e4\ubb34\uc5d0\uc11c \uacc4\uc18d \uc0ac\uc6a9\ud574\ubcf4\ub2c8 \uc774\ub984\uc5d0 \ube44\ud574 \uc0dd\uac01\ub9cc\ud07c typesafe \ud558\uc9c0 \uc54a\ub2e4\uace0 \ub290\uaf08\uc73c\uba70 \uc5ec\ub7ec \uc774\uc288\ub97c \uc790\uc8fc \uacaa\uc5c8\ub2e4.  \\n\ud2b9\ud788 \uc774 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc544\uc9c1\ub3c4 \uccab major \ubc84\uc804\uc774 \ub098\uc624\uc9c0 \uc54a\uc558\uc744 \uc815\ub3c4\ub85c \uc5c5\ub370\uc774\ud2b8\uac00 \ub354\ub518 \uc0c1\ud669\uc774\ub2e4.  \\n\ud558\uc9c0\ub9cc `TypeORM` \uc678\uc5d0 \ub354 \ub098\uc740 \ub300\uc548\uc774 \uc5c6\ub294 \uc0c1\ud669\uc774\ub77c \uacc4\uc18d \uc0ac\uc6a9\ud558\uace0 \uc788\uc5c8\ub2e4.\\n\\n## MikroORM\\n\\n`MikroORM` \uc740 \uc624\ub79c\uae30\uac04 PHP \uac1c\ubc1c\uc790\uc600\ub358 [Martin Ad\xe1mek](https://github.com/B4nan) \uac00 Node.js \ub85c \ub118\uc5b4\uc624\uba74\uc11c \ub9cc\ub4e0 ORM \ub77c\uc774\ube0c\ub7ec\ub9ac\ub2e4.  \\n\ub118\uc5b4\uc624\uba74\uc11c `TypeORM` \uc744 \uc368\ubd24\ub294\ub370 \uc2e4\ub9dd\uc744 \ub290\uaef4 \uc9c1\uc811 \ub9cc\ub4e4\uc5c8\ub2e4\uace0 \ud55c\ub2e4.\\n\\n> \uc774\uc640 \uad00\ub828\ub41c \uae00\uc740 [\ub9c1\ud06c](https://medium.com/dailyjs/introducing-mikro-orm-typescript-data-mapper-orm-with-identity-map-9ba58d049e02) \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\\n\\n`MikroORM` \uc740 `Data Mapper`, `Unit of Work` \uc640 `Identity Map` \ud328\ud134\uc744 \uc9c0\uc6d0\ud55c\ub2e4.  \\n\uacf5\uc2dd\ubb38\uc11c\ub97c \uc0b4\ud3b4\ubcf4\uace0 \uc9c1\uc811 \uc608\uc81c\ub97c \ub9cc\ub4e4\uc5b4 \ubcf4\uba74\uc11c \ub290\ub080\uc810\uc740 `TypeORM` \uc5d0\uc11c \uc81c\ub300\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\uc558\ub358 **\ubb38\uc81c\uac00 \uae54\ub054\ud558\uac8c \ud574\uacb0\ub418\uba70 \ud6e8\uc52c typesafe** \ud558\ub2e4\ub294 \uac83\uc774\uc5c8\ub2e4.\\n\\n\uc774\uc81c \ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uae30\ub2a5\uacfc \ud0c0\uc785\uc548\uc815\uc131 \uce21\uba74\uc5d0\uc11c \ube44\uad50\ud574\ubcf4\uc790.\\n\\n:::info\\n\uc774\ud6c4 \ub098\uc624\ub294 \ucf54\ub4dc `Nest.js` \ud658\uacbd\uc5d0\uc11c `Data Mapper` \ud328\ud134\uc744 \uc0ac\uc6a9\ud55c \uc608\uc81c\uc774\uba70 \uc804\uccb4 \ucf54\ub4dc\ub294 [\ub9c1\ud06c](https://github.com/jbl428/study-note/tree/master/nodejs/orm) \ub97c \ucc38\uc870\ud55c\ub2e4.  \\n:::\\n\\n## Entity \uc815\uc758 \ubc29\uc2dd\\n\\n\ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 \ud074\ub798\uc2a4\uc640 \ud504\ub85c\ud37c\ud2f0\uc5d0 \ub370\ucf54\ub808\uc774\ud130\ub97c \ucd94\uac00\ud574 \uc5d4\ud2f0\ud2f0\ub97c \uc815\uc758\ud55c\ub2e4.  \\n`MikroORM` \ub294 \ucd94\uac00\ub85c `EntitySchema` \ub77c\ub294 \ubc29\uc2dd\uc744 \uc9c0\uc6d0\ud558\uba70 \uc2a4\ud0a4\ub9c8\ub97c \ud504\ub85c\uadf8\ub798\ubc0d \ud558\ub4ef\uc774 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4.  \\n\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 \uc8fc\ub85c \uc0ac\uc6a9\ud558\ub294 \ub370\ucf54\ub808\uc774\ud130 \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud560 \uac83\uc774\ub2e4.\\n\\n\uceec\ub7fc\uc758 \ud0c0\uc785\uc815\ubcf4\uc640 \ub370\ucf54\ub808\uc774\ud130\uc758 \uba54\ud0c0\ub370\uc774\ud130 \uc815\ubcf4\ub97c \uc5bb\uae30 \uc704\ud574 \ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 `reflect-metadata` \ub97c \uc0ac\uc6a9\ud55c\ub2e4.  \\n\ud558\uc9c0\ub9cc `MikroORM` \uc740 `ts-morph` \ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\uc2dd\uc744 \ucd94\uac00\ub85c \uc9c0\uc6d0\ud558\uba70 \uc774\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5d4\ud2f0\ud2f0 \uc120\uc5b8\uc774 \ub354 \uac04\uacb0\ud574\uc9c4\ub2e4.\\n\\n\uc608\uc81c\ub85c \ub9cc\ub4e4 \uc5d4\ud2f0\ud2f0\ub294 `Post` \uc640 `Comment` \ub85c \ud558\ub098\uc758 \ud3ec\uc2a4\ud2b8\uc5d0 \uc5ec\ub7ec \ub313\uae00\uc774 \uc874\uc7ac\ud558\ub294 1:N \uad00\uacc4\uc774\ub2e4.  \\n\uba3c\uc800 `TypeORM` \uc758 \uacbd\uc6b0 \uc544\ub798\uc640 \uac19\uc774 \uc120\uc5b8\ud55c\ub2e4.\\n\\n<Tabs groupId=\\"orm\\">\\n  <TabItem value=\\"post\\" label=\\"post.entity.ts\\" default>\\n\\n```ts\\n@Entity()\\nexport class Post extends BaseEntity {\\n  @Column()\\n  name: string;\\n\\n  @Column()\\n  content: string;\\n\\n  @Column({ type: \\"varchar\\", length: 10, transformer: new PostStatusType() })\\n  status: PostStatus; // \ucee4\uc2a4\ud140 \ud0c0\uc785\\n\\n  @Column({ nullable: true })\\n  memo?: string;\\n\\n  @OneToMany(() => Comment, (comment) => comment.post, {\\n    cascade: [\\"insert\\", \\"update\\"],\\n  })\\n  comments: Comment[];\\n}\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"comment\\" label=\\"comment.entity.ts\\">\\n\\n```ts\\n@Entity()\\nexport class Comment extends BaseEntity {\\n  @Column()\\n  content: string;\\n\\n  @Column()\\n  like: number;\\n\\n  @Column({ nullable: true })\\n  memo?: string;\\n\\n  @ManyToOne(() => Post, (post) => post.comments, {\\n    createForeignKeyConstraints: false,\\n    nullable: false,\\n  })\\n  @Index(\\"idx_post_id\\")\\n  @JoinColumn({ name: \\"post_id\\", referencedColumnName: \\"id\\" })\\n  post: Post;\\n}\\n```\\n\\n  </TabItem>\\n</Tabs>\\n\\n`MikroORM` \uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc120\uc5b8\ud55c\ub2e4.\\n\\n<Tabs groupId=\\"orm\\">\\n  <TabItem value=\\"post\\" label=\\"post.entity.ts\\" default>\\n\\n```ts\\n@Entity()\\nexport class Post extends BaseEntity {\\n  @Property()\\n  name: string;\\n\\n  @Property()\\n  content: string;\\n\\n  @Property({ type: PostStatusType })\\n  status: PostStatus; // \ucee4\uc2a4\ud140 \ud0c0\uc785\\n\\n  @Property()\\n  memo?: string;\\n\\n  @OneToMany(() => Comment, (comment) => comment.post)\\n  comments = new Collection<Comment>(this);\\n}\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"comment\\" label=\\"comment.entity.ts\\">\\n\\n```ts\\n@Entity()\\nexport class Comment extends BaseEntity {\\n  @Property()\\n  content: string;\\n\\n  @Property()\\n  like: number;\\n\\n  @Property()\\n  memo?: string;\\n\\n  @ManyToOne({ index: true })\\n  post: IdentifiedReference<Post>;\\n}\\n```\\n\\n  </TabItem>\\n</Tabs>\\n\\n\ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \uac04\uc758 \ucc28\uc774\uc810\uc744 \uc0b4\ud3b4\ubcf4\uc790\\n\\n### \ud544\ub4dc\uc758 NULL \uc120\uc5b8\\n\\n\uc6d0\ud558\ub294 \ud544\ub4dc\ub97c `NULL` \ub85c \uc124\uc815\ud558\ub824\uba74 `TypeORM` \uc5d0\uc11c\ub294 \ub370\ucf54\ub808\uc774\ud130\uc5d0 \uc9c1\uc811 `nullable` \uac12\uc744 true \ub85c \uc124\uc815\ud574\uc57c \ud55c\ub2e4.  \\n\ud558\uc9c0\ub9cc `MikroORM` \uc5d0\uc11c\ub294 \ud504\ub85c\ud130\ud2f0 \ud0c0\uc785\uc744 nullable \ub85c \uc120\uc5b8\ud558\uae30\ub9cc \ud558\uba74 \ub41c\ub2e4.  \\n\uc774\ub294 \ub354 \uac04\uacb0\ud560 \ubfd0\ub9cc\uc544\ub2c8\ub77c **ts \ud0c0\uc785\uacfc \uc2e4\uc81c \uceec\ub7fc\uc758 \ud0c0\uc785\uc758 \ub3d9\uc77c\ud568**\uc744 \ubcf4\uc7a5\ud574\uc900\ub2e4.\\n\\n\uc2e4\uc81c\ub85c \uc2e4\ubb34\uc5d0\uc11c \ub370\ucf54\ub808\uc774\ud130\uc5d0\ub294 `nullable` \ub85c \uc120\uc5b8\ud588\uc9c0\ub9cc ts \ud0c0\uc785\uc744 required \ub85c \uc120\uc5b8\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc558\ub2e4.  \\n\uc774\ub85c\uc778\ud574 `Optional Chaining` \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ud504\ub85c\ud130\ud53c\ub97c \ucc38\uc870\ud558\ub2e4\uac00 \ub7f0\ud0c0\uc784 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc558\ub2e4.  \\nts \uc758 `strictNullCheck` \uc635\uc158\uc744 \ud65c\uc131\ud654\ud558\uba74 nullable \ud0c0\uc785\uc744 \ucc38\uc870\ud558\uae30 \uc804\uc5d0 null \uccb4\ud06c\ub97c \ud544\uc218\ub85c \ud574\uc57c\ud558\uae30\uc5d0 \ub354 \uc548\uc804\ud55c \uac1c\ubc1c\uc774 \uac00\ub2a5\ud558\ub2e4.\\n\\n### Foreign Key \uc81c\uc57d\uc870\uac74 \ud574\uc81c\\n\\n\ud14c\uc774\ube14 \uc5f0\uad00\uad00\uacc4 \uc124\uc815 \uc2dc `foreign key` \ucd94\uac00\ub97c \uc6d0\ud558\uc9c0 \uc54a\uc744 \ub54c `TypeORM` \uc5d0\uc11c\ub294 \ub9e4\ubc88 \ub370\ucf54\ub808\uc774\ud130\uc5d0 `createForeignKeyConstraints` \uc635\uc158\uc744 \ucd94\uac00\ud574\uc57c \ud55c\ub2e4.  \\n\ud558\uc9c0\ub9cc `MikroORM` \uc5d0\uc11c\ub294 \ub514\ube44 \uad00\ub828 \uc124\uc815\uc5d0\uc11c FK \uc0dd\uc131\uc5ec\ubd80 \uae30\ubcf8\uac12\uc744 \uc124\uc815\ud560 \uc218 \uc788\ub2e4.  \\n\ub2e4\ub9cc \uc2a4\ud0a4\ub9c8 \ub3d9\uae30\ud654 \ubc29\ubc95\uc744 \ub450 \uac00\uc9c0\ub97c \uc9c0\uc6d0\ud558\ub294\ub370 `schemaGenerator` \ubc29\uc2dd\uc740 \ud574\ub2f9 \uc635\uc158\uc774 \uc874\uc7ac\ud558\uc9c0\ub9cc `migration` \ubc29\uc2dd\uc740 \uc9c1\uc811 generator \ub97c \uad6c\ud604\ud574\uc57c \ud55c\ub2e4.\\n\\n```ts\\n// migration \ubc29\uc2dd\uc5d0\uc11c\ub294 \uc9c1\uc811 foreign key \uc0dd\uc131\uc740 \uac74\ub108\ub6f0\ub3c4\ub85d \ub85c\uc9c1\uc744 \uad6c\ud604\ud574\uc57c \ud55c\ub2e4\\nclass CustomMigrationGenerator extends TSMigrationGenerator {\\n  createStatement(sql: string, padLeft: number): string {\\n    if (sql.includes(\\" add constraint \\") || sql.includes(\\" drop constraint \\"))\\n      return \\"\\";\\n\\n    return super.createStatement(sql, padLeft);\\n  }\\n}\\n\\nconst config: MikroOrmModuleOptions = {\\n  // ... \uc0dd\ub7b5\\n  schemaGenerator: {\\n    // highlight-next-line\\n    createForeignKeyConstraints: false, // FK \uc0dd\uc131\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc124\uc815\\n  },\\n  migrations: {\\n    // highlight-next-line\\n    generator: CustomMigrationGenerator, // \ucee4\uc2a4\ud140 generator \uc124\uc815\\n  },\\n};\\n```\\n\\n### Index \uba85\\n\\n:::info\\nTypeORM \uc5d0\uc11c Naming strategy \ub97c \ud1b5\ud574 \uc778\ub371\uc2a4 \uba85\uc744 \ucee4\uc2a4\ud140\ud558\uac8c \uc9c0\uc815\ud560 \uc218 \uc788\ub2e4\ub294\uac8c \ud655\uc778\ub418\uc11c \ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \uac04 \ucc28\uc774\ub294 \uc5c6\ub2e4.\\nhttps://orkhan.gitbook.io/typeorm/docs/naming-strategy\\n:::\\n\\nFK \uc81c\uc57d\uc870\uac74\uc744 \ud574\uc81c\ud558\uba74 \ucc38\uc870 \uceec\ub7fc\uc5d0 index \ub610\ud55c \uc0dd\uc131\ub418\uc9c0 \uc54a\ub294\ub2e4.  \\n\ud558\uc9c0\ub9cc join \uc131\ub2a5\uc744 \uc704\ud574 index \ub294 \ud544\uc694\ud558\ubbc0\ub85c \uc9c1\uc811 \ucd94\uac00\ud574\uc57c \ud55c\ub2e4.  \\n`TypeORM` \uc5d0\uc11c\ub294 `@Index` \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc `MikroORM` \uc5d0\uc11c\ub294 `@ManyToOne` \ub370\ucf54\ub808\uc774\ud130\uc758 index \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ub41c\ub2e4.\\n\\n\ub530\ub85c \uc778\ub371\uc2a4\uba85\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\uc740\uacbd\uc6b0 `TypeORM` \uc544\ub798 \uc0ac\uc9c4\ucc98\ub7fc \uc54c\uc544\ubcf4\uae30 \ud798\ub4e0 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud558\uae30\uc5d0 (PK \ub3c4 \ub3d9\uc77c) \uc5d0\ub7ec \ubc1c\uc0dd\uc2dc \ub85c\uadf8\ub97c \ud574\uc11d\ud558\uae30 \uc5b4\ub824\uc6cc\uc9c4\ub2e4.  \\n\ub530\ub77c\uc11c \uc9c1\uc811 \uc778\ub371\uc2a4\uba85\uc744 \uc9c0\uc815\ud574\uc57c \ud55c\ub2e4.\\n\\n![typeorm-index-name](typeorm-index-name.png)\\n\\n\ubc18\uba74 `MikroORM` \uc740 \uc77d\uae30 \uc26c\uc6b4 \uc774\ub984\uc73c\ub85c \uc0dd\uc131\ud558\uae30\uc5d0 \uc9c1\uc811 \uc774\ub984\uc744 \uc9c0\uc815\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4.\\n\\n![mikroorm-index-name](mikroorm-index-name.png)\\n\\n### \uceec\ub7fc\uba85 \uaddc\uce59\\n\\n`TypeORM` \uc740 \uceec\ub7fc\uba85\uc758 \ub124\uc774\ubc0d \uaddc\uce59\uc774 `camelCase` \uc778 \uad00\uacc4\ub85c `snake-case` \uc744 \uc6d0\ud558\ub294 \uacbd\uc6b0 \uc9c1\uc811 \uc774\ub984\uc744 \uc9c0\uc815\ud574\uc8fc\uc5b4\uc57c \ud55c\ub2e4.  \\n\ubb3c\ub860 `namingStrategy` \uc124\uc815\uacfc `typeorm-naming-strategies` \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc \uc5f0\uad00\uad00\uacc4 \uceec\ub7fc\uba85\uc5d0\ub294 \uc801\uc6a9\uc774 \uc548\ub418\uae30\uc5d0 \uacb0\uad6d `JoinColumn` \ub370\ucf54\ub808\uc774\ud130\uc5d0 \uc9c1\uc811 \uc9c0\uc815\ud574\uc57c \ud55c\ub2e4.  \\n\ubc18\uba74 `MikroORM` \uc740 \uae30\ubcf8\uac12\uc774 `snake-case` \uc774\uae30\uc5d0 \ub530\ub85c \uc9c0\uc815\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4.\\n\\n## Custom Type\\n\\n\ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub9ac \ubaa8\ub450 \ud544\ub4dc\uc5d0 \uae30\ubcf8 ts \ud0c0\uc785\ub300\uc2e0 \ucee4\uc2a4\ud140 \ud0c0\uc785\uc73c\ub85c \uc120\uc5b8\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud55c\ub2e4.  \\n`TypeORM` \uc5d0\uc11c\ub294 \ub370\ucf54\ub808\uc774\ud130\uc758 transformer \uc124\uc815\uc774\uba70 `MikroORM` \uc740 type \uc774\ub2e4.  \\n\ucee4\uc2a4\ud140 \ud0c0\uc785\uc744 \uc120\uc5b8\ud558\ub294 \ubc29\ubc95\uc740 \ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 \ube44\uc2b7\ud558\uac8c \ud2b9\uc815 interface \ub97c \uad6c\ud604\ud55c \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uba74 \ub41c\ub2e4.\\n\\n\ub0a0\uc9dc \uad00\ub828 \ud544\ub4dc\uc5d0 js date \ub300\uc2e0 `js-joda` \uc758 `LocalDateTime` \uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \ucee4\uc2a4\ud140 \ud0c0\uc785 \uad6c\ud604\ubd80\ub97c \uc0b4\ud3b4\ubcf4\uc790.\\n\\n<Tabs>\\n  <TabItem value=\\"TypeORM\\" label=\\"TypeORM\\" default>\\n\\n```ts\\nexport class LocalDateTimeType implements ValueTransformer {\\n  to(entityValue: LocalDateTime): Date {\\n    return convert(entityValue).toDate();\\n  }\\n\\n  from(databaseValue: Date): LocalDateTime {\\n    return LocalDateTime.from(nativeJs(databaseValue));\\n  }\\n}\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"MikroORM\\" label=\\"MikroORM\\">\\n\\n```ts\\nexport class LocalDateTimeType extends Type<LocalDateTime, Date> {\\n  convertToDatabaseValue(\\n    value: LocalDateTime | Date,\\n    platform: Platform\\n  ): Date {\\n    if (value instanceof Date) {\\n      return value;\\n    }\\n\\n    return convert(value).toDate();\\n  }\\n\\n  convertToJSValue(\\n    value: LocalDateTime | Date,\\n    platform: Platform\\n  ): LocalDateTime {\\n    if (value instanceof LocalDateTime) {\\n      return value;\\n    }\\n\\n    if (typeof value === \\"number\\") {\\n      return LocalDateTime.from(nativeJs(new Date(value)));\\n    }\\n\\n    return LocalDateTime.from(nativeJs(value));\\n  }\\n\\n  getColumnType(prop: EntityProperty, platform: Platform) {\\n    return `timestamptz`;\\n  }\\n}\\n```\\n\\n  </TabItem>\\n</Tabs>\\n\\n\ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 database \uc640 Node.js \uac04\uc758 \ub370\uc774\ud130 \ucc98\ub9ac\ub85c\uc9c1\uc744 \uba54\uc18c\ub4dc\uc5d0 \uc791\uc131\ud55c\ub2e4.  \\n`TypeORM` \uc758 \uacbd\uc6b0 \ub2e8\uc21c\ud788 from, to \uba54\uc18c\ub4dc\ub9cc \uc81c\uacf5\ud558\uc9c0\ub9cc `MikroORM` \uc740 \ucd94\uac00\ub85c \uc5ec\ub7ec \uc0c1\ud669\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uba54\uc18c\ub4dc\ub97c \uc81c\uacf5\ud55c\ub2e4.\\n\\n> \uc5b4\ub5a4 \uba54\uc18c\ub4dc\ub97c \uc81c\uacf5\ud558\ub294 \uc9c0\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc740 [\ubb38\uc11c](https://mikro-orm.io/docs/custom-types) \ub97c \ucc38\uc870\ud55c\ub2e4.  \\n> \ucd94\uac00\ub85c `MikroORM` \uc5d0\uc11c \uae30\ubcf8\uc73c\ub85c \uc81c\uacf5\ud558\ub294 \ud0c0\uc785\ub3c4 \uc788\ub2e4.\\n\\n#### \uc774\uc288\\n\\n\ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 `query builder` \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ucee4\uc2a4\ud140 \ud0c0\uc785\uc758 \ubcc0\ud658\ub85c\uc9c1\uc774 \ub3d9\uc791\ud558\uc9c0 \uc54a\ub294 \uc774\uc288\uac00 \uc788\ub2e4.  \\n\ub2e4\uc74c \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uc790.\\n\\n<Tabs>\\n  <TabItem value=\\"TypeORM\\" label=\\"TypeORM\\" default>\\n\\n```ts\\nit(\\"queryBuilder where \uc5d0 string \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc870\ud68c\uc5d0 \uc2e4\ud328\ud55c\ub2e4\\", async () => {\\n  // given\\n  const createdAt = LocalDateTime.of(2022, 2, 1);\\n  const post = PostFactory.make({ createdAt });\\n  await postRepository.save({\\n    ...post,\\n    updatedAt: LocalDateTime.now(),\\n  });\\n\\n  // when\\n  const result = await postRepository\\n    .createQueryBuilder(\\"post\\")\\n    .where(\\"post.createdAt = :createdAt\\", { createdAt })\\n    .getMany();\\n\\n  // then\\n  expect(result).toHaveLength(0);\\n});\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"MikroORM\\" label=\\"MikroORM\\">\\n\\n```ts\\nit(\\"queryBuilder where \uc5d0 string \ud615\ud0dc\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc870\ud68c\uc5d0 \uc2e4\ud328\ud55c\ub2e4\\", async () => {\\n  // given\\n  const createdAt = LocalDateTime.of(2022, 2, 1);\\n  const post = postFactory.makeOne({ createdAt });\\n  await postEntityRepository.persistAndFlush(post);\\n\\n  // when\\n  const result = await postEntityRepository\\n    .createQueryBuilder(\\"post\\")\\n    .where(\\"post.created_at = ?\\", [createdAt])\\n    .getResult();\\n\\n  // then\\n  expect(result).toHaveLength(0);\\n});\\n```\\n\\n  </TabItem>\\n</Tabs>\\n\\n\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \ubcf4\uba74 \uba3c\uc800 given \uc808\uc5d0\uc11c \uc784\uc758\uc758 post \ud558\ub098\ub97c insert \ud558\uc600\ub2e4.  \\nwhen \uc5d0\uc11c `query builder` \ub97c \uc0ac\uc6a9\ud574 post \ub97c \uac00\uc838\uc624\ub294\ub370 where \uc808\uc744 \uc0b4\ud3b4\ubcf4\uba74 \ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 \uccab \ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc5d0 \uceec\ub7fc\uba85\uc744 \ubb38\uc790\uc5f4\ub85c \uc9c0\uc815\ud558\uc600\ub2e4.  \\n\uc774\ub807\uac8c \uc9c0\uc815\ud558\uba74 \ub450 \ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\ub85c \uc81c\uacf5\ud55c `createdAt` \ubcc0\uc218\uc758 \ud0c0\uc785\uc778 `LocalDateTime` \uc758 \ubcc0\ud658\ub85c\uc9c1\uc774 \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294\ub2e4.\\n\\n\uc2e4\uc81c where \uc808\uc5d0 \uc5b4\ub5a4 \uac12\uc774 \ub4e4\uc5b4\uac14\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uba74\\n\\n![custom-type-issue](custom-type-issue.png)\\n\\n`createdAt` \ud544\ub4dc\uc758 \ud0c0\uc785\uc740 `timestamptz` \uc778\ub370 \uc704\uc640 \uac19\uc774 \ud0c0\uc784\uc874 \uac12\uc774 \uc5c6\ub294 \ub370\uc774\ud130\ub85c \uc870\ud68c\ud558\uba74 database \uc758 \ud0c0\uc784\uc874 \uc124\uc815\uc5d0 \ub530\ub77c \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\ub2e4.  \\n\uc704\uc640 \uac19\uc740 \uc0c1\ud669\uc5d0\uc11c\ub294 \ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 \ubcc0\ud658\ub85c\uc9c1 \ub300\uc2e0 `LocalDateTime` \uc758 `toJSON` \uba54\uc18c\ub4dc\uac00 \uc2e4\ud589\ub418\uba70 \ud574\ub2f9 \uba54\uc18c\ub4dc\ub294 \ud0c0\uc784\uc874 \uac12\uc744 \uc81c\uac70\ud55c \uacb0\uacfc\ub97c \uc81c\uacf5\ud55c\ub2e4.\\n\\n```ts\\nconst date = LocalDateTime.of(2022, 2, 1);\\nconsole.log(date.toJSON()); // 2022-02-01T00:00\\n```\\n\\n\uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \uc9c1\uc811 `toJSON` \uba54\uc18c\ub4dc\ub97c override \ud558\uba74\ub41c\ub2e4.\\n\\n```ts\\n// highlight-start\\n// toJSON override\\nLocalDateTime.prototype.toJSON = function () {\\n  return convert(this).toDate().toISOString();\\n};\\n// highlight-end\\n\\n... \uc0dd\ub7b5\\n\\n// when\\nconst result = await postRepository\\n  .createQueryBuilder(\'post\')\\n  .where(\'post.createdAt = :createdAt\', { createdAt })\\n  .getMany();\\n\\n// then\\nexpect(result).toHaveLength(1); // \uc870\ud68c \uc131\uacf5\\n```\\n\\n![custom-type-issue-solve](custom-type-issue-solve.png)\\n\\n\uc544\ub2c8\uba74 \ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 where \uc808\uc5d0 \ubb38\uc790\uc5f4 \ub300\uc2e0 json \uc744 \ud65c\uc6a9\ud574 \uceec\ub7fc\uc744 \uc9c0\uc815\ud558\uba74 \uc815\uc0c1\uc801\uc73c\ub85c \ubcc0\ud658\ub85c\uc9c1\uc774 \uc2e4\ud589\ub41c\ub2e4.\\n\\n```ts\\nconst result = await postRepository\\n  .createQueryBuilder(\\"post\\")\\n  .where({ createdAt })\\n  .getMany();\\n```\\n\\n\ucd94\uac00\ub85c `MikroORM` \uc740 where \uc808\uc5d0\uc11c \uc5d4\ud2f0\ud2f0 \ud544\ub4dc\uba85\uc5d0 \ub300\ud55c intellisense \ub97c \uc9c0\uc6d0\ud55c\ub2e4.  \\n\uc798\ubabb\ub41c \ud544\ub4dc\uba85\uc744 \uc9c0\uc815\ud55c \uacbd\uc6b0 \ud0c0\uc785 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294\uc810\uc740 \uc544\uc27d\uc9c0\ub9cc \uc624\ud0c0\ub97c \uc791\uc131\ud560 \ud655\ub960\uc744 \ub0ae\ucdb0\uc8fc\uae30 \ub54c\ubb38\uc5d0 \uc720\uc6a9\ud558\ub2e4.\\n\\n![where-hint](where-hint.png)\\n\\n## QueryBuilder \ub85c \ud2b9\uc815 \ud544\ub4dc select\\n\\n\ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 `select` \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \uc6d0\ud558\ub294 \ud544\ub4dc\ub9cc \uc9c0\uc815\ud574\uc11c \uac00\uc838\uc62c \uc218 \uc788\ub2e4.  \\n\ud558\uc9c0\ub9cc `TypeORM` \uc5d0\uc11c\ub294 \uc5f0\uad00\uad00\uacc4 \ud544\ub4dc select \uc5d0 \ub300\ud55c \uc774\uc288\uac00 \uc788\ub2e4.\\n\\n\ub2e4\uc74c \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uc790.\\n\\n```ts\\nconst result = await commentRepository\\n  .createQueryBuilder(\\"comment\\")\\n  .select([\\"comment.id\\", \\"comment.post.id\\"])\\n  .where({ post: { id: post.id } })\\n  .getOneOrFail();\\n\\nconsole.log(result); // Comment { id: 1n }\\nconsole.log(result.post); // undefined\\n```\\n\\nComment \uc5d4\ud2f0\ud2f0\uc758 id \ud544\ub4dc\uc640 post_id \ud544\ub4dc\ub9cc \uac00\uc838\uc624\uae30 \uc704\ud574 select \uc808\uc5d0 \uc9c1\uc811 \uc9c0\uc815\ud558\uc600\ub2e4.  \\n\ud558\uc9c0\ub9cc \uacb0\uacfc\ub97c \ubcf4\uba74 id \ub294 \ub2f4\uae30\uc9c0\ub9cc post \ub294 undefined \uac00 \ub41c\ub2e4.\\n\\n\ucffc\ub9ac \ub85c\uadf8\ub97c \ud655\uc778\ud558\uba74 \uc62c\ubc14\ub974\uac8c \ucffc\ub9ac\ub97c \uc218\ud589\ud55c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc9c0\ub9cc \uadf8 \uacb0\uacfc\ub97c \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub2f4\uc744 \ub54c \uc5f0\uad00\uad00\uacc4 \ud544\ub4dc\ub294 \uc81c\ub300\ub85c \ub123\uc9c0 \ubabb\ud558\ub294 \ubb38\uc81c\uac00 \uc788\ub2e4.\\n\\n```sql\\nSELECT \\"comment\\".\\"id\\" AS \\"comment_id\\", \\"comment\\".\\"post_id\\" AS \\"comment_post_id\\"\\nFROM \\"comment\\" \\"comment\\"\\nWHERE \\"comment\\".\\"post_id\\" = $1\\n```\\n\\n\uc774\ub97c \ud574\uacb0\ud558\ub824\uba74 `getOneOrFail` \ub300\uc2e0 `getRawOne` \uc744 \uc0ac\uc6a9\ud574 json \ud615\ud0dc\ub85c \uac00\uc838\uc624\uac70\ub098 join \ubb38\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc9c0\uc815\ud574\uc57c \ud55c\ub2e4.\\n\\n```ts\\nconst result = await commentRepository\\n  .createQueryBuilder(\\"comment\\")\\n  .select([\\"comment.id\\", \\"post.id\\"])\\n  .innerJoin(\\"comment.post\\", \\"post\\") // join \uc9c0\uc815\\n  .getOneOrFail();\\n```\\n\\n\uc5d4\ud2f0\ud2f0 \ud30c\uc77c\uc5d0 \uc5f0\uad00\uad00\uacc4 \uceec\ub7fc\uc5d0 \ub300\ud55c \ud544\ub4dc\ub97c \ucd94\uac00\ub85c \uc120\uc5b8\ud558\ub294 \ubc29\ubc95(`RelationId` \ub370\ucf54\ub808\uc774\ud130)\ub3c4 \uc788\uc9c0\ub9cc transformer \uac00 \ub3d9\uc791\ud558\uc9c0 \uc54a\ub294 \ubb38\uc81c\uc640 \ud544\ub4dc\ub97c \uac00\uc838\uc624\ub294 \ubc29\ubc95\uc774 \ub450 \uac00\uc9c0\ub85c \ub098\ub220\uc9c0\ub294 \ubb38\uc81c\uac00 \uc788\ub2e4.\\n\\n\ubc18\uba74 `MikroORM` \uc5d0\uc11c\ub294 \uc704\uc640 \uac19\uc740 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294\ub2e4.\\n\\n```ts\\nconst result = await commentEntityRepository\\n  .createQueryBuilder(\\"comment\\")\\n  .select([\\"id\\", \\"post\\"])\\n  .where({ post: { id: post.id } })\\n  .getSingleResult();\\n\\nconsole.log(result.post.id); // \uac12\uc774 \uc874\uc7ac\\n```\\n\\n\ud558\uc9c0\ub9cc join \ud14c\uc774\ube14\uc758 id \uceec\ub7fc \uc678 \ub2e4\ub978 \ud544\ub4dc\ub97c select \ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc81c\ub300\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\ub294 \uc774\uc288\uac00 \uc788\ub2e4.\\n\\n```ts\\nconst result = await commentEntityRepository\\n  .createQueryBuilder(\\"c\\")\\n  .select([\\"c.id\\", \\"c.like\\", \\"post\\", \\"p.name\\"])\\n  .join(\\"c.post\\", \\"p\\")\\n  .getSingleResult();\\n\\nconsole.log(result.post.unwrap().name); // undefined\\n```\\n\\nselect \uad6c\ubb38\uc5d0 `p.name` \uc744 \uc120\uc5b8\ud574 \uc774\ub984\ud544\ub4dc\ub97c \uac00\uc838\uc624\ub3c4\ub85d \uc124\uc815\ud588\uc9c0\ub9cc \uacb0\uacfc\uc5d0\ub294 \ub2f4\uae30\uc9c0 \uc54a\ub294\ub2e4.  \\n\uadf8\ub798\uc11c join \ub300\uc2e0 joinAndSelect \ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294\ub370 \uc774\ub294 \ubaa8\ub4e0 \uc5d4\ud2f0\ud2f0\uc758 \ud544\ub4dc\ub97c select \ud558\uae30\uc5d0 \ube44\ud6a8\uc728\uc801\uc774\ub2e4.\\n\\n```ts\\nconst result = await commentEntityRepository\\n  .createQueryBuilder(\\"c\\")\\n  .select([\\"c.id\\", \\"c.like\\", \\"post\\", \\"p.name\\"])\\n  .joinAndSelect(\\"c.post\\", \\"p\\") // post \uc758 \ubaa8\ub4e0 \ud544\ub4dc \uac00\uc838\uc634\\n  .getSingleResult();\\n```\\n\\n## Smart Query Conditions\\n\\n\ub450 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubaa8\ub450 `query builder` \uad00\ub828 \uc774\uc288\uac00 \uc874\uc7ac\ud558\uc9c0\ub9cc `MikroORM` \uc758 \uacbd\uc6b0 `Smart Query Conditions` \ub97c \ud65c\uc6a9\ud558\uba74 \ubcf5\uc7a1\ud55c \uc870\ud68c\uc870\uac74\uc744 typesafe \ud558\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub2e4.  \\n\ub530\ub77c\uc11c `query builder` \ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub300\ubd80\ubd84\uc758 \ucffc\ub9ac\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub2e4.  \\n\uc608\ub97c\ub4e4\uba74 \ub2e4\uc74c \uc870\uac74\uc744 \ub9cc\uc871\ud558\ub294 comment \ub4e4\uc744 \uc870\ud68c\ud558\ub294 \uc0c1\ud669\uc744 \uac00\uc815\ud574\ubcf4\uc790.\\n\\n- post id \uac00 100\\n- \ub313\uae00 \ub0b4\uc6a9\uc5d0 \\"text\\" \ub97c \ud3ec\ud568\ud558\uac70\ub098 like \uc218\uac00 10 \uc774\uc0c1\\n\\n\ub2e4\uc74c\uacfc \uac19\uc740 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uba74 \ub41c\ub2e4.\\n\\n```ts\\nawait commentEntityRepository.find({\\n  $and: [\\n    { post: { id: 100n } },\\n    { $or: [{ content: { $like: \\"%text%\\" } }, { like: { $gte: 10 } }] },\\n  ],\\n});\\n```\\n\\n\uc2e4\uc81c \uc218\ud589\ud558\ub294 \ucffc\ub9ac\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4.\\n\\n```sql\\nSELECT \\"c0\\".*\\nFROM \\"comment\\" AS \\"c0\\"\\nWHERE \\"c0\\".\\"post_id\\" = \'100\'\\n  AND (\\"c0\\".\\"content\\" LIKE \'%text%\' OR \\"c0\\".\\"like\\" >= 10)\\n```\\n\\nfind \uba54\uc18c\ub4dc \ud30c\ub77c\ubbf8\ud130\uc758 \ud0a4 \uc911\uc5d0 `$` \ub85c \uc2dc\uc791\ud558\ub294 \uac83\uc740 `MikroORM` \uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uc5f0\uc0b0\uc790\ub85c `$and`, `$or` \uc640 \uac19\uc740 \ub17c\ub9ac\uc5f0\uc0b0\uc790\uc640 `like`, `>=` \uac19\uc740 \ube44\uad50\uc5f0\uc0b0\uc790\uac00 \uc788\ub2e4.  \\n\ub9cc\uc57d \uc870\uac74\uc808\uc5d0 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 \uc5f0\uc0b0\uc790\ub098 \uc798\ubabb\ub41c \ud544\ub4dc\uba85, \ud0c0\uc785\uc5d0 \ub9de\uc9c0\uc54a\ub294 \uac12\uc744 \uc804\ub2ec\ud558\ub294 \uacbd\uc6b0 \ud0c0\uc785\uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\uae30 \ub54c\ubb38\uc5d0 typesafe \ud55c \uc7a5\uc810\uc774 \uc788\ub2e4.\\n\\n> \uc9c0\uc6d0\ud558\ub294 \ubaa8\ub4e0 \uc5f0\uc0b0\uc790\ub97c \ubcf4\ub824\uba74 [\ub9c1\ud06c](https://mikro-orm.io/docs/query-conditions) \ub97c \ucc38\uc870\ud55c\ub2e4.\\n\\n## Repository \uae30\ubcf8 \uc870\ud68c \uba54\uc18c\ub4dc\\n\\n`find`, `findOne` \uc640 \uac19\uc740 \uc870\ud68c \uba54\uc18c\ub4dc\uc758 \uacbd\uc6b0 `TypeORM` \uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \ub2e8\uc810\uc774 \uc874\uc7ac\ud55c\ub2e4.\\n\\n- select \uc808\uc5d0 join \ud558\ub294 \ud14c\uc774\ube14\uc758 \ud544\ub4dc\ub294 \uc9c0\uc815\ud560 \uc218 \uc5c6\uc74c\\n- \ud14c\uc774\ube14 join \ubc29\uc2dd\uc774 left join \uc73c\ub85c \uace0\uc815\\n- join \ud14c\uc774\ube14 \uc9c0\uc815 \uc635\uc158(relations) \uc758 \ud0c0\uc785\uc774 \ub2e8\uc21c string \uc774\ub77c intellisense \uc9c0\uc6d0\uc774 \uc548\ub418\uace0 \uc798\ubabb \uc785\ub825\ud558\uba74 \ub7f0\ud0c0\uc784 \uc5d0\ub7ec \ubc1c\uc0dd\\n- where \uc808\uc5d0 \uc720\ud6a8\ud558\uc9c0 \uc54a\ub294 \ud544\ub4dc\uba85\uc744 \ub123\uc73c\uba74 \ub7f0\ud0c0\uc784 \uc5d0\ub7ec \ubc1c\uc0dd\\n\\n\uc774\uc81c `MikroORM` \ub97c \uc0ac\uc6a9\ud558\uba74 \uc5b4\ub5bb\uac8c \ud574\uacb0\ub418\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uc790.\\n\\n### join \ud14c\uc774\ube14 \uceec\ub7fc select\\n\\nintellisense \ub97c \uc9c0\uc6d0\ud558\uba70 join \ud544\ub4dc\uc758 \uacbd\uc6b0\uc5d0\ub3c4 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud55c\ub2e4.\\n\\n![select-hint](select-hint.png)\\n\\n### join \ubc29\uc2dd\\n\\n\uc5f0\uad00\uad00\uacc4 \ud14c\uc774\ube14\uc758 \ub370\uc774\ud130\ub97c \uc870\ud68c\ud560 \uc2dc `TypeORM` \ucc98\ub7fc left join \uc73c\ub85c \uac00\uc838\uc62c \uc218\ub3c4 \uc788\uace0 select in \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.  \\nstrategy \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba70 \ub530\ub85c \uc124\uc815\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uae30\ubcf8\uac12\uc740 select in \uc774\ub2e4.\\n\\nselect in \ubc29\uc2dd\uc740 \uae30\ubcf8 \uc5d4\ud2f0\ud2f0\ub9cc \uba3c\uc800 \uc870\ud68c \ud6c4 \uac01 join \ud14c\uc774\ube14\uc5d0 \ub300\ud574\uc11c \uac01\uac01 \ucd94\uac00 \ucffc\ub9ac\ub97c \uc2e4\ud589\ud55c\ub2e4.  \\n\uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud55c \uacbd\uc6b0\\n\\n```ts\\n// like \uc218\uac00 100 \uac1c\uac00 \ub118\uc5b4\uac00\ub294 comment \uc640 post \uc815\ubcf4\ub97c \uac00\uc838\uc628\ub2e4\\nconst result = await commentEntityRepository.find(\\n  { like: { $gt: 100 } },\\n  {\\n    populate: [\\"post\\"],\\n    strategy: LoadStrategy.SELECT_IN, // select in \ubc29\uc2dd\uc73c\ub85c \uc870\ud68c\\n    fields: [\\"id\\", \\"like\\", \\"post\\", \\"post.name\\"],\\n  }\\n);\\n```\\n\\n\uc544\ub798\uc640 \uac19\uc740 \ub450 \uac1c\uc758 \ucffc\ub9ac\uac00 \uc218\ud589\ub418\uba70 \uadf8 \uacb0\uacfc\ub97c \ubcd1\ud569\ud574 Comment \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub2f4\ub294\ub2e4.\\n\\n```sql\\nselect \\"c0\\".\\"id\\", \\"c0\\".\\"like\\", \\"c0\\".\\"post_id\\" -- post_id \uc790\ub3d9\uc73c\ub85c \uc870\ud68c\\nfrom \\"comment\\" as \\"c0\\"\\nwhere \\"c0\\".\\"like\\" > 100\\n\\nselect \\"p0\\".\\"id\\", \\"p0\\".\\"name\\"\\nfrom \\"post\\" as \\"p0\\"\\nwhere \\"p0\\".\\"id\\" in (\'1\', \'2\', \'3\') -- \uc704 \ucffc\ub9ac\uc758 \uacb0\uacfc\uc758 post_id \uac00 1, 2, 3 \uc778 \uacbd\uc6b0\\norder by \\"p0\\".\\"id\\" asc\\n```\\n\\n:::info\\nTypeORM \ub3c4 0.3.0 \ubc84\uc804 \uc774\ud6c4\ub85c `relationLoadStrategy` \uc635\uc158\uc744 \ud1b5\ud574 select in \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.\\n:::\\n\\n### join \ud14c\uc774\ube14 \uc9c0\uc815\\n\\n\uc870\ud68c\ud560 \uc5f0\uad00\uad00\uacc4 \ud14c\uc774\ube14 \uc9c0\uc815 \uc2dc \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ud544\ub4dc\uba85\uc744 \ub123\uc73c\uba74 \ud0c0\uc785\uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\uba70 nested \ud558\uac8c \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\ub2e4.  \\n\ub9cc\uc57d \ud14c\uc774\ube14\uacfc \uad00\ub828\uc5c6\ub294 \ud544\ub4dc\uba85\uc744 \ub123\uc740\uacbd\uc6b0\ub294 \ubb34\uc2dc\ub41c\ub2e4.\\n\\n```ts\\nawait commentEntityRepository.findOneOrFail(100n, {\\n  populate: [\\"post\\", \\"post.comments\\", \\"like\\"], // like \ub294 \ubb34\uc2dc\\n});\\n```\\n\\n### where \uc808 \ud544\ub4dc \uc9c0\uc815\\n\\n\uc774\uc804 `Smart Query Conditions` \uc5d0\uc11c \uc5b8\uae09\ud55c \uac83\ucc98\ub7fc \uc720\ud6a8\ud558\uc9c0 \uc54a\ub294 \ud544\ub4dc\uba85\uc744 \ub123\uc73c\uba74 \ud0c0\uc785\uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud55c\ub2e4.\\n\\n## Cascade \ubc0f Transaction\\n\\n`TypeORM` post \uc5d4\ud2f0\ud2f0\uc758 comment \ud544\ub4dc\uc120\uc5b8\uc744 \ubcf4\uba74 `cascade` \uc635\uc158\uc774 \uc788\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\\n\\n```ts\\n@OneToMany(() => Comment, (comment) => comment.post, {\\n  cascade: [\'insert\', \'update\'],\\n})\\ncomments: Comment[];\\n```\\n\\n\uc704 \uc635\uc158\uc740 post \uc5d4\ud2f0\ud2f0\uc5d0 save \uc561\uc158\uc774 \uc77c\uc5b4\ub09c \uacbd\uc6b0 comment \ub3c4 \uac19\uc774 \uc218\uc815\ud558\ub824\ub294 \ubaa9\uc801\uc73c\ub85c \uc4f4\ub2e4.  \\ninsert \uc5d0\uc11c\ub294 \ud070 \ubb38\uc81c\ub294 \uc5c6\uc73c\ub098 update \uc2dc \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub2e4.  \\n\ub2e4\uc74c \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uc790.\\n\\n```ts\\nit(\\"transaction \ud14c\uc2a4\ud2b8\\", async () => {\\n  // given\\n  const post = PostFactory.make();\\n  post.comments = [CommentFactory.make(), CommentFactory.make()];\\n  await postRepository.save(post);\\n\\n  // when\\n  const update = () =>\\n    getManager().transaction(async (manager) => {\\n      post.content = \\"new content\\";\\n      await manager.save(post); // post.comment \ub3c4 \uac19\uc774 update \uc218\ud589\\n    });\\n\\n  // then\\n  await expect(update).rejects.toThrowError(\\"violates not-null constraint\\");\\n});\\n```\\n\\npost \uc5d0\ub294 \ub450 \uac1c\uc758 comment \uac00 \uc874\uc7ac\ud558\uace0 \ud2b8\ub79c\uc7ad\uc158 \ub0b4\uc5d0\uc11c post \uc758 content \ud544\ub4dc \uc218\uc815 \ud6c4 save \ub97c \uc218\ud589\ud588\ub2e4.  \\ncomment \uc758 \ub0b4\uc6a9\uc740 \uc804\ud600 \uc218\uc815\ud558\uc9c0 \uc54a\uc558\uae30\uc5d0 post \ub9cc \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\ud589\ud560\uac83\uc73c\ub85c \uae30\ub300\ud558\uc9c0\ub9cc \uc2e4\uc81c\ub85c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud55c\ub2e4.\\n\\n\ucffc\ub9ac\ub85c\uadf8\ub97c \ubcf4\uba74 comment \uc5d0 \ub300\ud574\uc11c 4 \ubc88\uc758 update \uac00 \ubc1c\uc0dd\ud558\uace0 post_id \ud544\ub4dc\ub97c `null` \ub85c \uc124\uc815\ud558\ub824\ub294 \uc2dc\ub3c4\ub97c \ud558\uba70 `not null` \uc870\uac74\uc5d0 \uc758\ud574 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\ub294 \uac83\uc774\ub2e4.\\n\\n![update-null](update-null.png)\\n\\n\uc774\uc640\uac19\uc774 \ube44\uc815\uc0c1\uc801\uc778 \ucffc\ub9ac\ub97c \uc218\ud589\ud560 \uc218 \uc788\uae30\uc5d0 cascade \uc635\uc158 \uc0ac\uc6a9\uc740 \uc9c0\uc591\ud558\ub294\uac8c \uc88b\ub2e4.\\n\\n\ubc18\uba74 `MikroORM` \uc5d0\uc11c\ub294 `Unit of Work` \uc640 `Identity Map` \ud328\ud134\uc73c\ub85c \uc778\ud574 \uc704\uc640\uac19\uc740 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294\ub2e4.  \\n\ub2e4\uc74c \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uc790.\\n\\n```ts\\nconst post = await postEntityRepository.findOneOrFail(100n, {\\n  populate: [\\"comments\\"],\\n});\\n\\n// \ud2b8\ub79c\uc7ad\uc158 \ub0b4\uc5d0\uc11c persist \ub97c \uc9c1\uc811 \ud638\ucd9c\ud558\uc9c0 \uc54a\uc544\ub3c4 update \uc218\ud589\ub41c\ub2e4\\nawait orm.em.transactional(async () => {\\n  post.content = \\"new content\\";\\n  post.comments[0]!.like = 12345;\\n});\\n\\n// \ub610\ub294 \uc544\ub798\ucc98\ub7fc \uc218\ud589\ud574\ub3c4 \uac19\uc740 \uacb0\uacfc\uac00 \ub098\uc628\ub2e4\\nawait postEntityRepository.persistAndFlush(post);\\n```\\n\\n`MikroORM` \uc740 JPA \uc758 \ubcc0\uacbd\uac10\uc9c0\uc640 \uac19\uc740 \uae30\ub2a5\uc774 \uc788\uc5b4 \uc870\ud68c \uba54\uc18c\ub4dc \uacb0\uacfc\ub97c \ub0b4\ubd80\uc801\uc73c\ub85c \uce90\uc2dc\ud55c \ud6c4 \ud2b8\ub79c\uc7ad\uc158\uc774 \ub05d\ub098\uba74 \ub450 \uac12\uc744 \ube44\uad50\ud574 \ubcc0\uacbd\ud55c \ud56d\ubaa9\uc5d0 \ub300\ud574\uc11c\ub9cc update \ub97c \uc218\ud589\ud55c\ub2e4.  \\n\ub610\ud55c `TypeORM` \uc758 save \uc640 \uac19\uc740 persist \uba54\uc18c\ub4dc\ub97c \uc9c1\uc811 \ud638\ucd9c\ud558\uc9c0 \uc54a\uc544\ub3c4 \ud2b8\ub79c\uc7ad\uc158\uc774 \ub05d\ub098\uba74 \uc791\uc5c5\uc744 \uc218\ud589\ud55c\ub2e4.\\n\\n`MikroORM` \uc740 JPA \uc758 \uc601\uc18d\uc131 \ucee8\ud14d\uc2a4\ud2b8\uc640 \uac19\uc740 \uac1c\ub150\uc774 \uc801\uc6a9\ub418\uc5b4 \uc788\uae30\uc5d0 \uc774\ubbf8 \uce90\uc2dc\uc5d0 \uc874\uc7ac\ud558\ub294 \ub370\uc774\ud130\ub97c \ucc3e\ub294 \uacbd\uc6b0\uc5d0\ub294 \ucffc\ub9ac\ub97c \uc218\ud589\ud558\uc9c0 \uc54a\uace0 \uce90\uc2dc\uc5d0 \uc788\ub294 \uac83\uc744 \ubc14\ub85c \uc804\ub2ec\ud55c\ub2e4.\\n\\n```ts\\nconst post = postFactory.makeOne();\\npost.comments.add(...commentFactory.make(5));\\n\\n// post \uc0dd\uc131\\nawait postEntityRepository.persistAndFlush(post);\\n\\n// \ub3d9\uc77c\ud55c post \uc870\ud68c\\nconst newPost = await postEntityRepository.findOneOrFail(post.id, {\\n  populate: [\\"comments\\"],\\n});\\n\\n// \ub450 \ubcc0\uc218\ub294 \ub3d9\uc77c\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \uac00\ub9ac\ud0b4\\nconsole.log(newPost === post); // true\\n```\\n\\n## Sqlite \uc9c0\uc6d0\\n\\n\ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ud1b5\ud569 \ud14c\uc2a4\ud2b8 \uc791\uc131\uc2dc JVM \uc9c4\uc601\uc5d0\uc11c\ub294 \ubcf4\ud1b5 h2 \uc640 \uac19\uc740 \uacbd\ub7c9 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ud65c\uc6a9\ud55c\ub2e4.  \\nNode.js \uc5d0\uc11c\ub294 `sqlite` \ub97c \ud65c\uc6a9\ud574 \ud14c\uc2a4\ud2b8\ud560 \uc218 \uc788\uc9c0\ub9cc `TypeORM` \uc5d0\uc11c\ub294 \ucee4\uc2a4\ud140 \ud0c0\uc785 \uad00\ub828 \uc774\uc288\uac00 \ubc1c\uc0dd\ud55c\ub2e4.\\n\\n\uae30\ubcf8 \uc5d4\ud2f0\ud2f0 \ud30c\uc77c\uc744 \uc0b4\ud3b4\ubcf4\uba74 `createdAt` \ud544\ub4dc\ub97c js \ub0b4\uc7a5 `Date` \ub300\uc2e0 `LocalDateTime` \uc744 \uc0ac\uc6a9\ud588\ub2e4.\\n\\n```ts\\n@Column({\\n  type: \'timestamptz\',\\n  transformer: new LocalDateTimeType(),\\n  nullable: false,\\n  update: false,\\n})\\ncreatedAt: LocalDateTime;\\n```\\n\\nsqlite \uad00\ub828 \uc124\uc815\uc744 \ud55c \ud6c4 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\uba74 \uc544\ub798\uc640 \uac19\uc740 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud55c\ub2e4.\\n\\n```text\\nDataTypeNotSupportedError: Data type \\"timestamptz\\" in \\"Comment.createdAt\\" is not supported by \\"better-sqlite3\\" database.\\n```\\n\\n\uae30\ubcf8 `Date` \ud0c0\uc785 \uc0ac\uc6a9\ud558\uba74 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud558\uc9c0\ub9cc \ud14c\uc2a4\ud2b8\ub97c \uc704\ud574 \ucee4\uc2a4\ud140 \ud0c0\uc785\uc744 \ud3ec\uae30\ud574\uc57c \ud558\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud55c\ub2e4.  \\n\ubc18\uba74 `MikroORM` \uc740 \ud574\ub2f9 \uc774\uc288\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc73c\uba70 \ucee4\uc2a4\ud140 \ub0a0\uc9dc \ud0c0\uc785\uc740 unix time \uc73c\ub85c \ubcc0\ud658\ub418\uc5b4 \ub4e4\uc5b4\uac04\ub2e4.\\n\\n## \ub9c8\ubb34\ub9ac\\n\\nTypeScript \uc640 \uac19\uc740 \uc815\uc801 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud560 \ub54c\uc758 \ud070 \uc7a5\uc810\uc740 \ucef4\ud30c\uc77c \ub2e8\uacc4 \uc774\uc804\uc5d0 \uac1c\ubc1c\uc790\uc758 \uc2e4\uc218\ub97c \uc0ac\uc804\uc5d0 \uc7a1\uc544\ub0bc \uc218 \uc788\ub2e4\ub294 \uac83\uc774\ub2e4.  \\n`TypeORM` \uc744 \uc0ac\uc6a9\ud558\uba74\uc11c \uc704\uc640 \uac19\uc740 \uc7a5\uc810\uc744 \uc5bb\uae30\ub97c \ubc14\ub790\uc9c0\ub9cc \uadf8\ub3d9\uc548 \uc0ac\uc6a9\ud558\uba74\uc11c \ub290\ub080\uc810\uc740 \uc774\ub984\uc5d0 \ube44\ud574 \uc0dd\uac01\ubcf4\ub2e4 typesafe \ud558\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc774\uc5c8\ub2e4.\\n\\n\ub610\ud55c \uc5ec\ub7ec \uc774\uc288\uac00 \ubc1c\uc0dd\ud574 \ud574\uacb0\ubc29\ubc95\uc744 \ucc3e\ub294\ub370 \ub9ce\uc740\uc2dc\uac04\uc744 \ub4e4\uc600\uace0 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \ubc1c\uc804\uc18d\ub3c4\uac00 \ub290\ub824 \uc544\uc26c\uc6c0\uc774 \ub9ce\uc558\ub2e4.  \\n\uc774\ubc88\uc5d0 `MikroORM` \uc744 \uc0b4\ud3b4\ubcf4\uba74\uc11c \uc544\uc9c1 \uc0ac\uc6a9\uc790\uac00 \ub9ce\uc9c0 \uc54a\uc544 \ubb38\uc11c\uac00 \uc801\ub2e4\ub294 \ub2e8\uc810\uc744 \uc81c\uc678\ud558\uba74 \uc0c1\ub2f9\ud788 \uc798 \ub9cc\ub4e4\uc5b4\uc9c4 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub77c\uace0 \ub290\uaf08\ub2e4.  \\n\ud604\uc7ac \uafb8\uc900\ud788 \uc5c5\ub370\uc774\ud2b8\ub97c \uc9c4\ud589\ud558\uace0 \uc788\uace0 [nest.js \uacf5\uc2dd\ubb38\uc11c](https://docs.nestjs.com/recipes/mikroorm) \uc5d0\ub3c4 \ud3ec\ud568\ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\uc790\uac00 \ub298\uc5b4\ub0a0 \uac00\ub2a5\uc131\uc774 \uc788\ub2e4\uace0 \uc0dd\uac01\ud55c\ub2e4."},{"id":"/2022/01/30/lazy-eval-in-kotlin","metadata":{"permalink":"/2022/01/30/lazy-eval-in-kotlin","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-01-30-lazy-eval-in-kotlin/index.mdx","source":"@site/blog/2022-01-30-lazy-eval-in-kotlin/index.mdx","title":"Kotlin \uc73c\ub85c \uc9c0\uc5f0\ud3c9\uac00 \uad6c\ud604\ud558\uae30","description":"\uc9c0\uc5f0\ud3c9\uac00\ub294 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \uc790\uc8fc \ub4f1\uc7a5\ud558\ub294 \uac1c\ub150\uc774\uba70 \uc5b4\ub5a4 \ud45c\ud604\uc2dd\uc758 \uac12\uc744 \ud544\uc694\ub85c \ud560 \ub54c\uae4c\uc9c0 \ud3c9\uac00\ub97c \ubbf8\ub8e8\ub294 \ubc29\ubc95\uc774\ub2e4.","date":"2022-01-30T00:00:00.000Z","formattedDate":"2022\ub144 1\uc6d4 30\uc77c","tags":[{"label":"kotlin","permalink":"/tags/kotlin"},{"label":"lazy-evaluation","permalink":"/tags/lazy-evaluation"}],"readingTime":10.97,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"Kotlin \uc73c\ub85c \uc9c0\uc5f0\ud3c9\uac00 \uad6c\ud604\ud558\uae30","authors":"jake","tags":["kotlin","lazy-evaluation"]},"prevItem":{"title":"MikroORM \uacfc TypeORM \ube44\uad50","permalink":"/2022/02/16/mikroorm-vs-typeorm"},"nextItem":{"title":"ts-morph \ub85c \uac1c\ubc1c \ucee8\ubca4\uc158 \uac80\uc99d \uc790\ub3d9\ud654\ud558\uae30","permalink":"/2022/01/08/convention-check-with-ts-morph"}},"content":"\uc9c0\uc5f0\ud3c9\uac00\ub294 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0\uc11c \uc790\uc8fc \ub4f1\uc7a5\ud558\ub294 \uac1c\ub150\uc774\uba70 \uc5b4\ub5a4 \ud45c\ud604\uc2dd\uc758 \uac12\uc744 \ud544\uc694\ub85c \ud560 \ub54c\uae4c\uc9c0 \ud3c9\uac00\ub97c \ubbf8\ub8e8\ub294 \ubc29\ubc95\uc774\ub2e4.  \\n\ud568\uc218\ud615 \uc5b8\uc5b4\uc5d0\uc11c\ub294 \uae30\ubcf8\uc73c\ub85c \ubaa8\ub4e0 \uacc4\uc0b0\uc774 \uc9c0\uc5f0\ud3c9\uac00\ub85c \ub3d9\uc791\ud558\uae30\uc5d0 \ub530\ub85c \uad6c\ud604\ud560 \ud544\uc694\ub294 \uc5c6\uc9c0\ub9cc \uadf8\ub807\uc9c0 \uc54a\uc740 \uc5b8\uc5b4\uc5d0\uc11c\ub294 \uac01\uc790\uc758 \uc5b8\uc5b4 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud574 \uad6c\ud604\ud55c\ub2e4.\\n\\n\ucf54\ud2c0\ub9b0\uc5d0\uc11c\ub294 \ud45c\uc900 \uc704\uc784 \ud074\ub798\uc2a4 \uc911 \ud558\ub098\uc778 `Lazy` \ub97c \ud1b5\ud574 \uc9c0\uc5f0\ud3c9\uac00\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.  \\n\ud558\uc9c0\ub9cc \uc774\ub294 \uc644\ubcbd\ud55c \uc9c0\uc5f0\ud3c9\uac00\ub77c\uae30 \ubcf4\ub2e4 \ud504\ub85c\ud37c\ud2f0\uc758 \uc9c0\uc5f0 \ucd08\uae30\ud654\uc5d0 \uac00\uae5d\ub2e4.  \\n\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 \uba54\ubaa8\uc774\uc81c\uc774\uc158 \uae30\ub2a5\uc774 \uc788\ub294 \ucee4\uc2a4\ud140 `Lazy` \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uacfc\uc815\uc744 \uae30\uc220\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n> - \ubaa8\ub4e0 \ucf54\ub4dc\ub294 https://github.com/jbl428/study-note/tree/master/kotlin/lazy \uc5d0 \uc788\uc2b5\ub2c8\ub2e4.\\n> - \ubcf8 \uae00\uc740 [\ucf54\ud2c0\ub9b0\uc744 \ub2e4\ub8e8\ub294 \uae30\uc220](https://thebook.io/080208) \uc5d0 \uc788\ub294 \uc9c0\uc5f0\uacc4\uc0b0 \ucc55\ud130\uc758 \ub0b4\uc6a9\uc744 \ucc38\uace0\ud574 \uc791\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n\\n## Lazy \uc704\uc784 \ud074\ub798\uc2a4\\n\\n\uba3c\uc800 \ucf54\ud2c0\ub9b0\uc758 Lazy \uc704\uc784 \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud55c \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uc790.\\n\\n```kt\\ninternal class LazyTest {\\n    @Test\\n    fun `\ub0b4\uc7a5 Lazy \ud14c\uc2a4\ud2b8`() {\\n        // given\\n        class Foo {\\n            val bar: String by lazy {\\n                println(\\"lazy\\")\\n                \\"bar\\"\\n            }\\n\\n            init {\\n                println(\\"init\\")\\n                println(bar)\\n            }\\n        }\\n\\n        // when\\n        val foo = Foo()\\n        println(foo.bar)\\n    }\\n}\\n```\\n\\n\uc704 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud55c \ud6c4 \ub85c\uadf8\ub97c \uc0b4\ud3b4\ubcf4\uba74 \ub2e4\uc74c\uacfc \uac19\uc774 \ucd9c\ub825\ub41c\ub2e4.\\n\\n```text\\ninit\\nlazy\\nbar\\nbar\\n```\\n\\n`Foo` \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \uc2dc `init` \uc774 \uc2e4\ud589\ub418\uace0 **\\"init\\"** \uc774 \ucd9c\ub825\ub41c\ub2e4.  \\n\uc774\ud6c4 `print(bar)` \uc5d0\uc11c \ucc98\uc74c `bar` \ub97c \ucc38\uc870\ud558\uba70 `by lazy` \uc5d0 \uc9c0\uc815\ud55c \uba54\uc18c\ub4dc\uac00 \uc2e4\ud589\ub41c\ub2e4.  \\n\ub530\ub77c\uc11c **\\"lazy\\"**, **\\"bar\\"** \uac00 \ucd9c\ub825\ub418\uace0 \uc774\ud6c4 `foo.bar` \ub97c \ucc38\uc870\ud560 \ub54c\uc5d0\ub294 **\\"lazy\\"** \ub294 \ucd9c\ub825\ub418\uc9c0 \uc54a\ub294\uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\\n\\n## \ucd94\uac00\uae30\ub2a5 \uad6c\ud604\\n\\n\uc774\ucc98\ub7fc `Lazy` \uc704\uc784 \ud074\ub798\uc2a4\ub294 \ud504\ub85c\ud37c\ud2f0\uc758 \ucd08\uae30\ud654\ub97c \uc9c0\uc5f0\uc2dc\ud0ac \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud574\uc8fc\uace0 \uc774\ub97c \ud655\uc7a5\ud574 \ub2e4\uc74c \uae30\ub2a5\uc744 \ucd94\uac00\ub85c \uad6c\ud604\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n### \uba54\ubaa8\uc774\uc81c\uc774\uc158\\n\\n:::info\\n\uba54\ubaa8\uc774\uc81c\uc774\uc158(memoization)\uc740 \ucef4\ud4e8\ud130 \ud504\ub85c\uadf8\ub7a8\uc774 \ub3d9\uc77c\ud55c \uacc4\uc0b0\uc744 \ubc18\ubcf5\ud574\uc57c \ud560 \ub54c, \uc774\uc804\uc5d0 \uacc4\uc0b0\ud55c \uac12\uc744 \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud568\uc73c\ub85c\uc368 \ub3d9\uc77c\ud55c \uacc4\uc0b0\uc758 \ubc18\ubcf5 \uc218\ud589\uc744 \uc81c\uac70\ud558\uc5ec \ud504\ub85c\uadf8\ub7a8 \uc2e4\ud589 \uc18d\ub3c4\ub97c \ube60\ub974\uac8c \ud558\ub294 \uae30\uc220\uc774\ub2e4. (\ucd9c\ucc98: wikipedia)\\n:::\\n\\n\uc774\uc804 \uc608\uc81c\ucf54\ub4dc\uc5d0\uc11c `by lazy` \uc5d0 \uae30\uc220\ud55c \ucd08\uae30\ud654 \ub85c\uc9c1\uc740 \ud55c \ubc88\ub9cc \uc2e4\ud589\ub418\uace0 \uc774\ud6c4\uc5d0\ub294 `bar` \uc758 \uac12\uc744 \ubc14\ub85c \uc0ac\uc6a9\ud558\ub4ef\uc774 \ud568\uc218\uc758 \ub85c\uc9c1\uc740 \ud55c \ubc88\ub9cc \uc2e4\ud589\ub418\uace0 \uc774\ud6c4\uc5d0\ub294 \uacb0\uacfc\ub97c \ubc14\ub85c \uc81c\uacf5\ud55c\ub2e4.\\n\\n### \ud569\uc131\\n\\n\uc9c0\uc5f0\ud3c9\uac00 \uc778\uc2a4\ud134\uc2a4\uac00 \ubc18\ud658\ud558\ub294 \uacb0\uacfc\uc5d0 \uc0c8\ub85c\uc6b4 \ud568\uc218\ub97c \ud569\uc131\ud574 \uc0c8\ub85c\uc6b4 \uc9c0\uc5f0\ud3c9\uac00 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\uc900\ub2e4.  \\n\ud569\uc131\ud558\ub294 \ud568\uc218\ub294 \uc77c\ubc18\uc801\uc778 \uac12\uc744 \ubc18\ud658\ud558\uac70\ub098 \uc0c8\ub85c\uc6b4 \uc9c0\uc5f0 \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud558\ub294 \ud615\ud0dc\ub97c \uac00\uc9c4\ub2e4.  \\n\uc608\ub97c\ub4e4\uba74 \uc544\ub798\uc640 \uac19\uc740 \ud0c0\uc785\uc758 \ud568\uc218\ub97c \ub9d0\ud55c\ub2e4.\\n\\n```kt\\nfun normal(a: Int): String\\nfun newLazy(a: String): Lazy<Boolean>\\n```\\n\\n## \ucee4\uc2a4\ud140 Lazy \ud074\ub798\uc2a4\\n\\n### \uc120\uc5b8\\n\\n\uba3c\uc800 \uc544\ub798\uc640 \uac19\uc740 \ucee4\uc2a4\ud140 Lazy \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud55c\ub2e4.\\n\\n```kt\\nclass Lazy<out A>(fn: () -> A) {\\n    private val value by lazy(fn)\\n    operator fun invoke(): A {\\n        return value\\n    }\\n}\\n```\\n\\n`Lazy` \ub294 generic \ud074\ub798\uc2a4\ub85c \uc0dd\uc131\uc790 \ud30c\ub77c\ubbf8\ud130\ub85c \ud568\uc218\ub97c \ubc1b\uc73c\uba70 \ub0b4\ubd80 value \ubcc0\uc218\uc758 \ucd08\uae30\ud654\ub97c \uc704\ud574 \uc0ac\uc6a9\ub41c\ub2e4.  \\n`invoke` \uba54\uc18c\ub4dc\ub294 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9c8\uce58 \ud568\uc218\ud638\ucd9c \ud558\ub4ef\uc774 \uc791\uc131\ud558\uba74 \uc218\ud589\ub418\ub294 \ub85c\uc9c1\uc73c\ub85c \ub2e8\uc21c\ud788 value \ub97c \ubc18\ud658\ud55c\ub2e4.  \\n\uc774 \uba54\uc18c\ub4dc\uac00 \ucc98\uc74c \uc218\ud589\ub418\uba74 \ucd08\uae30\ud654 \ud568\uc218\uac00 \uc2e4\ud589\ub418\uba70 \uc774\ud6c4\uc5d0\ub294 \ud560\ub2f9\uc744 \uc644\ub8cc\ud55c value \ub97c \ubc14\ub85c \ubc18\ud658\ud55c\ub2e4.  \\n\uc774\ucc98\ub7fc \ucf54\ud2c0\ub9b0\uc758 \uae30\ubcf8\ubb38\ubc95\ub9cc \uc0ac\uc6a9\ud574\ub3c4 \uc9c0\uc5f0\ud3c9\uac00\uc640 \uba54\ubaa8\uc774\uc81c\uc774\uc158\uc744 \uc190\uc27d\uac8c \uad6c\ud604\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.\\n\\n\ucf54\ud2c0\ub9b0\uc744 \ud1b5\ud574 \uc5bb\uc744 \uc218 \uc788\ub294 \ub610 \ud558\ub098\uc758 \uc7a5\uc810\uc740 `Lazy` \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\ucf54\ub4dc\uac00 \ub9c8\uce58 \ud568\uc218 \uc120\uc5b8\ubb38\ucc98\ub7fc \ubcf4\uc774\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub2e4\ub294 \uac83\uc774\ub2e4.  \\n\uc774\uac70\ub294 \uac1c\uc778\uc801\uc778 \ucde8\ud5a5\uc774\uae34 \ud558\uc9c0\ub9cc \ub9c8\uce58 Lazy \ub85c \ub3d9\uc791\ud558\ub294 block \uc744 \ub9cc\ub4dc\ub294 \uac83\ucc98\ub7fc \ubcf4\uc5ec \ub354 \uae54\ub054\ud574\ubcf4\uc778\ub2e4.\\n\\n```kt\\nval lazy = Lazy {\\n    println(\\"lazy\\")\\n    true\\n}\\nval result = lazy() // prints \\"lazy\\", returns true\\n```\\n\\n### \ub17c\ub9ac\uc5f0\uc0b0\\n\\n\ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\uc5d0\uc11c \ub17c\ub9ac\uc5f0\uc0b0\ub85c \ub4f1\uc7a5\ud558\ub294 `or`, `and` \ub294 \ubcf4\ud1b5 \uccab \ubc88\uc9f8 \ud45c\ud604\uc2dd\uc758 \uacb0\uacfc\uc5d0 \ub530\ub77c \ub2e4\uc74c \ud45c\ud604\uc2dd\uc744 \ud3c9\uac00\ud558\uc9c0 \uc54a\ub3c4\ub85d \ub3d9\uc791\ud55c\ub2e4.  \\n\uc608\ub97c\ub4e4\uba74 `or` \ub294 \uccab \ubc88\uc9f8 \ud45c\ud604\uc2dd\uc774 true \uc774\uba74 \ub2e4\uc74c \ud45c\ud604\uc2dd\uc740 \ud3c9\uac00\ud558\uc9c0 \uc54a\ub294\ub2e4.  \\n`Lazy` \uc778\uc2a4\ud134\uc2a4\ub85c \uac10\uc2fc \uacbd\uc6b0\uc5d0\ub3c4 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ub3d9\uc791\ud558\uac8c \ub41c\ub2e4.\\n\\n```kt\\n@Test\\nfun `Or \ub3d9\uc791 \ud14c\uc2a4\ud2b8`() {\\n    // given\\n    val lazyA = Lazy {\\n        true\\n    }\\n    val lazyB = Lazy<Boolean> {\\n        throw Error(\\"error\\")\\n    }\\n\\n    // when\\n    val result = lazyA() || lazyB()\\n\\n    // then\\n    assertTrue(result)\\n}\\n```\\n\\n\ub9cc\uc57d `lazyB()` \ud45c\ud604\uc2dd\uc744 \ud3c9\uac00\ud55c\ub2e4\uba74 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\uc9c0\ub9cc `lazyA()` \uac00 true \ub97c \ubc18\ud658\ud558\uae30 \ub54c\ubb38\uc5d0 \ubb34\uc2dc\ub418\uace0 \ud14c\uc2a4\ud2b8\ub97c \ud1b5\uacfc\ud55c\ub2e4.\\n\\n### map\\n\\n\uc774\uc81c \ud568\uc218\ub97c \ud569\uc131\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \ucd94\uac00\ud574\ubcf4\uc790.  \\n`map` \uba54\uc18c\ub4dc\ub294 \uc9c0\uc5f0\ud3c9\uac00 \uae30\ub2a5\uc774 \uc5c6\ub294 \uc77c\ubc18\uc801\uc778 \ud568\uc218\ub97c \ubc1b\uc544 \uc0c8\ub85c\uc6b4 `Lazy` \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e0\ub2e4.  \\n\ub9c8\uce58 List \uc758 map \uba54\uc18c\ub4dc\uac00 \ubc30\uc5f4\ud615\ud0dc\ub294 \uadf8\ub300\ub85c \uc720\uc9c0\ud55c\ucc44\ub85c \ub0b4\ubd80 \uac12\ub4e4\ub9cc \ubc14\uafb8\ub294\uac83\ucc98\ub7fc \uc9c0\uc5f0\ud3c9\uac00\uc640 \uba54\ubaa8\uc774\uc81c\uc774\uc158 \uae30\ub2a5\uc740 \uadf8\ub300\ub85c \uc720\uc9c0\ud55c\ucc44\ub85c \ucd5c\uc885 \ud3c9\uac00 \uacb0\uacfc\ubb3c\ub9cc \ub2ec\ub77c\uc9c0\uac8c \ud574\uc900\ub2e4.\\n\\n```kt {4}\\nclass Lazy<out A>(fn: () -> A) {\\n    private val value by lazy(fn)\\n\\n    fun <B> map(fn: (A) -> B): Lazy<B> = Lazy { fn(value) }\\n}\\n```\\n\\n\ucf54\ub4dc\ub97c \ubcf4\uba74 \uad6c\ud604\uc774 \ub9e4\uc6b0 \uac04\ub2e8\ud55c \uac83\uc744 \uc54c \uc218 \uc788\ub2e4. \uc8fc\uc5b4\uc9c4 \ud568\uc218\ub97c \ub0b4\ubd80 value \ub97c \uc804\ub2ec\ud574 \ud638\ucd9c\ud558\ub294 \ub85c\uc9c1\uc744 `Lazy` \ub85c \uac10\uc2f8\uba74\ub41c\ub2e4.  \\n\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uc790.\\n\\n```kt\\n@Test\\nfun `Map \ub3d9\uc791 \ud14c\uc2a4\ud2b8`() {\\n    // given\\n    var count = 0\\n    val lazy = Lazy {\\n        count++\\n        10\\n    }\\n\\n    // when\\n    val result = lazy.map { a -> a + 10 }\\n\\n    // then\\n    assertEquals(count, 0)\\n    assertEquals(result(), 20)\\n    assertEquals(count, 1)\\n}\\n```\\n\\n`lazy` \uc778\uc2a4\ud134\uc2a4\ub294 \uc2e4\ud589 \uc2dc `count` \ub97c 1 \uc99d\uac00\uc2dc\ud0a4\uace0 10 \uc744 \ubc18\ud658\ud55c\ub2e4.  \\n\uc774\ud6c4 map \uc744 \ud638\ucd9c\ud574 \ub0b4\ubd80\uac12\uc744 10 \uc99d\uac00\uc2dc\ud0a4\ub294 \uc0c8\ub85c\uc6b4 `Lazy` \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud55c\ub2e4.  \\n\ub530\ub77c\uc11c `result` \ud638\ucd9c \uc804\uae4c\uc9c0\ub294 `count` \ub294 0 \uc774\uc9c0\ub9cc \ud638\ucd9c\uc774\ud6c4 1 \ub85c \ubcc0\ud558\uac8c\ub41c\ub2e4.  \\n\ub610\ud55c `reulst()` \ub294 20 \uc744 \ubc18\ud658\ud558\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.\\n\\n### flatMap\\n\\n`map` \uc774 \uc77c\ubc18\ud568\uc218\ub97c \ud569\uc131\ud558\ub294 \uc5ed\ud560\uc774\uc5c8\ub2e4\uba74 `flatMap` \uc740 `Lazy` \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \ud569\uc131\ud558\ub294 \uc5ed\ud560\uc744\ud55c\ub2e4.  \\n\ub9cc\uc57d \ud574\ub2f9\ud568\uc218\ub97c `map` \uc73c\ub85c \ud569\uc131\ud558\uba74 \uacb0\uacfc\uac00 `Lazy<Lazy<A>>` \ud615\ud0dc\uac00 \ub418\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\uae30 \ub9e4\uc6b0 \ubd88\ud3b8\ud574\uc9c4\ub2e4.  \\n\uadf8\ub798\uc11c `flatMap` \uc740 \uc774\ub984 \uadf8\ub300\ub85c `Lazy` \ub97c \ud55c \ub2e8\uacc4 flatten \ud574\uc8fc\ub294 \uc5ed\ud560\uc744 \ud55c\ub2e4.\\n\\n```kt {4}\\nclass Lazy<out A>(fn: () -> A) {\\n    private val value by lazy(fn)\\n\\n    fun <B> flatMap(fn: (A) -> Lazy<B>): Lazy<B> = Lazy { fn(value)() }\\n}\\n```\\n\\n\uc774\ubc88\uc5d0\ub3c4 \uad6c\ud604\uc740 \uac04\ub2e8\ud558\ub2e4. `fn(value)` \uac00 `Lazy` \uc778\uc2a4\ud134\uc2a4\ub97c \ubc18\ud658\ud558\ubbc0\ub85c \ubc14\ub85c \ud3c9\uac00\ud55c \ud6c4 \uacb0\uacfc\ub97c `Lazy` \ub85c \ub2e4\uc2dc \uac10\uc2f8\uba74 \ub41c\ub2e4.\\n\\n```kt\\n@Test\\nfun `FlatMap \ub3d9\uc791 \ud14c\uc2a4\ud2b8`() {\\n    // given\\n    var count = 0\\n    val lazy = Lazy {\\n        count++\\n        10\\n    }\\n\\n    // when\\n    val result = lazy.flatMap { a -> Lazy { a + 10 } }\\n\\n    // then\\n    assertEquals(count, 0)\\n    assertEquals(result(), 20)\\n    assertEquals(count, 1)\\n    result()\\n    assertEquals(count, 1)\\n}\\n```\\n\\n\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub3c4 `map` \uacfc \uac70\uc758 \uc720\uc0ac\ud558\uba70 `result()` \ub97c 2\ubc88 \uc218\ud589\ud574\ub3c4 `count` \uc758 \uac12\uc740 1 \ub85c \uc720\uc9c0\ub418\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.\\n\\n### sequence\\n\\n\ub9c8\uc9c0\ub9c9\uc73c\ub85c `Lazy` \uc778\uc2a4\ud134\uc2a4\uc758 \ub9ac\uc2a4\ud2b8\ub97c \ub2e4\ub8f0 \ub54c \uc0ac\uc6a9\ud558\ub294 `sequence` \ub97c \uad6c\ud604\ud574\ubcf4\uc790.  \\n`sequence` \uba54\uc18c\ub4dc\ub294 `node.js` \uac1c\ubc1c\uc790\uc5d0\uac8c \uce5c\uc219\ud55c `Promise.all` \uacfc \ube44\uc2b7\ud55c \uc5ed\ud560\uc744 \ud55c\ub2e4.\\n\\n`Promise.all` \uc740 promise \uc758 \ubc30\uc5f4\ud0c0\uc785\uc778 `Array<Promise<A>>` \ub97c `Promise<Array<A>>` \ud615\ud0dc\uc758 **\ub2e8\uc77c promise**\ub85c \ub9cc\ub4e4\uc5b4\uc900\ub2e4.  \\n\ub9c8\ucc2c\uac00\uc9c0\ub85c `sequence` \ub294 `List<Lazy<A>>` \ud615\ud0dc\ub97c `Lazy<List<A>>` \uc758 **\ub2e8\uc77c Lazy \uc778\uc2a4\ud134\uc2a4**\ub85c \ub9cc\ub4e4\uc5b4\uc900\ub2e4.\\n\\n```kt\\nfun <A> sequence(list: List<Lazy<A>>): Lazy<List<A>> = Lazy { list.map { it() } }\\n```\\n\\n\uc8fc\uc5b4\uc9c4 \ub9ac\uc2a4\ud2b8\ub97c \uc21c\ud68c\ud558\uba74\uc11c \uac01 `Lazy` \uc778\uc2a4\ud134\uc2a4\ub97c \ud3c9\uac00\ud574 `List<A>` \ub97c \uc5bb\ub294 \ub85c\uc9c1\uc744 `Lazy` \ub85c \uac10\uc2fc\ub2e4.\\n\\n```kt\\n@Test\\nfun `Sequence \ub3d9\uc791 \ud14c\uc2a4\ud2b8`() {\\n    // given\\n    var count = 0\\n    val list = (1..10).map {\\n        Lazy {\\n            count++\\n            it\\n        }\\n    }\\n\\n    // when\\n    val result = sequence(list)\\n\\n    // then\\n    assertEquals(count, 0)\\n    assertEquals(result(), (1..10).toList())\\n    assertEquals(count, 10)\\n    result()\\n    assertEquals(count, 10)\\n}\\n```\\n\\n`list` \ubcc0\uc218\ub294 `Lazy` \uc778\uc2a4\ud134\uc2a4\ub4e4\uc758 \ubc30\uc5f4\ub85c \ucd5c\uc885 \ud3c9\uac00\ub418\ub294 \uac12\uc744 \uc5bb\uc73c\ub824\uba74 \uac01 \ubc30\uc5f4\uc744 \uc21c\ud68c\uc5d0 \uc77c\uc77c\ud788 \uac12\uc744 \ud3c9\uac00\ud558\ub294 \ub85c\uc9c1\uc744 \uc791\uc131\ud574\uc57c\ud55c\ub2e4.  \\n\ud558\uc9c0\ub9cc `sequence` \ud568\uc218\ub97c \ud65c\uc6a9\ud574 \ub2e8\uc77c `Lazy` \uc778\uc2a4\ud134\uc2a4\ub85c \ub9cc\ub4e4\uc5c8\uace0 \uadf8 \uacb0\uacfc\uc778 `result` \ub97c \uc218\ud589\ud558\uba74 \uc27d\uac8c \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\ub2e4."},{"id":"/2022/01/08/convention-check-with-ts-morph","metadata":{"permalink":"/2022/01/08/convention-check-with-ts-morph","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-01-08-convention-check-with-ts-morph/index.mdx","source":"@site/blog/2022-01-08-convention-check-with-ts-morph/index.mdx","title":"ts-morph \ub85c \uac1c\ubc1c \ucee8\ubca4\uc158 \uac80\uc99d \uc790\ub3d9\ud654\ud558\uae30","description":"\ucd5c\uadfc\uc5d0 typescript \ud658\uacbd\uc5d0\uc11c \uac1c\ubc1c \ucee8\ubca4\uc158\uc744 \ud655\uc778\ud558\ub294 \uc791\uc5c5\uc744 \uc790\ub3d9\ud654\ud558\ub294 \ubc29\ubc95\uc744 \ucc3e\ub2e4\uac00 ts-morph \ub97c \ub3c4\uc785\ud558\uac8c \ub41c \uacfc\uc815\uc744 \uae30\uc220\ud558\ub824\uace0 \ud55c\ub2e4.","date":"2022-01-08T00:00:00.000Z","formattedDate":"2022\ub144 1\uc6d4 8\uc77c","tags":[{"label":"ts-morph","permalink":"/tags/ts-morph"},{"label":"static-analysis","permalink":"/tags/static-analysis"}],"readingTime":13.265,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"ts-morph \ub85c \uac1c\ubc1c \ucee8\ubca4\uc158 \uac80\uc99d \uc790\ub3d9\ud654\ud558\uae30","authors":"jake","tags":["ts-morph","static-analysis"]},"prevItem":{"title":"Kotlin \uc73c\ub85c \uc9c0\uc5f0\ud3c9\uac00 \uad6c\ud604\ud558\uae30","permalink":"/2022/01/30/lazy-eval-in-kotlin"},"nextItem":{"title":"kotlin \ud658\uacbd\uc5d0\uc11c Querydsl \uc124\uc815\ud558\uae30","permalink":"/2022/01/05/querydsl-in-kotlin"}},"content":"\ucd5c\uadfc\uc5d0 typescript \ud658\uacbd\uc5d0\uc11c \uac1c\ubc1c \ucee8\ubca4\uc158\uc744 \ud655\uc778\ud558\ub294 \uc791\uc5c5\uc744 \uc790\ub3d9\ud654\ud558\ub294 \ubc29\ubc95\uc744 \ucc3e\ub2e4\uac00 `ts-morph` \ub97c \ub3c4\uc785\ud558\uac8c \ub41c \uacfc\uc815\uc744 \uae30\uc220\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n> \uad00\ub828 \ucf54\ub4dc\ub294 \uc544\ub798 \ub9c1\ud06c\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\\n\\n- https://github.com/jbl428/study-note/tree/master/ts-morph\\n\\n\x3c!--truncate--\x3e\\n\\n## \ucee8\ubca4\uc158\\n\\n\uc544\ub798\uc640 \uac19\uc740 `TypeORM` \uc5d4\ud2f0\ud2f0 \ud30c\uc77c\uc774 \uc788\ub2e4\uace0 \uac00\uc815\ud55c\ub2e4.\\n\\n```ts title=\\"Profile.entity.ts\\"\\nimport { Column, Entity, PrimaryGeneratedColumn } from \\"typeorm\\";\\n\\n@Entity()\\nexport class Profile {\\n  @PrimaryGeneratedColumn()\\n  id: number;\\n\\n  @Column()\\n  name: string;\\n\\n  @Column()\\n  email: string;\\n}\\n```\\n\\n```ts title=\\"Post.entity.ts\\"\\nimport {\\n  Column,\\n  Entity,\\n  Index,\\n  JoinColumn,\\n  ManyToOne,\\n  PrimaryGeneratedColumn,\\n} from \\"typeorm\\";\\nimport { Profile } from \\"./Profile.entity\\";\\n\\n@Entity()\\n// highlight-start\\n@Index(\\"idx_post_1\\", [\\"profile\\"]) // profile_id \uc5d0 \uc778\ub371\uc2a4\ub97c \ucd94\uac00\\n@Index(\\"idx_post_2\\", [\\"status\\"]) // status \ud544\ub4dc\uc5d0 \uc778\ub371\uc2a4\ub97c \ucd94\uac00\\n// highlight-end\\nexport class Post {\\n  @PrimaryGeneratedColumn()\\n  id: number;\\n\\n  @Column()\\n  content: string;\\n\\n  @Column()\\n  status: string;\\n\\n  // highlight-start\\n  // profile \uacfc 1:n \uad00\uacc4\uc774\uc9c0\ub9cc FK \ub97c \uc124\uc815\ud558\uc9c0 \uc54a\uc74c\\n  @ManyToOne(() => Profile, { createForeignKeyConstraints: false })\\n  // profile \uc5f0\uad00\uad00\uacc4 \ud544\ub4dc \ucd94\uac00\\n  @JoinColumn({ name: \\"profile_id\\", referencedColumnName: \\"id\\" })\\n  profile: Profile;\\n  // highlight-end\\n}\\n```\\n\\n`Post` \uc5d4\ud2f0\ud2f0\ub294 `Profile` \uacfc 1:N \uad00\uacc4\uc774\uace0 `profile_id` \ud544\ub4dc\uac00 \uc788\uc9c0\ub9cc \uc678\ub798\ud0a4\ub97c \ucd94\uac00\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 class \uc0c1\ub2e8\uc5d0 `@Index` \ub370\ucf54\ub808\uc774\ud130\ub97c \uc774\uc6a9\ud574 \uc778\ub371\uc2a4\ub97c \ucd94\uac00\ud55c\ub2e4.  \\n\uc778\ub371\uc2a4\ub97c \ucd94\uac00\ud558\uc9c0 \uc54a\uc73c\uba74 join \uc131\ub2a5\uc774 \ub5a8\uc5b4\uc9c0\uae30 \ub54c\ubb38\uc5d0 \uac1c\ubc1c\uc790\uac00 \uc778\ub371\uc2a4\ub97c \ucd94\uac00\ud558\uc9c0 \uc54a\ub294 \uc2e4\uc218\ub97c \ud558\uc9c0 \uc54a\ub3c4\ub85d \uac80\uc99d\uacfc\uc815\uc744 \uc790\ub3d9\ud654\ud558\ub824\uace0 \ud588\ub2e4.\\n\\n## Shell script \ub85c \uac80\uc99d\\n\\n\ucc98\uc74c\uc5d0\ub294 bash \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ud65c\uc6a9\ud574\uc11c \uac01 \uc5d4\ud2f0\ud2f0 \ud30c\uc77c\uc744 \uc77d\uc740 \ud6c4 \uc815\uaddc\uc2dd\uc744 \ud65c\uc6a9\ud574 \uac80\uc99d\uc744 \uc2dc\ub3c4\ud558\ub824 \ud588\uc9c0\ub9cc \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\uc720\ub85c \ud558\uc9c0 \uc54a\uc558\ub2e4.\\n\\n### OS\\n\\n\ud604\uc7ac \uac1c\ubc1c\ud300 \ubaa8\ub450 mac \uc744 \uc0ac\uc6a9\ud558\uae30\uc5d0 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud558\ub294\ub370 \uc5b4\ub824\uc6c0\uc774 \uc5c6\uc9c0\ub9cc \ucd94\ud6c4\uc5d0 \uc708\ub3c4\uc6b0\ub97c \uc0ac\uc6a9\ud558\ub294 \uc0ac\ub78c\uc774 \uc62c \uc218\ub3c4 \uc788\ub2e4.  \\n\uc2a4\ud06c\ub9bd\ud2b8\ub97c CI \uc5d0\uc11c \uc2e4\ud589\ud558\uba74 \ud070 \ubb38\uc81c\ub294 \uc5c6\uc9c0\ub9cc OS \uc5d0 \uad00\uacc4\uc5c6\uc774 \ub204\uad6c\ub098 \ub85c\uceec\uc5d0\uc11c \ud3b8\ub9ac\ud558\uac8c \uac80\uc99d\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc2f6\uc5c8\ub2e4.\\n\\n### \uc720\uc9c0\ubcf4\uc218\\n\\nshell script \uc5d0 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \uac1c\ubc1c\uc790\ub3c4 \uc788\uc5b4\uc11c \ud574\ub2f9 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc720\uc9c0\ubcf4\uc218 \ud560 \uc218 \uc788\ub294 \uc0ac\ub78c\uc774 \uc801\uc5b4\uc9c4\ub2e4.  \\n\uac1c\ubc1c\ud658\uacbd\uacfc \uac19\uc740 \uc5b8\uc5b4\ub97c \ud65c\uc6a9\ud574 \uac80\uc99d\uc744 \ud55c\ub2e4\uba74 \ucf54\ub4dc\ub97c \uc774\ud574\ud558\uace0 \uac1c\uc120\ud560 \uc218 \uc788\ub294 \uc0ac\ub78c\uc774 \ub9ce\uc544\uc9c8\uac83\uc774\ub2e4.\\n\\n### \uad6c\ud604\\n\\n\uac80\uc99d\uc744 \uc704\ud574\uc11c \ud30c\uc77c \ub0b4\uc6a9 \uc911 `JoinColumn` \ub370\ucf54\ub808\uc774\ud130\ub85c \uc120\uc5b8\ud55c \ud544\ub4dc\uba85 (\uc608\uc81c\uc5d0\uc11c\ub294 `profile`) \uc744 \uc54c\uc544\ub0b4\uc57c \ud558\ub294\ub370 \ucf54\ub4dc \uc0c1\ud669\uc5d0 \ub530\ub77c \uadf8 \uc704\uce58\uac00 \ub2ec\ub77c\uc9c8 \uc218 \uc788\ub2e4.\\n\\n- JoinColumn \ub77c\uc778 \ubc14\ub85c \uc544\ub798\uc5d0 \uceec\ub7fc\uba85\uc774 \uc874\uc7ac\\n\\n```ts\\n@ManyToOne(() => Profile, { createForeignKeyConstraints: false })\\n@JoinColumn({ name: \\"profile_id\\", referencedColumnName: \\"id\\" })\\nprofile: Profile;\\n```\\n\\n- JoinColumn \ub450 \ub77c\uc778 \uc544\ub798\uc5d0 \uceec\ub7fc\uba85\uc774 \uc874\uc7ac\\n\\n```ts\\n@JoinColumn({ name: \\"profile_id\\", referencedColumnName: \\"id\\" })\\n@ManyToOne(() => Profile, { createForeignKeyConstraints: false })\\nprofile: Profile;\\n```\\n\\n- JoinColumn \uc138 \ub77c\uc778 \uc544\ub798\uc5d0 \uceec\ub7fc\uba85\uc774 \uc874\uc7ac\\n\\n```ts\\n@ManyToOne(() => Profile, { createForeignKeyConstraints: false })\\n@JoinColumn({\\n  name: \\"profile_id\\",\\n  referencedColumnName: \\"id\\"\\n})\\nprofile: Profile;\\n```\\n\\n- JoinColumn \uacfc \uac19\uc740 \ub77c\uc778\uc5d0 \uc874\uc7ac\\n\\n```ts\\n@ManyToOne(() => Profile, { createForeignKeyConstraints: false })\\n@JoinColumn({ name: \\"profile_id\\", referencedColumnName: \\"id\\" }) profile: Profile;\\n```\\n\\n`prettier` \ub97c \uc0ac\uc6a9\ud558\uba74 \uba87\uac00\uc9c0 \uc0c1\ud669\uc740 \ubc30\uc81c\ud560 \uc218 \uc788\uc9c0\ub9cc \uceec\ub7fc\uba85\uc744 \uc54c\uc544\ub0b4\uae30 \uc704\ud574 multiline \uc5d0 \ub300\ud55c \uc815\uaddc\uc2dd \ud45c\ud604\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ubd88\ud3b8\ud568\uc774 \uc788\ub2e4.  \\n\uadf8\ub9ac\uace0 \uceec\ub7fc\uba85\uc744 \uac00\uc838\uc628 \ud6c4 `@Index` \uc5d0 \uc120\uc5b8\ub41c \uceec\ub834\uba85\uacfc \ube44\uad50\ud558\ub294 \ub85c\uc9c1\uc744 shell script \ub85c \uad6c\ud604\ud558\uae30\ub3c4 \ubcf5\uc7a1\ud558\ub2e4.\\n\\n\uc704\uc640 \uac19\uc740 \uc774\uc720\ub85c shell script \ubcf4\ub2e4 \uac1c\ubc1c\ud658\uacbd\uacfc \uac19\uc740 \uc5b8\uc5b4\uc778 typescript \uc744 \ud65c\uc6a9\ud558\uace0 \uc2f6\uc5c8\uace0 \uc774\uc804\ubd80\ud130 \ub208\uc5ec\uaca8\ubcf8 `ts-morph` \ub97c \ub3c4\uc785\ud574\ubcf4\uc558\ub2e4.\\n\\n## ts-morph\\n\\n[ts-morph](https://github.com/dsherret/ts-morph/tree/latest/packages/ts-morph) \ub294 \ub09c\ud574\ud55c `typescript ast` \ub97c \uc0ac\uc6a9\ud558\uae30 \ud3b8\ub9ac\ud558\uac8c \ub9cc\ub4e0 wrapper \ub77c\uc774\ube0c\ub7ec\ub9ac\uc774\ub2e4.  \\n\ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8 \ucf54\ub4dc\ub97c \ud504\ub85c\uadf8\ub798\ubc0d \uc801\uc73c\ub85c \ubd84\uc11d \ubc0f \uc218\uc815\ud560 \uc218 \uc788\uac8c\ud55c\ub2e4.  \\n\uc0ac\uc6a9\ubc95 \uc790\uccb4\ub3c4 \uac04\ub2e8\ud574\uc11c \uc774\ubc88\uc5d0 \ubb38\uc11c\ub97c \ubcf4\uace0 \ucc98\uc74c \uc0ac\uc6a9\ud574\ubcf4\uc558\ub294\ub370 \uc5b4\ub835\uc9c0 \uc54a\uac8c \uc791\uc5c5\ud560 \uc218 \uc788\uc5c8\ub2e4.  \\n\uac01 ast \ub178\ub4dc\ub97c \ud074\ub798\uc2a4 \uc778\uc2a4\ud134\uc2a4\ub85c \ub9cc\ub4e4\uc5b4 \uac01 \ud074\ub798\uc2a4\uc758 \uba54\uc18c\ub4dc\ub97c \ud65c\uc6a9\ud574 \uc790\uc2dd \ub178\ub4dc\ub098 \ubd80\uac00\uc815\ubcf4\ub97c \uc5bb\uc744 \uc218 \uc788\ub294 \ud615\ud0dc\ub85c \uad6c\ud604\ub418\uc5b4\uc788\ub2e4.\\n\\n### Project \uc0dd\uc131\\n\\n\uba3c\uc800 Project \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud574\uc57c \ud55c\ub2e4. \uc0dd\uc131\uc790\uc5d0 \ud30c\uc2f1\uc744 \uc704\ud55c \uc18c\uc2a4\ud30c\uc77c \uc815\ubcf4\ub97c \uc8fc\uac70\ub098 \uc774\ud6c4\uc5d0 \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \uc81c\uacf5\ud560 \uc218 \uc788\ub2e4.  \\ntsconfig.json \uacbd\ub85c\ub97c \uc81c\uacf5\ud558\uba74 \ud574\ub2f9 \ud30c\uc77c\uc5d0 \uc801\uc6a9\ub418\ub294 ts \ud30c\uc77c\ub4e4\uc744 \uc790\ub3d9\uc73c\ub85c \uc77d\ub294\ub2e4.\\n\\n```ts\\nimport { Project } from \\"ts-morph\\";\\n\\nconst project = new Project({\\n  tsConfigFilePath: \\"path/to/tsconfig.json\\",\\n});\\n```\\n\\n\uc544\ub2c8\uba74 \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\uc774\ud6c4 \uba54\uc18c\ub4dc\ub97c \ud638\ucd9c\ud574 \uc18c\uc2a4\ud30c\uc77c\uc744 \ub4f1\ub85d\ud560 \uc218 \uc788\ub2e4.\\n\\n```ts\\nconst project = new Project();\\n\\nproject.addSourceFilesFromTsConfig(\\"dir1/tsconfig.json\\"); // tsconfig.json \ud30c\uc77c \uacbd\ub85c\uc9c0\uc815\\nproject.addSourceFilesAtPaths(\\"dir3/**/*{.d.ts,.ts}\\"); // \uacbd\ub85c\uc5d0 \ud574\ub2f9\ud558\ub294 \ud30c\uc77c\uc77d\uae30\\n```\\n\\n\uc2e4\uc81c \ud30c\uc77c\ub0b4\uc6a9\uc744 \uc81c\uacf5\ud560 \uc218\ub3c4 \uc788\uc5b4\uc11c \ud14c\uc2a4\ud2b8\ucf54\ub4dc \uc791\uc131\ud560 \ub54c \uc720\uc6a9\ud558\uac8c \uc4f8 \uc218 \uc788\ub2e4.\\n\\n```ts\\nconst project = new Project();\\n\\nconst fileText = \\"enum MyEnum {\\\\n}\\\\n\\";\\nconst sourceFile = project.createSourceFile(\\"path/to/myNewFile.ts\\", fileText);\\n```\\n\\n\uc18c\uc2a4\ud30c\uc77c \uacbd\ub85c\ub97c \uc9c0\uc815\ud558\ub294 \ubc29\ubc95\uacfc \ud30c\uc77c\ub0b4\uc6a9\uc744 \uc81c\uacf5\ud558\ub294 \ubc29\ubc95\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 \uc544\ub798\uc640 \uac19\uc740 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e4\uc5c8\ub2e4.\\n\\n```ts title=\\"EntityValidator.ts\\"\\nexport class EntityValidator {\\n  #project: Project;\\n\\n  constructor(path: string, content?: string) {\\n    this.#project = new Project();\\n\\n    if (content) {\\n      this.#project.createSourceFile(path, content);\\n      return;\\n    }\\n\\n    this.#project.addSourceFilesAtPaths(path);\\n  }\\n}\\n```\\n\\n### SourceFile \uac00\uc838\uc624\uae30\\n\\n\uc774\uc81c ast \uc758 root \uc778 SourceFile \uc744 \uac00\uc838\uc628\ub2e4.\\n\\n```ts\\nconst sourceFiles = this.#project.getSourceFiles();\\n```\\n\\n### Entity Class \uac00\uc838\uc624\uae30\\n\\n\uc774\uc81c \uac01 SourceFile \ubc30\uc5f4\uc744 \uc21c\ud68c\ud558\uba74\uc11c \uac01 \ud30c\uc77c\uc774 \ucee8\ubca4\uc158\uc744 \ub9cc\uc871\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uacfc\uc815\uc774 \ud544\uc694\ud558\ub2e4.  \\n\uc6b0\uc120 \ud558\ub098\uc758 SourceFile \uc744 \uac80\uc99d\ud558\ub294 \ub85c\uc9c1\uc744 \uba3c\uc800 \uad6c\ud604\ud574\ubcf4\uc790.  \\n\uba3c\uc800 \ud574\ub2f9 \ud30c\uc77c\uc774 Entity \ub370\ucf54\ub808\uc774\ud130\uac00 \uc788\ub294 \ud074\ub798\uc2a4\uac00 \uc120\uc5b8\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubcf8\ub2e4.\\n\\nSourceFile \uc5d0\ub294 `getClass` \uba54\uc18c\ub4dc\uac00 \uc788\ub294\ub370 \ud30c\ub77c\ubbf8\ud130\ub85c \ud544\ud130\ud568\uc218\ub97c \uc8fc\uba74 \uc870\uac74\uc5d0 \ud574\ub2f9\ud558\ub294 \uccab \ubc88\uc9f8 \ud074\ub798\uc2a4\ub97c \ubc18\ud658\ud55c\ub2e4.  \\n\ud574\ub2f9 \ud568\uc218\ub294 \ud074\ub798\uc2a4\uc758 \ub370\ucf54\ub808\uc774\ud130 \uc911 \uc774\ub984\uc774 `Entity` \uac00 \uc788\uc744 \ub54c true \ub97c \ubc18\ud658\ud558\ub3c4\ub85d \ud558\uc600\ub2e4.\\n\\n```ts\\nprivate getClass(sourceFile: SourceFile): ClassDeclaration {\\n  // highlight-start\\n  // Entity \ub370\ucf54\ub808\uc774\ud130\uac00 \uc788\ub294 \ud074\ub798\uc2a4\ub97c \uac00\uc838\uc624\uae30\\n  const entityClass = sourceFile.getClass((declaration) =>\\n    declaration\\n      .getDecorators()\\n      .some((decorator) => decorator.getFullName() === \'Entity\'),\\n  );\\n  // highlight-end\\n\\n  if (!entityClass) {\\n    throw new Error(\'Entity \ub370\ucf54\ub808\uc774\ud130\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4\');\\n  }\\n\\n  return entityClass;\\n}\\n```\\n\\n### JoinColumn \ub370\ucf54\ub808\uc774\ud130\uac00 \uc120\uc5b8\ub41c \ud544\ub4dc\uba85\uc744 \uac00\uc838\uc624\uae30\\n\\n\uc774\uc81c \ud574\ub2f9 \ud074\ub798\uc2a4\uc5d0\uc11c `JoinColumn` \ub370\ucf54\ub808\uc774\ud130\uac00 \uc120\uc5b8\ub41c \ud544\ub4dc\uba85\uc744 \uac00\uc838\uc628\ub2e4.  \\n\ucf54\ub4dc\ub97c \ubcf4\uba74 `getProperties` \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 \ud544\ub4dc\ub97c \uac00\uc838\uc628 \ud6c4 \ub370\ucf54\ub808\uc774\ud130 \uc774\ub984\uc774 `JoinColumn` \uc778\uac83\ub9cc \ud544\ud130\ub9c1 \ud6c4 `getName` \uc744 \ud1b5\ud574 \ud544\ub4dc\uba85\uc744 \uac00\uc838\uc628\ub2e4.  \\n\uba54\uc18c\ub4dc\uba85\ub9cc \uc77d\uc5b4\ub3c4 \uc5b4\ub5a4 \uc791\uc5c5\uc744 \ud558\ub294\uc9c0 \ud30c\uc545\uc774 \uac00\ub2a5\ud558\uae30\uc5d0 \uc720\uc9c0\ubcf4\uc218\uac00 \uc27d\uace0 \ucf54\ub4dc\ub97c \uc77d\uae30 \uc27d\ub2e4\ub294 \uc7a5\uc810\uc774\uc788\ub2e4.\\n\\n```ts\\nprivate getJoinColumns(entityClass: ClassDeclaration): string[] {\\n  return entityClass\\n    .getProperties()\\n    .filter((property) =>\\n      property\\n        .getDecorators()\\n        .some((decorator) => decorator.getFullName() === \'JoinColumn\'),\\n    )\\n    .map((property) => property.getName());\\n}\\n```\\n\\n### JoinColumn \uc5d0 \ub9e4\uce6d\ub418\ub294 Index \ub370\ucf54\ub808\uc774\ud130\uac00 \uc788\ub294 \ud544\ub4dc \uac00\uc838\uc624\uae30\\n\\n`JoinColumn` \uc5d0 \ud574\ub2f9\ud558\ub294 \ud544\ub4dc\uba85 \uc911\uc5d0 \ud074\ub798\uc2a4\uc5d0 \uc120\uc5b8\ub41c Index \ub370\ucf54\ub808\uc774\ud130\uc758 \ub450 \ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc640 \uc77c\uce58\ud558\ub294\uac8c \uc874\uc7ac\ud558\ub294 \uac83\ub9cc \ud544\ud130\ub9c1\ud55c\ub2e4.  \\n\ub2e8\uc21c\ud788 \ubaa8\ub4e0 Index \ub370\ucf54\ub808\uc774\ud130 \uc815\ubcf4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ud544\ud130\ub9c1 \ud574\uc57c\ud558\ub294 \uc774\uc720\ub294 JoinColumn \uc774 \uc5c6\ub294 \ud544\ub4dc\uc5d0 \ub300\ud574\uc11c\ub3c4 Index \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4.\\n\\n```ts\\nprivate getIndexColumns(\\n  entityClass: ClassDeclaration,\\n  joinColumns: string[],\\n): string[] {\\n  return entityClass\\n    .getDecorators()\\n    .filter((decorator) => decorator.getFullName() === \'Index\')\\n    // getArguments \ub294 \ub370\ucf54\ub808\uc774\ud130\uc758 \ud30c\ub9ac\ub9c8\ud130\ub97c \ubc18\ud658\ud55c\ub2e4\\n    .map((decorator) => decorator.getArguments())\\n    // Node.getFullText \uba54\uc18c\ub4dc\ub294 \uc2e4\uc81c \ud30c\ub77c\ubbf8\ud130 \ud0c0\uc785\uc774 \uc544\ub2cc \ucf54\ub4dc\uc5d0 \uc788\ub294 \ubb38\uc790\uc5f4 \uadf8\ub300\ub85c \ubc18\ud658\ud55c\ub2e4.\\n    // \ub530\ub77c\uc11c [\'column\'] \uacfc \uac19\uc774 \ubc30\uc5f4\ub85c \uc120\uc5b8\ub418\uc5b4 \uc788\uc5b4\ub3c4 \ubb38\uc790\uc5f4\uc774 \ub418\uba70\\n    // parseArgument \uba54\uc18c\ub4dc\ub294 \ud2b9\uc218\ubb38\uc790\ub97c \ubaa8\ub450 \uc81c\uac70\ud574\uc11c \uceec\ub7fc\uba85\ub9cc \ub0a8\uae34\ub2e4.\\n    .map(([_, indexField]) => this.parseArgument(indexField))\\n    .filter((columnName) => joinColumns.includes(columnName));\\n}\\n\\nprivate parseArgument(node?: Node): string {\\n  if (!node) {\\n    return \'\';\\n  }\\n\\n  // \ud2b9\uc218\ubb38\uc790\ub97c \ubaa8\ub450 \uc81c\uac70\\n  return node.getFullText().replace(/[\\\\W\\\\s]/gi, \'\');\\n}\\n```\\n\\n### \uac80\uc99d\ud558\uae30\\n\\n\uc704 \uba54\uc18c\ub4dc\ub97c \ud65c\uc6a9\ud574\uc11c \uac01 SourceFile \ub97c \uc21c\ud68c\ud574 `JoinColumn` \uc758 \uac1c\uc218\uc640 `Index` \uac1c\uc218\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc73c\uba74 \uc5d0\ub7ec\ub97c \ubc1c\uc0dd\uc2dc\ud0a8\ub2e4.\\n\\n```ts\\nvalidate(): void {\\n  const sourceFiles = this.#project.getSourceFiles();\\n\\n  sourceFiles.forEach((sourceFile) => {\\n    const entityClass = this.getClass(sourceFile);\\n    const joinColumns = this.getJoinColumns(entityClass);\\n    const indexColumns = this.getIndexColumns(entityClass, joinColumns);\\n\\n    if (indexColumns.length !== joinColumns.length) {\\n      throw new Error(\\n        `JoinColumn \uc5d0 \ub9e4\uce6d\ub418\ub294 Index \uc120\uc5b8\uc774 \ub204\ub77d\ub418\uc5c8\uc2b5\ub2c8\ub2e4: ${JSON.stringify(\\n          {\\n            entity: entityClass.getName(),\\n            joinColumns,\\n            indexColumns,\\n          },\\n          null,\\n          2,\\n        )}`,\\n      );\\n    }\\n  });\\n}\\n```\\n\\n## \ud14c\uc2a4\ud2b8\\n\\n\uc774\uc81c \uc704 \ud074\ub798\uc2a4\uac00 \uc815\uc0c1 \ub3d9\uc791\ud558\ub294\uc9c0 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud574\ubcf8\ub2e4.  \\n`EntityValidator` \uc0dd\uc131\uc790\uc758 \ub450 \ubc88\uc9f8 \ud30c\ub77c\ubbf8\ud130\uc5d0 \ud30c\uc77c\ub0b4\uc6a9\uc744 \uc9c1\uc811 \ub123\uc5b4\uc11c \ud14c\uc2a4\ud2b8 \ud560 \uc218 \uc788\ub2e4.\\n\\n```ts title=\\"EntityValidator.spec.ts\\"\\nimport { EntityValidator } from \\"./EntityValidator\\";\\n\\ndescribe(\\"EntityValidator\\", () => {\\n  it(\\"JoinColumn \uc5d0 \uc120\uc5b8\ub41c \uceec\ub7fc\uc5d0 \uc778\ub371\uc2a4\uac00 \uc5c6\uc73c\uba74 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud55c\ub2e4\\", () => {\\n    // given\\n    const path = \\"post.ts\\";\\n    const content = `\\n@Entity()\\nexport class Post {\\n  @ManyToOne(() => Profile, { createForeignKeyConstraints: false })\\n  @JoinColumn({ name: \'profile_id\', referencedColumnName: \'id\' })\\n  profile: Profile;\\n}`;\\n    const checker = new EntityValidator(path, content);\\n\\n    // when\\n    const validate = () => checker.validate();\\n\\n    // then\\n    expect(validate).toThrowError();\\n  });\\n\\n  it(\\"JoinColumn \uc5d0 \uc120\uc5b8\ub41c \uceec\ub7fc\uc5d0 \uc778\ub371\uc2a4\uac00 \uc788\uc73c\uba74 \uac80\uc99d\uc5d0 \uc131\uacf5\ud55c\ub2e4\\", () => {\\n    // given\\n    const content = `\\n@Entity()\\n@Index(\'idx_post_1\', [\'profile\'])\\nexport class Post {\\n  @ManyToOne(() => Profile, { createForeignKeyConstraints: false })\\n  @JoinColumn({ name: \'profile_id\', referencedColumnName: \'id\' })\\n  profile: Profile;\\n}`;\\n    const checker = new EntityValidator(content);\\n\\n    // when\\n    const validate = () => checker.validate();\\n\\n    // then\\n    expect(validate).not.toThrowError();\\n  });\\n\\n  it(\\"JoinColumn \uc774 \uc544\ub2cc \uceec\ub7fc\uc5d0 \ub300\ud55c \uc778\ub371\uc2a4\uac00 \uc788\uc5b4\ub3c4 \uac80\uc99d\uc5d0 \uc131\uacf5\ud55c\ub2e4\\", () => {\\n    // given\\n    const content = `\\n@Entity()\\n@Index(\'idx_post_1\', [\'profile\'])\\n@Index(\'idx_post_2\', [\'name\'])\\nexport class Post {\\n  @Column()\\n  name: string\\n\\n  @ManyToOne(() => Profile, { createForeignKeyConstraints: false })\\n  @JoinColumn({ name: \'profile_id\', referencedColumnName: \'id\' })\\n  profile: Profile;\\n}`;\\n    const checker = new EntityValidator(content);\\n\\n    // when\\n    const validate = () => checker.validate();\\n\\n    // then\\n    expect(validate).not.toThrowError();\\n  });\\n});\\n```\\n\\n\ub9c8\uc9c0\ub9c9\uc73c\ub85c \uc2e4\uc81c \uc5d4\ud2f0\ud2f0 \ud30c\uc77c\uc774 \uc788\ub294 \uacbd\ub85c\ub97c \uc9c0\uc815\ud574\uc11c \ucee8\ubca4\uc158\uc744 \ub9cc\uc871\ud558\ub294\uc9c0 \uac80\uc99d\ud55c\ub2e4.  \\n\ud14c\uc2a4\ud2b8\ucf54\ub4dc\ub97c \ud1b5\ud574 \uac80\uc99d\ud558\uae30 \ub54c\ubb38\uc5d0 \ub85c\uceec\uacfc CI \uc5d0\uc11c \uc190\uc27d\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uc7a5\uc810\uc774\uc788\ub2e4.\\n\\n```ts\\nit(\\"\uc5d4\ud2f0\ud2f0 \ud30c\uc77c\ub4e4\uc740 JoinColumn \uc5d0 \ub300\ud55c \uc778\ub371\uc2a4\uac00 \uc874\uc7ac\ud55c\ub2e4\\", () => {\\n  // given\\n  const path = join(__dirname, \\"../src/**/*.entity.ts\\");\\n  const checker = new EntityValidator(path);\\n\\n  // when\\n  const validate = () => checker.validate();\\n\\n  // then\\n  expect(validate).not.toThrowError();\\n});\\n```\\n\\n## \ub9c8\ubb34\ub9ac\\n\\n`ts-morph` \ub97c \ud65c\uc6a9\ud574 \ucee8\ubca4\uc158 \uac80\uc99d\uacfc\uc815\uc744 \uc0b4\ud3b4\ubcf4\uc558\ub2e4.  \\n\ud574\ub2f9 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc18c\uc2a4\ucf54\ub4dc\ub97c \uc218\uc815\ud558\ub294 \uae30\ub2a5\ub3c4 \uc788\uae30 \ub54c\ubb38\uc5d0 \ucee8\ubca4\uc158\uc5d0 \ub9de\uc9c0 \uc54a\uc73c\uba74 \uc790\ub3d9\uc73c\ub85c \ud574\uacb0\ud558\ub294 \uae30\ub2a5\ub3c4 \ucd94\uac00\ud560 \uc218 \uc788\ub2e4.  \\n\ub610\ud55c \ud074\ub798\uc2a4 \uc678\uc5d0 \ud568\uc218, \uc778\ud130\ud398\uc774\uc2a4, Enum \ub4f1 \ub2e4\ub978 \uc720\ud615\uc758 \ucf54\ub4dc\ub3c4 \ud30c\uc2f1\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \ub2e4\uc591\ud55c \ucee8\ubca4\uc158\uc744 \uac80\uc99d\ud558\ub294 \ub85c\uc9c1\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4.\\n\\n## \ucc38\uace0\ubb38\uc11c\\n\\n- ts-morph documentation: https://ts-morph.com/"},{"id":"/2022/01/05/querydsl-in-kotlin","metadata":{"permalink":"/2022/01/05/querydsl-in-kotlin","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2022-01-05-querydsl-in-kotlin/index.mdx","source":"@site/blog/2022-01-05-querydsl-in-kotlin/index.mdx","title":"kotlin \ud658\uacbd\uc5d0\uc11c Querydsl \uc124\uc815\ud558\uae30","description":"\ucd5c\uadfc\uc5d0 \ucf54\ud2c0\ub9b0\uacfc \uc2a4\ud504\ub9c1\uc744 \ud65c\uc6a9\ud574 \uc0ac\uc774\ub4dc \ud504\ub85c\uc81d\ud2b8\ub97c \ud558\uba74\uc11c querydsl \uc0ac\uc6a9\uc744 \uc704\ud574 \uc138\ud305\ud55c \uc791\uc5c5\uc744 \ub0a8\uae30\ub824\uace0 \ud55c\ub2e4.","date":"2022-01-05T00:00:00.000Z","formattedDate":"2022\ub144 1\uc6d4 5\uc77c","tags":[{"label":"kotlin","permalink":"/tags/kotlin"},{"label":"querydsl","permalink":"/tags/querydsl"}],"readingTime":3.18,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"kotlin \ud658\uacbd\uc5d0\uc11c Querydsl \uc124\uc815\ud558\uae30","authors":"jake","tags":["kotlin","querydsl"]},"prevItem":{"title":"ts-morph \ub85c \uac1c\ubc1c \ucee8\ubca4\uc158 \uac80\uc99d \uc790\ub3d9\ud654\ud558\uae30","permalink":"/2022/01/08/convention-check-with-ts-morph"},"nextItem":{"title":"TypeORM CreateDateColumn \ub370\ucf54\ub808\uc774\ud130\uc640 value transformer \ubb38\uc81c","permalink":"/2021/12/09/typeorm-transformer"}},"content":"\ucd5c\uadfc\uc5d0 \ucf54\ud2c0\ub9b0\uacfc \uc2a4\ud504\ub9c1\uc744 \ud65c\uc6a9\ud574 \uc0ac\uc774\ub4dc \ud504\ub85c\uc81d\ud2b8\ub97c \ud558\uba74\uc11c querydsl \uc0ac\uc6a9\uc744 \uc704\ud574 \uc138\ud305\ud55c \uc791\uc5c5\uc744 \ub0a8\uae30\ub824\uace0 \ud55c\ub2e4.  \\n\uc790\ubc14\ub85c \ub41c querydsl \uad00\ub828 \ube14\ub85c\uadf8 \uae00\uc740 \ub9ce\uc740\ub370 \uc0dd\uac01\ubcf4\ub2e4 \ucf54\ud2c0\ub9b0\uc740 \uc801\uc5c8\uace0 \uc81c\ub300\ub85c \uc801\uc6a9\uc774 \uc548\ub418\uc5b4 \uace0\uc0dd\uc744 \ud558\uac8c\ub418\uc5c8\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## \ucd5c\uc885 \uc124\uc815\\n\\n\uacb0\ub860\ubd80\ud130 \uba3c\uc800 \ub9d0\ud558\uba74 querydsl \ubc84\uc804\uc744 \ud604\uc7ac \uc2dc\uc810 \ucd5c\uc2e0\ubc84\uc804\uc778 `5.0.0` \uc744 \uc0ac\uc6a9\ud558\uba74 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud55c\ub2e4.  \\n\uadf8\ub9ac\uace0 `kotlinOption \uc758 jvmTarget` \ubc84\uc804\uacfc `java.sourceCompatibility` \uc5d0 \uc9c0\uc815\ud55c \ubc84\uc804\uc774 \uc77c\uce58\ud574\uc57c\ud55c\ub2e4.  \\ngradle \uc124\uc815\uc740 \uc544\ub798\uc640 \uac19\ub2e4.\\n\\n```kotlin title=\\"build.gradle.kts\\"\\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\\n\\nplugins {\\n    id(\\"org.springframework.boot\\") version \\"2.6.2\\"\\n    id(\\"io.spring.dependency-management\\") version \\"1.0.11.RELEASE\\"\\n\\n    kotlin(\\"jvm\\") version \\"1.6.10\\"\\n    kotlin(\\"plugin.spring\\") version \\"1.6.10\\"\\n    kotlin(\\"plugin.jpa\\") version \\"1.6.10\\"\\n    // highlight-next-line\\n    kotlin(\\"kapt\\") version \\"1.6.10\\" // kapt \ucd94\uac00\\n}\\n\\nrepositories {\\n    mavenCentral()\\n}\\n\\n// highlight-next-line\\njava.sourceCompatibility = JavaVersion.VERSION_11 // jvmTarget \uacfc \uac19\uc740 \ubc84\uc804\uc73c\ub85c \uc9c0\uc815\\n\\ndependencies {\\n    // highlight-start\\n    // querydsl \uad00\ub828 \ud328\ud0a4\uc9c0 \ucd94\uac00. \ubc84\uc804\uc740 5.0.0 \uc73c\ub85c \uc9c0\uc815\\n    implementation(\\"org.springframework.boot:spring-boot-starter-data-jpa\\")\\n    implementation(\\"com.querydsl:querydsl-jpa:5.0.0\\")\\n    kapt(\\"com.querydsl:querydsl-apt:5.0.0:jpa\\")\\n    // highlight-end\\n}\\n\\ntasks.withType<KotlinCompile> {\\n    kotlinOptions {\\n        freeCompilerArgs = listOf(\\"-Xjsr305=strict\\")\\n        // highlight-next-line\\n        jvmTarget = \\"11\\" // java.sourceCompatibility \uacfc \uac19\uc740 \ubc84\uc804 \uc9c0\uc815\\n    }\\n}\\n\\ntasks.withType<Test> {\\n    useJUnitPlatform()\\n}\\n```\\n\\n## \ubb38\uc81c \uc0c1\ud669\\n\\nquerydsl \uacf5\uc2dd\ubb38\uc11c\uc5d0\ub294 gradle \uc124\uc815\uc740 \uc5c6\uace0 maven \ub9cc \uc874\uc7ac\ud574\uc11c \uc5ec\ub7ec \ube14\ub85c\uadf8 \uae00\uc744 \ucc38\uc870\ud574\uc11c \uc124\uc815\ud558\ub824\uace0 \ud588\ub2e4.  \\n\ubb38\uc11c\uc5d0\ub3c4 \ubaa8\ub450 4.x.x \ubc84\uc804\uc744 \uc4f0\uace0\uc788\uace0 \uacf5\uc2dd \ud648\ud398\uc774\uc9c0\uc5d0\ub3c4 4.4.0 \uc774 \ucd5c\uc2e0\ubc84\uc804\uc778\uc9c0\ub77c \uadf8\ub300\ub85c \uc0ac\uc6a9\ud588\uc9c0\ub9cc Qclass \uc0dd\uc131 \uc2dc \uc544\ub798 \uba54\uc2dc\uc9c0\uac00 \ucd9c\ub825\ub418\uace0 \uc544\ubb34\ub7f0 \ud30c\uc77c\uc774 \uc0dd\uc131\ub418\uc9c0 \uc54a\uc558\ub2e4.\\n\\n```shell\\ngradle clean compileKotlin\\n> Task :kaptKotlin\\n[WARN] Can\'t find annotation processor class com.querydsl.apt.jpa.JPAAnnotationProcessor: com/mysema/codegen/model/Type\\n```\\n\\n`annotation processor` \uad00\ub828 \ubb38\uc81c\ub85c \ubcf4\uc5ec \uad00\ub828 \ubb38\uc11c\ub97c \uac80\uc0c9\ud574\uace0 \uc81c\uc2dc\ub41c \ud574\uacb0\ubc29\ubc95\uc744 \uc2dc\ub3c4\ud574\ubcf4\uc558\uc9c0\ub9cc \uc5ec\uc804\ud788 \uac19\uc740 \uc5d0\ub7ec\ub97c \ucd9c\ub825\ud588\ub2e4.  \\nkotlin \uc744 \ucd5c\uc2e0\ubc84\uc804\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc5b4\uc11c \uc0c8\ub85c\uc6b4 \ud638\ud658\uc131 \ubb38\uc81c\uac00 \uc0dd\uae34\uac74\uc9c0 \uc758\uc2ec\uc774 \ub4e4\uc5c8\uace0 querydsl \ub3c4 \ucd5c\uc2e0\ubc84\uc804\uc73c\ub85c \uc62c\ub824\uc11c \uc2dc\ub3c4\ud574\ubcf4\uc558\ub2e4.  \\n\uc774\ud6c4 \ud574\ub2f9 \uba54\uc2dc\uc9c0\ub294 \uc0ac\ub77c\uc84c\uc9c0\ub9cc \uc0c8\ub85c\uc6b4 \uba54\uc2dc\uc9c0\uac00 \ucd9c\ub825\ub410\ub2e4.\\n\\n```shell\\ngradle clean compileKotlin\\n> Task :kaptKotlin\\n\'compileJava\' task (current target is 17) and \'compileKotlin\' task (current target is 11) jvm target compatibility should be set to the same Java version.\\n```\\n\\n\uc774\ubc88 \uc5d0\ub7ec\ub294 \uba54\uc2dc\uc9c0\ub9cc \ubd10\ub3c4 \uc27d\uac8c \ud574\uacb0\ud560 \uc218 \uc788\ub294 \ub0b4\uc6a9\uc774\uc5c8\uace0 `jvmTarget` \uacfc `java.sourceCompatibility` \ub97c \ub3d9\uc77c\ud558\uac8c \ub9de\ucd94\ub2c8 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud588\ub2e4.  \\nquerydsl 5.0.0 \ub9b4\ub9ac\uc988 \ub178\ud2b8\ub97c \ubcf4\uba74 \uc544\ub798 \ub0b4\uc6a9\uc774 \uc788\ub294\ub370 \uc790\ubc14 11 \uc9c0\uc6d0\uacfc \ucf54\ud2c0\ub9b0 \ucf54\ub4dc \uc0dd\uc131\uacfc \uad00\ub828\ub41c \uc791\uc5c5\uc744 \ud55c\uac83\uc774 \ud574\uacb0\uc774 \ub41c \uc6d0\uc778\uc73c\ub85c \ubcf4\uc778\ub2e4.\\n\\n![querydsl](./querydsl.png)"},{"id":"/2021/12/09/typeorm-transformer","metadata":{"permalink":"/2021/12/09/typeorm-transformer","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2021-12-09-typeorm-transformer/index.mdx","source":"@site/blog/2021-12-09-typeorm-transformer/index.mdx","title":"TypeORM CreateDateColumn \ub370\ucf54\ub808\uc774\ud130\uc640 value transformer \ubb38\uc81c","description":"\ubb38\uc81c \uc0c1\ud669","date":"2021-12-09T00:00:00.000Z","formattedDate":"2021\ub144 12\uc6d4 9\uc77c","tags":[{"label":"typeorm","permalink":"/tags/typeorm"},{"label":"transformer","permalink":"/tags/transformer"},{"label":"CreateDateColumn","permalink":"/tags/create-date-column"}],"readingTime":4.36,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"TypeORM CreateDateColumn \ub370\ucf54\ub808\uc774\ud130\uc640 value transformer \ubb38\uc81c","authors":"jake","tags":["typeorm","transformer","CreateDateColumn"]},"prevItem":{"title":"kotlin \ud658\uacbd\uc5d0\uc11c Querydsl \uc124\uc815\ud558\uae30","permalink":"/2022/01/05/querydsl-in-kotlin"},"nextItem":{"title":"Promise \uc640 Monad - 2","permalink":"/2021/11/28/promise-and-monad-2"}},"content":"### \ubb38\uc81c \uc0c1\ud669\\n\\n\ubcf4\ud1b5 \ud14c\uc774\ube14\uc5d0 \uae30\ubcf8\uc73c\ub85c \ub123\ub294 \uc0dd\uc131\uc2dc\uac04\uacfc, \uc218\uc815\uc2dc\uac04 \ud544\ub4dc\ub97c \ucd94\uac00\ud558\uae30 \uc704\ud574 typeorm \uc0ac\uc6a9\ud558\ub294 \ud658\uacbd\uc5d0\uc11c\ub294 \ub370\ucf54\ub808\uc774\ud130\uc640 \uc0c1\uc18d\uc744 \uc0ac\uc6a9\ud55c\ub2e4.  \\n\uc608\ub97c\ub4e4\uc5b4 \uc544\ub798\uc640 \uac19\uc740 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4e0 \ud6c4 \ub2e4\ub978 \uc5d4\ud2f0\ud2f0 \ud074\ub798\uc2a4\uac00 \uc0c1\uc18d\ubc1b\ub294 \ubc29\ubc95\uc73c\ub85c \uad6c\ud604\ud558\uac8c \ub41c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n```ts\\nimport { CreateDateColumn, UpdateDateColumn } from \\"typeorm\\";\\n\\nexport abstract class BaseEntity {\\n  @CreateDateColumn({ type: \\"timestamp\\" })\\n  createdAt: Date;\\n\\n  @UpdateDateColumn({ type: \\"timestamp\\" })\\n  updatedAt: Date;\\n}\\n```\\n\\n\ud558\uc9c0\ub9cc \uac01 \ud544\ub4dc\uc758 \ud0c0\uc785\uc744 Date \ub300\uc2e0 \uc11c\ub4dc\ud30c\ud2f0 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \ub0a0\uc9dc \ud0c0\uc785\uc73c\ub85c \ubc14\uafb8\uae30 \uc704\ud574\uc11c\ub294 `value transformer` \ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\uc9c0\ub9cc \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud55c\ub2e4.\\n\\n```ts\\nimport { CreateDateColumn, UpdateDateColumn } from \\"typeorm\\";\\nimport { LocatDateTime } from \\"@js-joda/core\\";\\n\\nexport abstract class BaseEntity {\\n  @CreateDateColumn({\\n    type: \\"timestamp\\",\\n    transformer: new LocalDateTransformer(),\\n  })\\n  createdAt: LocalDateTime;\\n\\n  @UpdateDateColumn({\\n    type: \\"timestamp\\",\\n    transformer: new LocalDateTransformer(),\\n  })\\n  updatedAt: LocalDateTime;\\n}\\n```\\n\\n:::info\\n\uc5ec\uae30\uc11c LocalDateTransformer \ub294 typeorm \uc758 ValueTransformer \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud55c \ud074\ub798\uc2a4\ub85c\\njs \uc758 Date \uc640 LocalDateTime \uac04\uc758 \ubcc0\ud658\ub85c\uc9c1\uc774 \uc788\ub2e4.  \\n:::\\n\\ntypeorm \uacf5\uc2dd \uc800\uc7a5\uc18c\uc5d0 \uc774\uc640\uac19\uc740 \uc774\uc288\uac00 \uc62c\ub77c\uc640 \uc788\uc9c0\ub9cc (2020\ub144 12\uc6d4) \uc544\uc9c1\ub3c4 \ud574\uacb0\ub418\uc9c0 \uc54a\uace0\uc788\ub2e4.\\n\\n- [UpdateDateColumn fails with transformer](https://github.com/typeorm/typeorm/issues/7150)\\n\\n### \ud574\uacb0 \ubc29\uc548\\n\\n\uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 `@CreateDateColumn` \ub370\ucf54\ub808\uc774\ud130 \ub300\uc2e0 `@Column`, `@BeforeInsert`, `@BeforeUpdate` \ub97c \ud65c\uc6a9\ud55c\ub2e4.\\n\\n```ts\\nimport { BeforeInsert, BeforeUpdate, Column } from \\"typeorm\\";\\nimport { LocalDateTime } from \\"@js-joda/core\\";\\n\\nexport abstract class BaseEntity {\\n  @Column({\\n    type: \\"timestamptz\\",\\n    transformer: new LocalDateTimeTransformer(),\\n    nullable: false,\\n    update: false,\\n  })\\n  createdAt: LocalDateTime;\\n\\n  @Column({\\n    type: \\"timestamptz\\",\\n    transformer: new LocalDateTimeTransformer(),\\n    nullable: false,\\n  })\\n  updatedAt: LocalDateTime;\\n\\n  @BeforeInsert()\\n  protected beforeInsert() {\\n    this.createdAt = LocalDateTime.now();\\n    this.updatedAt = LocalDateTime.now();\\n  }\\n\\n  @BeforeUpdate()\\n  protected beforeUpdate() {\\n    this.updatedAt = LocalDateTime.now();\\n  }\\n}\\n```\\n\\n`@BeforeInsert` \uc640 `@BeforeUpdate` \ub294 \uc774\ub984 \uadf8\ub300\ub85c \ud14c\uc774\ube14\uc5d0 \uc0c8\ub85c\uc6b4 row \uac00 \ucd94\uac00\ub418\uae30 \uc804\uc774\ub098 \uae30\uc874 row \uc218\uc815\uc791\uc5c5 \uc804\uc5d0 \uc2e4\ud589\ub41c\ub2e4.  \\n\uc815\uc0c1 \ub3d9\uc791\ud558\ub294\uc9c0 \ud14c\uc2a4\ud2b8\ucf54\ub4dc\ub97c \uc791\uc131\ud574\ubcf4\uc790.\\n\\n```ts\\nimport {\\n  Connection,\\n  createConnection,\\n  Entity,\\n  PrimaryGeneratedColumn,\\n  Repository,\\n} from \\"typeorm\\";\\nimport { LocalDateTime } from \\"@js-joda/core\\";\\n\\n@Entity()\\nclass TestEntity extends BaseEntity {\\n  @PrimaryGeneratedColumn(\\"increment\\")\\n  id: number;\\n}\\n\\ndescribe(\\"TestEntityRepository\\", () => {\\n  let testEntityRepository: Repository<TestEntity>;\\n  let connection: Connection;\\n\\n  beforeAll(async () => {\\n    connection = await createConnection({\\n      type: \\"postgres\\",\\n      host: \\"localhost\\",\\n      port: 5432,\\n      username: \\"test\\",\\n      password: \\"test\\",\\n      database: \\"test\\",\\n      entities: [TestEntity],\\n      synchronize: true,\\n    });\\n\\n    testEntityRepository = connection.getRepository(TestEntity);\\n  });\\n\\n  afterAll(() => connection.close());\\n\\n  beforeEach(() => testEntityRepository.clear());\\n\\n  it(\\"save \uba54\uc18c\ub4dc\ub85c insert \uc2dc createdAt, updatedAt \uc774 \ud604\uc7ac\uc2dc\uac04\uc73c\ub85c \ub4e4\uc5b4\uac04\ub2e4\\", async () => {\\n    // given\\n    const nowTime = LocalDateTime.now();\\n    const entity = new TestEntity();\\n\\n    // when\\n    const testEntity = await testEntityRepository.save(entity);\\n\\n    // then\\n    expect(testEntity.createdAt.isAfter(nowTime)).toBeTruthy();\\n    expect(testEntity.updatedAt.isAfter(nowTime)).toBeTruthy();\\n  });\\n\\n  it(\\"insert \uba54\uc18c\ub4dc\ub85c insert \uc2dc createdAt, updatedAt \uc774 \ud604\uc7ac\uc2dc\uac04\uc73c\ub85c \ub4e4\uc5b4\uac04\ub2e4\\", async () => {\\n    // given\\n    const nowTime = LocalDateTime.now();\\n    const entity = new TestEntity();\\n\\n    // when\\n    await testEntityRepository.insert(entity);\\n\\n    // then\\n    const testEntity = await testEntityRepository.findOneOrFail();\\n    expect(testEntity.createdAt.isAfter(nowTime)).toBeTruthy();\\n    expect(testEntity.updatedAt.isAfter(nowTime)).toBeTruthy();\\n  });\\n\\n  it(\\"save \uba54\uc18c\ub4dc\ub85c \uc5d4\ud2f0\ud2f0 \uc5c5\ub370\uc774\ud2b8 \uc2dc updatedAt \uc774 \uac31\uc2e0\ub41c\ub2e4\\", async () => {\\n    // given\\n    const testEntity = await testEntityRepository.save(new TestEntity());\\n    const before = testEntity.updatedAt;\\n\\n    // when\\n    const updatedTestEntity = await testEntityRepository.save(testEntity);\\n\\n    // then\\n    expect(updatedTestEntity.updatedAt.isAfter(before)).toBeTruthy();\\n  });\\n\\n  it(\\"update \uba54\uc18c\ub4dc\ub85c \uc5d4\ud2f0\ud2f0 \uc5c5\ub370\uc774\ud2b8 \uc2dc updatedAt \uc774 \uac31\uc2e0\ub41c\ub2e4\\", async () => {\\n    const testEntity = await testEntityRepository.save(new TestEntity());\\n    const before = testEntity.updatedAt;\\n\\n    // when\\n    await testEntityRepository.update(testEntity.id, testEntity);\\n\\n    // then\\n    const updatedTestEntity = await testEntityRepository.findOneOrFail();\\n    expect(updatedTestEntity.updatedAt.isAfter(before)).toBeTruthy();\\n  });\\n});\\n```\\n\\n\ub300\ubd80\ubd84\uc758 \uc0c1\ud669\uc5d0\uc11c \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud558\uc9c0\ub9cc `queryBuilder` \ub97c \uc0ac\uc6a9\ud574 update \ub97c \uc218\ud589\ud560 \ub54c\uc5d0\ub294 updatedAt \uc774 \uac31\uc2e0\ub418\uc9c0 \uc54a\ub294\ub2e4.\\n\\n```ts\\nit(\\"queryBuilder \ub85c \uc5c5\ub370\uc774\ud2b8 \uc2dc updatedAt \uac31\uc2e0\ub418\uc9c0 \uc54a\ub294\ub2e4\\", async () => {\\n  // given\\n  const testEntity = await testEntityRepository.save(new TestEntity());\\n  const before = testEntity.updatedAt;\\n\\n  // when\\n  await testEntityRepository\\n    .createQueryBuilder(\\"testEntity\\")\\n    .update()\\n    .set({ id: 3 })\\n    .execute();\\n\\n  // then\\n  const updatedTestEntity = await testEntityRepository.findOneOrFail();\\n  expect(updatedTestEntity.updatedAt.isEqual(before)).toBeTruthy();\\n});\\n```\\n\\n\uc704 \uacbd\uc6b0\uc5d0\ub294 \uba85\uc2dc\uc801\uc73c\ub85c \ud604\uc7ac\uc2dc\uac04\uc744 \ub123\uc5b4\uc8fc\uc5b4\uc57c \ud55c\ub2e4.\\n\\n```ts\\nit(\\"queryBuilder \ub85c \uc5c5\ub370\uc774\ud2b8 \uc2dc updatedAt \uac31\uc2e0\ub41c\ub2e4\\", async () => {\\n  // given\\n  const testEntity = await testEntityRepository.save(new TestEntity());\\n  const before = testEntity.updatedAt;\\n\\n  // when\\n  await testEntityRepository\\n    .createQueryBuilder(\\"testEntity\\")\\n    .update()\\n    .set({ id: 100, updatedAt: LocalDateTime.now() })\\n    .execute();\\n\\n  // then\\n  const updatedTestEntity = await testEntityRepository.findOneOrFail();\\n  expect(updatedTestEntity.updatedAt.isAfter(before)).toBeTruthy();\\n});\\n```"},{"id":"/2021/11/28/promise-and-monad-2","metadata":{"permalink":"/2021/11/28/promise-and-monad-2","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2021-11-28-promise-and-monad-2/index.mdx","source":"@site/blog/2021-11-28-promise-and-monad-2/index.mdx","title":"Promise \uc640 Monad - 2","description":"\uc774\uc804 \uae00\uc5d0\uc11c\ub294 promise \ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub4e4\uc744 then \uc744 \uc774\uc6a9\ud574 \ud569\uc131\ud558\ub294 \uacfc\uc815\uc744 \uc0b4\ud3b4\ubcf4\uc558\ub2e4.","date":"2021-11-28T00:00:00.000Z","formattedDate":"2021\ub144 11\uc6d4 28\uc77c","tags":[{"label":"monad","permalink":"/tags/monad"},{"label":"promise","permalink":"/tags/promise"}],"readingTime":5.79,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"Promise \uc640 Monad - 2","authors":"jake","tags":["monad","promise"]},"prevItem":{"title":"TypeORM CreateDateColumn \ub370\ucf54\ub808\uc774\ud130\uc640 value transformer \ubb38\uc81c","permalink":"/2021/12/09/typeorm-transformer"},"nextItem":{"title":"Promise \uc640 Monad - 1","permalink":"/2021/11/07/promise-and-monad-1"}},"content":"\uc774\uc804 \uae00\uc5d0\uc11c\ub294 promise \ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub4e4\uc744 then \uc744 \uc774\uc6a9\ud574 \ud569\uc131\ud558\ub294 \uacfc\uc815\uc744 \uc0b4\ud3b4\ubcf4\uc558\ub2e4.  \\n\uc774\uc81c \ud30c\ub77c\ubbf8\ud130\ub97c 2\uac1c \uc774\uc0c1 \uc694\uad6c\ud558\ub294 \ud568\uc218\uac00 \uc788\ub294 \uacbd\uc6b0\ub97c \uc0b4\ud3b4\ubcf4\uc790.\\n\\n\x3c!--truncate--\x3e\\n\\n## add \ud568\uc218\uc640 \ube44\ub3d9\uae30 \ud568\uc218\\n\\n\uac04\ub2e8\ud558\uac8c add \ud568\uc218\ub97c \uc815\uc758\ud558\uace0 \uac01 \ud30c\ub77c\ubbf8\ud130\ub294 \ube44\ub3d9\uae30 \ud568\uc218\uc758 \ubc18\ud658\uac12\uc744 \ud1b5\ud574 \uac00\uc838\uc628\ub2e4\uace0 \uc0dd\uac01\ud574\ubcf4\uc790.\\n\\n```ts\\ndeclare function getFirstNumber(): Promise<number>;\\ndeclare function getSecondNumber(first: number): Promise<number>;\\ndeclare function add(a: number, b: number): number;\\n```\\n\\n\uc774\uc804 \uae00\uc5d0\uc11c \uc18c\uac1c\ud55c \ubc29\ubc95\ub300\ub85c then \uc744 \uc774\uc6a9\ud574\ubcf4\uba74 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud55c\ub2e4.\\n\\n```ts\\ngetFirstNumber()\\n  .then((a) => getSecondNumber(a))\\n  .then((b) => add(a, b)); // a \ub97c \ucc38\uc870\ud560 \uc218 \uc5c6\ub2e4\\n```\\n\\n`getFirstNumber` \uac00 \ubc18\ud658\ud55c \uac12\uc740 \uc624\uc9c1 \uccab\ubc88\uc9f8 then \ub0b4\ubd80 \ud568\uc218\uc5d0\uc11c\ub9cc \uc811\uadfc \uac00\ub2a5\ud558\uace0 \ub450\ubc88\uc9f8\uc5d0\uc11c\ub294 b \ub9cc \ucc38\uc870\ud560 \uc218 \uc788\ub2e4.  \\n\ubb3c\ub860 `Promise.all` \uc774\ub098 \uc0c1\ub2e8\uc5d0 \uc784\uc2dc\ubcc0\uc218\ub97c \uc120\uc5b8\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \ud574\uacb0\ud560 \uc218 \uc788\uc9c0\ub9cc \uae54\ub054\ud55c \ubc29\ubc95\uc740 \uc544\ub2c8\ub2e4.\\n\\n```ts\\n// temporary variable\\nlet temp: number;\\ngetFirstNumber()\\n  .then((a) => {\\n    temp = a;\\n    return getSecondNumber(a);\\n  })\\n  .then((b) => add(temp, b));\\n\\n// Promise.all\\ngetFirstNumber()\\n  .then((a) => Promise.all([getSecondNumber(a), a]))\\n  .then(([a, b]) => add(a, b));\\n```\\n\\n\ub0b4\ubd80 \ud568\uc218\uac00 \uc678\ubd80 \ud568\uc218\uc758 \ubcc0\uc218\ub97c \ucc38\uc870\ud560 \uc218 \uc788\ub294 \uc131\uc9c8\uc744 \ud65c\uc6a9\ud574\uc11c \uc544\ub798\uc640 \uac19\uc774 \ud65c\uc6a9\ud560 \uc218\ub3c4 \uc788\ub2e4.\\n\\n```ts {3}\\ngetFirstNumber().then((a) => {\\n  return getSecondNumber(a).then((b) => {\\n    return add(a, b);\\n  });\\n});\\n```\\n\\n\uac00\uc7a5 \uc548\ucabd\uc5d0 \uc788\ub294 `(b) => { return add(a, b) }` \ud568\uc218\ub294 \ubc14\uae65\ucabd \ud568\uc218\uc758 \ud30c\ub77c\ubbf8\ud130\uc778 a\ub97c \ucc38\uc870\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc704 \ucf54\ub4dc\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \ub3d9\uc791\ud55c\ub2e4.  \\n\ud558\uc9c0\ub9cc \uc774 \ubc29\ubc95\ub3c4 \ud2b9\uc815 \ud568\uc218\uac00 \ud544\uc694\ud55c \ud30c\ub77c\ubbf8\ud130 \uac1c\uc218\uac00 \ub9ce\uc544\uc9c8\uc218\ub85d callback hell \ucc98\ub7fc \ub4e4\uc5ec\uc4f0\uae30\uac00 \ub9ce\uc544\uc9c8 \uc218 \uc788\ub294 \ubb38\uc81c\uac00 \uc788\ub2e4.\\n\\n```ts\\nA().then((a) => {\\n  return B().then((b) => {\\n    return C().then((c) => {\\n      return D().then((d) => {\\n        return a + b + c + d;\\n      });\\n    });\\n  });\\n});\\n```\\n\\n## async / await \uc640 do notation\\n\\n\uc704\uc640 \uac19\uc740 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 `async/await` \uac00 \ub3c4\uc785\ub418\uc5c8\uace0 \uc544\ub798\uc640 \uac19\uc774 \uc791\uc131\ud560 \uc218 \uc788\ub2e4.\\n\\n```ts\\nasync function addNumber() {\\n  const a = await getFirstNumber();\\n  const b = await getSecondNumber(a);\\n\\n  return add(a, b);\\n}\\n```\\n\\n\ub9c8\uce58 2\uac1c\uc758 \ud568\uc218\uc758 \ubc18\ud658\uac12\uc744 \uc9c0\uc5ed\ubcc0\uc218 a \uc640 b \uc5d0 \ud560\ub2f9\ud55c \ud6c4 add \ub97c \ud638\ucd9c\ud558\ub294 \ucf54\ub4dc\ucc98\ub7fc \uc791\uc131\ud560 \uc218 \uc788\ub2e4.  \\n\uc21c\uc218 \ud568\uc218\ud615 \uc5b8\uc5b4\uc778 \ud558\uc2a4\ucf08\ub3c4 \uc774\uc640 \ube44\uc2b7\ud55c `do notation` \uc774 \uc874\uc7ac\ud55c\ub2e4.\\n\\n```hs\\naddNumber :: IO Int\\naddNumber = do\\n    a <- getFirstNumber\\n    b <- getSecondNumber a\\n    return add a b\\n```\\n\\n\ud558\uc2a4\ucf08\uc758 `do natation` \uc774 monad \ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub4e4\uc744 \ud65c\uc6a9\ud55c \ub85c\uc9c1\uc744 \uc808\ucc28\uc801\uc73c\ub85c \ud45c\uc2dc\ud558\ub294 \uc5ed\ud560\uc744 \ud574\uc900\ub2e4.  \\n\ub9c8\ucc2c\uac00\uc9c0\ub85c `async/await` \ub3c4 promise \ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub4e4\uc744 \ud65c\uc6a9\ud55c \ub85c\uc9c1\uc744 \uc808\ucc28\uc801\uc73c\ub85c \ud45c\uc2dc\ud558\ub294 \uc5ed\ud560\uc744 \ud574\uc900\ub2e4.\\n\\n## promise \uc640 monad\\n\\n\uc774\ucbe4\uc5d0\uc11c monad \uc5d0 \ub300\ud55c \uc124\uba85\uc744 \ud558\uc790\uba74 \uc5b4\ub5a4 \ud0c0\uc785\uc5d0 \ud2b9\ubcc4\ud55c \ubb38\ub9e5\uc744 \ub354\ud574\uc8fc\ub294 \ucee8\ud14c\uc774\ub108\ub77c \ub9d0\ud560 \uc218 \uc788\ub2e4.  \\n\uc608\ub97c\ub4e4\uba74 `number` \ub294 \uc77c\ubc18\uc801\uc778 \uc22b\uc790\ud0c0\uc785\uc774\uc9c0\ub9cc \uac70\uae30\uc5d0 promise \ub85c \uac10\uc2f8\uba74 \uc548\uc758 \uc22b\uc790\ub294 \uc77c\uc815\uc2dc\uac04\uc774 \uc9c0\ub09c \ud6c4 \uac12\uc744 \uc54c\uac8c\ub41c\ub2e4\ub294 \ubb38\ub9e5\uc744 \ub354\ud574\uc900\ub2e4.\\n\\n```ts\\nconst a: number = 3; // a \ub294 \ud3c9\uac00\uc2dc\uc810\uc5d0 \uadf8 \uac12\uacfc \ud0c0\uc785\uc744 \ubc14\ub85c \uc54c \uc218 \uc788\ub2e4.\\nconst b: Promise<number> = new Promise((resolve) =>\\n  setTimeout(() => resolve(5), 1000)\\n); // \ucee8\ud14c\uc774\ub108 \uc548\uc758 \uac12\uc740 \ud3c9\uac00\uc2dc\uc810\uc774\ud6c4 \uc77c\uc815 \uc2dc\uac04\uc774 \uc9c0\ub09c \ud6c4\uc5d0 \uc54c \uc218 \uc788\ub294\ub370 \uadf8 \ud0c0\uc785\uc740 number \uc774\ub2e4.\\n```\\n\\n\uc0ac\uc2e4 \ucee8\ud14c\uc774\ub108\uc758 \uc885\ub958\ub294 promise \uc678\uc5d0 \uc5ec\ub7ec\uac00\uc9c0\uac00 \uc788\uc73c\uba70 \uc9c1\uc811 \ucee8\ud14c\uc774\ub108\ub97c \ub9cc\ub4e4\uc218\ub3c4 \uc788\ub2e4.\\n\\n## Monad laws\\n\\n\ub9cc\uc57d \ucee8\ud14c\uc774\ub108\ub97c \uc9c1\uc811 \ub9cc\ub4dc\ub294 \uacbd\uc6b0 \ub9cc\ub4e0 \ucee8\ud14c\uc774\ub108\ub294 \uc5b4\ub5a4 \ubc95\uce59\uc744 \ub9cc\uc871\ud574\uc57c monad \ub77c\uace0 \ubd80\ub97c \uc218 \uc788\uac8c\ub41c\ub2e4.  \\nmonad \ub294 category theory \uc5d0\uc11c \ub098\uc628 \uac1c\ub150\uc774\uae30\uc5d0 \ub2e4\ubd84\ud788 \uc218\ud559\uc801\uc778 \ubc95\uce59\uc774\uba70 \ub2e4\uc74c 3\uac00\uc9c0\uc774\ub2e4.\\n\\n- Left identity\\n- Right identity\\n- Associativity\\n\\n\uc608\uc804\uc5d0 \ubc30\uc6b4 \ub367\uc148\uc758 \ud56d\ub4f1\ubc95\uce59\uacfc \uacb0\ud569\ubc95\uce59\uacfc \ube44\uc2b7\ud55c \uac1c\ub150\uc73c\ub85c \uc0dd\uac01\ud558\uba74 \ub41c\ub2e4.  \\n\uc774 \uae00\uc758 \ubaa9\uc801\uc740 monad \uc5d0 \ub300\ud55c \uc644\ubcbd\ud55c \uc774\ud574\ubcf4\ub2e4 \uadf8 \uc720\uc6a9\uc131\uc744 \uc54c\ub9ac\uae30 \uc704\ud568\uc774\uae30\uc5d0 \uc790\uc138\ud55c \uc124\uba85\uc740 \uc0dd\ub7b5\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n:::info\\n\uc0ac\uc2e4 promise \ub294 \ud2b9\uc815 \uc870\uac74\uc5d0\uc11c\ub294 \uc704 \ubc95\uce59\uc744 \ub9cc\uc871\ud558\uae30 \uc54a\uae30\uc5d0 monad \ub77c\uace0 \ud560 \uc218 \uc5c6\ub2e4.  \\n\ud558\uc9c0\ub9cc js \uac1c\ubc1c\uc790\uc5d0\uac8c monad \uc758 \uc720\uc6a9\uc131\uc744 \uc124\uba85\ud558\ub294\ub370 promise \ub9cc\ud55c\uac8c \uc5c6\ub2e4\uace0 \uc0dd\uac01\ud558\uae30\uc5d0 \uc57d\uac04\uc758 \uc815\ud655\uc131\uc744 \ud3ec\uae30\ud558\uc600\ub2e4.  \\n\ub9cc\uc57d \uc5b4\ub5a4 \uc774\uc720\ub85c \ubc95\uce59\uc744 \ub9cc\uc871\ud558\uc9c0 \uc54a\ub294\uc9c0 \uc54c\uace0\uc2f6\ub2e4\uba74 \ucc38\uace0\uc790\ub8cc\uc758 \ub9c1\ud06c\ub97c \ucc38\uc870\ud55c\ub2e4.  \\n:::\\n\\n## \ucc38\uace0\uc790\ub8cc\\n\\nNo, Promise is not a monad: https://buzzdecafe.github.io/2018/04/10/no-promises-are-not-monads"},{"id":"/2021/11/07/promise-and-monad-1","metadata":{"permalink":"/2021/11/07/promise-and-monad-1","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2021-11-07-promise-and-monad-1/index.mdx","source":"@site/blog/2021-11-07-promise-and-monad-1/index.mdx","title":"Promise \uc640 Monad - 1","description":"\uc608\uc804 node.js \uc758 \ub9ce\uc740 \ube44\ub3d9\uae30 \ud568\uc218\ub294 \uacb0\uacfc\ub97c \ud568\uc218\ub85c \ubc1b\ub294 \ucf5c\ubc31\ud615\ud0dc\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc5c8\ub2e4.","date":"2021-11-07T00:00:00.000Z","formattedDate":"2021\ub144 11\uc6d4 7\uc77c","tags":[{"label":"monad","permalink":"/tags/monad"},{"label":"promise","permalink":"/tags/promise"}],"readingTime":9.635,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"Promise \uc640 Monad - 1","authors":"jake","tags":["monad","promise"]},"prevItem":{"title":"Promise \uc640 Monad - 2","permalink":"/2021/11/28/promise-and-monad-2"},"nextItem":{"title":"Localstack \uc744 \ud65c\uc6a9\ud55c AWS SES \ud1b5\ud569\ud14c\uc2a4\ud2b8","permalink":"/2021/10/31/local-stack"}},"content":"\uc608\uc804 `node.js` \uc758 \ub9ce\uc740 \ube44\ub3d9\uae30 \ud568\uc218\ub294 \uacb0\uacfc\ub97c \ud568\uc218\ub85c \ubc1b\ub294 \ucf5c\ubc31\ud615\ud0dc\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc5c8\ub2e4.  \\n\uc774\ub85c\uc778\ud574 \uc5ec\ub7ec \ube44\ub3d9\uae30 \ub85c\uc9c1\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \uc2e4\ud589\ud558\ub294 \ucf54\ub4dc\ub97c \ubcf4\uba74 \uc77c\uba85 `Callback Hell` \uc774\ub77c\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\ub2e4.\\n\\n```js\\nasyncA((a) => {\\n  asyncB((b) => {\\n    asyncC((c) => {\\n      asyncD((d) => {\\n        return a + b + c + d;\\n      });\\n    });\\n  });\\n});\\n```\\n\\n\uc774\ud6c4 \uc774\ub97c \ud574\uacb0\ud558\ub294 \ubc29\uc548\uc73c\ub85c \uc5ec\ub7ec \ub77c\uc774\ube0c\ub7ec\ub9ac\ub098 \uae30\uc220\ub4e4\uc774 \ub098\uc654\uc73c\ub098 \uc9c0\uae08\uc740 \uc8fc\ub85c `promise` \uc640 `async/await` \ub97c \ud65c\uc6a9\ud55c\ub2e4.\\n\\n\uc0ac\uc2e4 \ub098\ub294 `angular` \ub97c \ud1b5\ud574 js \ub97c \ubcf8\uaca9\uc801\uc73c\ub85c \uc0ac\uc6a9\ud588\uae30\uc5d0 \ube44\ub3d9\uae30 \ucc98\ub9ac\ub97c `rxjs` \uc758 `observable` \uc744 \uc0ac\uc6a9\ud574\uc654\ub2e4.  \\n\ud558\uc9c0\ub9cc \ubc31\uc5d4\ub4dc \uac1c\ubc1c\uc790\uac00 \ub41c \uc774\ud6c4\ub85c api \ub97c \uac1c\ubc1c\ud558\ub294\ub370 \uc0ac\uc6a9\ud558\ub294 \ub300\ubd80\ubd84\uc758 \ud568\uc218\uac00 `promise` \ub97c \ubc18\ud658\ud558\ub2e4\ubcf4\ub2c8 `observable` \uc744 \ud65c\uc6a9\ud558\uc9c0 \uc54a\uac8c\ub418\uc5c8\ub2e4.\\n\\n`promise` \ub97c \ubcf8\uaca9\uc801\uc73c\ub85c \uc0ac\uc6a9\ud588\uc744 \ub54c\uc5d0\ub294 \uc774\ubbf8 `async/await` \uac00 \ub3c4\uc785\ub41c \uc774\ud6c4\uc600\uace0 \ub3d9\uae30\uc801\uc73c\ub85c \ubcf4\uc774\ub294 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\ub294\ub370 \ud070 \uc5b4\ub824\uc6c0 \uc5c6\uc5c8\ub2e4.  \\n\uadf8\ub798\uc11c \uad73\uc774 `then` \uc774\ub098 `catch` \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\uace0 \uc0dd\uac01\ud588\uc5c8\ub2e4.  \\n\uadf8\ub7ec\ub098 \ud568\uc218\ud615 \ud328\ub7ec\ub2e4\uc784\uc744 \uacf5\ubd80\ud558\uba74\uc11c \ud568\uc218\uc758 \ud569\uc131, \uc120\uc5b8\uc801\uc778 \ucf54\ub4dc, pointfree \uc5d0 \ub300\ud55c \ub9e4\ub825\uc744 \ub290\uaf08\uace0 \uc774\ub97c `then chaining` \uc744 \ud1b5\ud574 \uc774\ub8f0 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uae68\ub2ec\uc558\ub2e4.  \\n\ud568\uc218\ud615 \ud328\ub7ec\ub2e4\uc784 \uc911 \ub09c\ud574\ud55c `monad` \ub3c4 `promise` \uc640 \ube44\uad50\ud558\uba74\uc11c \uc0dd\uac01\ud558\ub2c8 \uc774\ud574\ud558\ub294\ub370 \ub9ce\uc740 \ub3c4\uc6c0\uc744 \ubc1b\uc558\ub2e4.  \\n\uadf8\ub798\uc11c \uc774\uc640 \uad00\ub828\ud55c \uae00\uc744 \uc791\uc131\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## \ud568\uc218\ub85c \ub098\ub204\uae30\\n\\n\ub2e4\uc74c\uacfc \uac19\uc740 \uc791\uc5c5\uc744 \ud558\ub294 \ucf54\ub4dc\ub97c \uc791\uc131\ud55c\ub2e4\uace0 \uac00\uc815\ud574\ubcf8\ub2e4.\\n\\n- user \ud14c\uc774\ube14\uc5d0\uc11c \uc8fc\uc5b4\uc9c4 id \uc5d0 \ud574\ub2f9\ud558\ub294 row \ub97c \uac00\uc838\uc628\ub2e4.\\n- \uac00\uc838\uc628 \uc0ac\uc6a9\uc790\uc5d0\uc11c \uc774\ub984 \ud544\ub4dc\ub9cc \ucd94\ucd9c\ud55c\ub2e4.\\n- \ucd94\ucd9c\ud55c \uc774\ub984\uc744 \ub300\ubb38\uc790\ub85c \ubcc0\uacbd\ud55c\ub2e4.\\n- post \ud14c\uc774\ube14\uc5d0\uc11c \uc774\uc804 \ub2e8\uacc4\uc5d0\uc11c \uc5bb\uc740 \uc774\ub984\uacfc \uac19\uc740 row \uc758 \uac1c\uc218\ub97c \ubc18\ud658\ud55c\ub2e4.\\n\\n\uc704 \uc791\uc5c5\uc744 \uac01\uac01 \ud568\uc218\ub85c \ub9cc\ub4e4\uc5c8\uace0 \uc544\ub798 \ud615\ud0dc\uc758 \ud0c0\uc785\uc774\ub77c\uace0 \uc0dd\uac01\ud574\ubcf4\uc790.\\n\\n```typescript\\ninterface User {\\n  id: number;\\n  name: string;\\n  // ...\\n}\\n\\ndeclare function getUser(id: number): Promise<User>;\\ndeclare function getNameField(user: User): string;\\ndeclare function toUppercase(str: string): string;\\ndeclare function getPostCount(name: string): Promise<number>;\\n```\\n\\n`getUser` \ub098 `getPostCount` \ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uac00\uc838\uc624\ub294 \uac83\uc774\uae30\uc5d0 \ub300\ubd80\ubd84 ORM \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4\uc740 `promise` \ub97c \ubc18\ud658\ud560 \uac83\uc774\ub2e4.  \\n\uac01 \ub2e8\uacc4\ub97c \ud568\uc218\ub85c \ub9cc\ub4e4\uc5c8\uace0 \uc774\uc81c \ud568\uc218\ud615 \ud328\ub7ec\ub2e4\uc784\uc5d0\uc11c \uc8fc\ub85c \uc0ac\uc6a9\ud558\ub294 \ud569\uc131\uc744 \ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n## \ud568\uc218\uc758 \ud569\uc131\\n\\n\uba3c\uc800 \uc218\ud559\uc5d0\uc11c \uc774\uc57c\uae30\ud558\ub294 \ud569\uc131\uc744 \uc18c\uac1c\ud574\ubcf4\uba74\\n\\n> \ud55c \ud568\uc218\uc758 \uacf5\uc5ed\uc774 \ub2e4\ub978 \ud568\uc218\uc758 \uc815\uc758\uc5ed\uacfc \uc77c\uce58\ud558\ub294 \uacbd\uc6b0, \ub450 \ud568\uc218\ub97c \uc774\uc5b4 \ud558\ub098\uc758 \ud568\uc218\ub85c \ub9cc\ub4dc\ub294 \uc5f0\uc0b0\uc774\ub2e4.\\n\\n![compose](./compose.png)\\n\\n\uc218\ud559\uc5d0\uc11c \uc774\uc57c\uae30\ud558\ub294 \uc815\uc758\uc5ed\uacfc \uacf5\uc5ed\uc744 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\uc5d0\uc11c \ud568\uc218\uc758 \ud30c\ub77c\ubbf8\ud130\uc640 \ubc18\ud658 \ud0c0\uc785\uc73c\ub85c \uc0dd\uac01\ud574\ubcfc \uc218 \uc788\ub2e4.  \\n\uc989 A \ub77c\ub294 \ud568\uc218\uc758 \ubc18\ud658 \ud0c0\uc785\uc774 B \ub77c\ub294 \ud568\uc218\uc758 \ud30c\ub77c\ubbf8\ud130\uc640 \uc77c\uce58\ud558\uba74 \ub450 \ud568\uc218\ub97c \ud569\uc131\ud55c \uc0c8\ub85c\uc6b4 \ud568\uc218\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub2e4.\\n\\n```typescript\\ndeclare function A(id: number): string;\\ndeclare function B(user: string): boolean;\\n\\nfunction compose(id: number) {\\n  return B(A(id));\\n}\\n```\\n\\n\uc704 \uc131\uc9c8\uc744 \uc774\uc6a9\ud574 \uc774\uc804 \ub2e8\uacc4\uc5d0\uc11c \ub098\ub208 \ud568\uc218\ub4e4\uc744 \ud569\uc131\ud558\ub824\uace0 \ud574\ubcf4\uba74 \ubc14\ub85c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud55c\ub2e4.  \\n`getUser` \ud568\uc218\ub294 `Promise<User>` \ub97c \ubc18\ud658\ud558\uc9c0\ub9cc `getNameField` \uc758 \ud30c\ub77c\ubbf8\ud130\ub294 `User` \uc774\uae30 \ub54c\ubb38\uc774\ub2e4.  \\n`Promise<User>` \ub294 \ub0b4\ubd80\uc5d0 `User` \ub97c \uac16\uace0\uc788\uc744\uc9c0\ub77c\ub3c4 \uc5b4\uca0b\ub4e0 `User` \ud0c0\uc785\uacfc\ub294 \uc77c\uce58\ud558\uc9c0 \uc54a\ub294\ub2e4.\\n\\n## Promise.prototype.then()\\n\\n\ud569\uc131\uc744 \ud558\uae30\uc704\ud574 `getUser` \uc758 \ubc18\ud658\uac12\uc744 `User` \ub85c \ubc14\uafb8\uac70\ub098 `getNameField` \uc758 \ud30c\ub77c\ubbf8\ud130\ub97c `Promise<User>` \ub85c \ubc14\uafb8\ub294 \ubc29\ubc95\uc744 \uc0dd\uac01\ud574\ubcfc \uc218 \uc788\ub2e4.\\n\\n:::info\\n`async/await` \ub97c \uc54c\uace0\uc788\ub2e4\uba74 \uc774 \ubb38\uc81c\ub294 \uc27d\uac8c \ud574\uacb0\ub41c\ub2e4\ub294 \uac83\uc744 \uc54c\uace0\uc788\uc9c0\ub9cc \uc9c0\uae08\uc740 \uc7a0\uae50 \ubb34\uc2dc\ud558\uc790.  \\n:::\\n\\n\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uac00\uc5ec\uc624\ub294 \uc791\uc5c5\uc740 \ube44\ub3d9\uae30 \uc791\uc5c5\uc774\uae30\uc5d0 promise \ub97c \uc81c\uac70\ud558\uae30\uc5d0\ub294 \uc5b4\ub835\uace0\\n`getNameField` \uc758 \ud30c\ub77c\ubbf8\ud130\ub97c `Promise<User>` \ub85c \ubcc0\uacbd\ud558\uba74 \uc548\uc5d0\uc788\ub294 User \ub97c \uac00\uc838\uc640\uc11c name \uc744 \uaebc\ub0b4\ub294 \ub85c\uc9c1\uc744 \uc791\uc131\ud560 \uc218 \uc5c6\uac8c\ub41c\ub2e4.  \\n\uc774\uc640 \uac19\uc740 \ubb38\uc81c\uc758 \ud574\uacb0\ubc29\uc548\uc73c\ub85c promise \uc758 then \uba54\uc18c\ub4dc\uac00 \uc788\ub2e4.\\n\\n```typescript\\nconst userNamePromise = getUser(100).then((user) => getNameField(user)); // Promise<string>;\\n```\\n\\nthen \uba54\uc18c\ub4dc\ub294 \ud568\uc218\ub97c \ud30c\ub77c\ubbf8\ud130\ub85c \ubc1b\uace0 promise \uc758 \ub0b4\ubd80\uac12\uc744 \ud574\ub2f9 \ud568\uc218\uc758 \ud30c\ub77c\ubbf8\ud130\ub85c \uc804\ub2ec\ud558\uace0 \uadf8 \ubc18\ud658\uac12\uc744 \uc0c8\ub85c\uc6b4 promise \ub85c \uac10\uc2fc\ub2e4.  \\n\ub530\ub77c\uc11c \uc704 \ucf54\ub4dc\uc758 \ubc18\ud658\uac12\uc740 `Promise<string>` \uac00 \ub41c\ub2e4.  \\n`string` \uc774 \uc544\ub2cc `Promise<string>` \uac00 \ub418\ub294 \uc774\uc720\ub294 then \uba54\uc18c\ub4dc\ub294 **\uc8fc\uc5b4\uc9c4 \ube44\ub3d9\uae30 \uc791\uc5c5\uc774 \uc131\uacf5\uc801\uc73c\ub85c \ub05d\ub09c\ub2e4\uba74 \uadf8 \uac12\uc744 then \ud30c\ub77c\ubbf8\ud130\ub85c \ubc1b\uc740 \ud568\uc218\ub85c \ub118\uaca8\uc8fc\uaca0\ub2e4\ub294 \uc0c8\ub85c\uc6b4 \uc57d\uc18d**\uc744 \ub9cc\ub4dc\ub294 \uc5ed\ud560\uc744 \ud558\uae30 \ub54c\ubb38\uc774\ub2e4.  \\nthen \uba54\uc18c\ub4dc\uac00 promise \ub97c \uacc4\uc18d \ubc18\ud658\ud558\ub294 \ub355\ubd84\uc5d0 \uacc4\uc18d\ud574\uc11c then \uc744 \uc774\uc6a9\ud574 \ub2e4\uc74c \ud568\uc218\ub97c \ub123\uc5b4\uc904 \uc218 \uc788\ub2e4.\\n\\n```typescript\\nconst postCountPromise = getUser(100)\\n  .then((user) => getNameField(user))\\n  .then((name) => toUppercase(name))\\n  .then((name) => getPostCount(name));\\n```\\n\\n\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0 \uc775\uc219\ud55c \uc0ac\ub78c\uc774\ub77c\uba74 \uc704 \ucf54\ub4dc\ub97c \uc544\ub798\uc640 \uac19\uc740 `pointfree` \ubc29\uc2dd\uc73c\ub85c \uc791\uc131\ud558\uae30\ub3c4 \ud55c\ub2e4.\\n\\n```typescript\\nconst postCountPromise = getUser(100)\\n  .then(getNameField)\\n  .then(toUppercase)\\n  .then(getPostCount); // Promise<number>;\\n```\\n\\n## Flatten\\n\\n\uc774\uc804 \ucf54\ub4dc\uc758 \ub9c8\uc9c0\ub9c9 \ubd80\ubd84\uc744 \uc0b4\ud3b4\ubcf4\uba74 \uc774\uc0c1\ud55c \uc810\uc774 \uc788\ub2e4.  \\n`getPostCount` \ub294 `Promise<number>` \ub97c \ubc18\ud658\ud558\uace0 then \uba54\uc18c\ub4dc\ub294 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uc758 \ubc18\ud658\uac12\uc744 \ub2e4\uc2dc promise \ub85c \uac10\uc2fc\ub2e4\uace0 \ud588\uc73c\ub2c8 \ucd5c\uc885 \uacb0\uacfc\ub294 `Promise<Promise<number>>` \uac00 \ub420\uac70\ub77c\ub294 \uc0dd\uac01\uc774 \ub4e0\ub2e4.  \\n\ud558\uc9c0\ub9cc \uacb0\uacfc\uac00 `Promise<number>` \uac00 \ub418\ub294 \uc774\uc720\ub294 then \uba54\uc18c\ub4dc\uac00 \uc8fc\uc5b4\uc9c4 \ud568\uc218\uac00 promise \ub97c \ubc18\ud658\ud558\uba74 \ud3c9\ud0c4\ud654 \uacfc\uc815\uc744 \uac70\uce58\uae30 \ub54c\ubb38\uc774\ub2e4.  \\n\ubc30\uc5f4\uc758 \uacbd\uc6b0\uc5d0\ub3c4 \uc774\uc640 \ube44\uc2b7\ud558\uac8c `flatMap` \uc774 \uc788\uc5b4\uc11c \ud30c\ub77c\ubbf8\ud130\ub85c \uc8fc\uc5b4\uc9c4 \ud568\uc218\uac00 \ubc30\uc5f4\uc744 \ubc18\ud658\ud574\ub3c4 \uae30\uc874 \ucc28\uc6d0\uc774 \uadf8\ub300\ub85c \uc720\uc9c0\ub41c\ub2e4.\\n\\n```typescript\\nconst arrA = [1, 2, 3, 4, 5];\\narrA.map((v) => [v + 1]); // [[2], [3], [4], [5], [6]]\\narrA.flatMap((v) => [v + 1]); // [2, 3, 4, 5, 6]\\n```\\n\\n## \ub9c8\ubb34\ub9ac\\n\\n\uc9c0\uae08\uae4c\uc9c0 `Promise<User>` \ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218\ub85c \uc2dc\uc791\ud574\uc11c \uc5ec\ub7ec \ub2e4\ub978 \ud568\uc218\ub97c \uac70\uccd0 \ucd5c\uc885 `Promise<number>` \ub97c \ub9cc\ub4dc\ub294 \uacfc\uc815\uc744 \uc0b4\ud3b4\ubcf4\uc558\ub2e4.  \\n\ubcf4\ud1b5 nodejs \ud658\uacbd\uc5d0\uc11c \ud558\ub098\uc758 \ud30c\ub77c\ubbf8\ud130\uc640 \ud558\ub098\uc758 \uac12\uc744 \ubc18\ud658\ud558\ub294 \ud568\uc218\ub97c \ub9cc\ub4e0\ub2e4\uba74 \ub0b4\ubd80 \ub85c\uc9c1\uc5d0 \ube44\ub3d9\uae30 \uc791\uc5c5\uc758 \uc5ec\ubd80\uc5d0 \ub530\ub77c \uc544\ub798 \ud615\ud0dc \uc911 \ud558\ub098\uac00 \ub420\uac83\uc774\ub2e4.\\n\\n```typescript\\ndeclare function syncFunc<A, B>(a: A): B;\\ndeclare function asyncFunc<A, B>(a: A): Promise<B>;\\n```\\n\\n\ubaa8\ub4e0 \ud568\uc218\uac00 `syncFunc` \ud615\ud0dc\ub77c\uba74 \uc27d\uac8c \ud569\uc131\uc774 \uac00\ub2a5\ud558\uc9c0\ub9cc \ud558\ub098\ub77c\ub3c4 `asyncFunc` \uc774 \uc788\ub2e4\uba74 promise \uc758 then \uacfc \uac19\uc740 \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4.  \\n\uc989 then \uc740 \uc704 \ub450\uac00\uc9c0 \ud615\ud0dc\ub97c \uac00\uc9c4 \ud568\uc218\uc758 \ud569\uc131\uc744 \uc6d0\ud65c\ud558\uac8c \ud574\uc8fc\ub294 \uc5ed\ud560\uc744 \ud55c\ub2e4.  \\n\uc774\ub294 promise \uac00 monad \uc758 \uc131\uc9c8\uc744 \ub9cc\uc871\ud558\uae30\uc5d0 \uc5bb\uc744 \uc218 \uc788\ub294 \uc7a5\uc810\uc774\ub2e4.\\n\\n\uc9c0\uae08\uae4c\uc9c0 monad \uc758 \uc815\uc758\ubcf4\ub2e4 monad \ub97c \ud1b5\ud574 \uc5bb\uc744 \uc218 \uc788\ub294 \uc7a5\uc810\uc5d0 \ub300\ud574 \uba3c\uc800 \uc124\uba85\ud558\uc600\ub2e4.  \\n\uadf8 \uc774\uc720\ub294 [\ubaa8\ub098\ub4dc \uad34\ub2f4](https://xtendo.org/ko/monad#143) \uc774\ub77c\uace0 \ubd88\ub9b4 \uc815\ub3c4\ub85c monad \ub97c \uc774\ud574\ud558\uae30 \uc5b4\ub835\ub2e4\ub294 \uc778\uc2dd\uc774 \uc788\uace0,\\nnodejs \uac1c\ubc1c\uc790\uc5d0\uac8c \uce5c\uc219\ud55c promise \ub97c \ud65c\uc6a9\ud574 monad \ub97c \uc5b4\ub5bb\uac8c \ud65c\uc6a9\ud558\ub294\uc9c0\uc5d0 \ub300\ud55c \uc774\ud574\ub97c \uba3c\uc800 \ud55c\ub2e4\uba74 \ucd94\ud6c4\uc5d0 monad \ub97c \uc774\ud574\ud558\uae30 \uc26c\uc6b8\uac70\ub77c\ub294 \uc0dd\uac01\uc774 \ub4e4\uc5c8\uae30 \ub54c\ubb38\uc774\ub2e4.\\n\\n\ub2e4\uc74c \uae00\uc5d0\uc11c\ub294 `async/await` \ub97c \ud65c\uc6a9\ud574 \ud30c\ub77c\ubbf8\ud130 \uac1c\uc218\uac00 2\uac1c \uc774\uc0c1\uc778 \ud568\uc218\uc5d0 \ub300\ud55c \ucc98\ub9ac\uc640 monad \uc5d0 \ub300\ud55c \uc870\uae08 \ub354 \uc790\uc138\ud55c \uc124\uba85\uc744 \ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n## \ucc38\uace0\uc790\ub8cc\\n\\n- Promise.prototype.then(): https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"},{"id":"/2021/10/31/local-stack","metadata":{"permalink":"/2021/10/31/local-stack","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2021-10-31-local-stack/index.mdx","source":"@site/blog/2021-10-31-local-stack/index.mdx","title":"Localstack \uc744 \ud65c\uc6a9\ud55c AWS SES \ud1b5\ud569\ud14c\uc2a4\ud2b8","description":"localstack \uc740 AWS \uc778\ud504\ub77c \uc2dc\ubbac\ub808\uc774\ud130\ub85c Lambda, S3, Dynamodb, Kinesis, SQS, SNS \uac19\uc740 \uc11c\ube44\uc2a4\ub97c \ub85c\uceec \ud658\uacbd\uc5d0 \uc62c\ub9b4 \uc218 \uc788\ub2e4.","date":"2021-10-31T00:00:00.000Z","formattedDate":"2021\ub144 10\uc6d4 31\uc77c","tags":[{"label":"localstack","permalink":"/tags/localstack"},{"label":"testing","permalink":"/tags/testing"},{"label":"aws","permalink":"/tags/aws"}],"readingTime":5.705,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"Localstack \uc744 \ud65c\uc6a9\ud55c AWS SES \ud1b5\ud569\ud14c\uc2a4\ud2b8","authors":"jake","tags":["localstack","testing","aws"]},"prevItem":{"title":"Promise \uc640 Monad - 1","permalink":"/2021/11/07/promise-and-monad-1"},"nextItem":{"title":"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \uad00\ub828 \uc790\ub8cc","permalink":"/2021/10/21/functional-programming-material"}},"content":"`localstack` \uc740 AWS \uc778\ud504\ub77c \uc2dc\ubbac\ub808\uc774\ud130\ub85c Lambda, S3, Dynamodb, Kinesis, SQS, SNS \uac19\uc740 \uc11c\ube44\uc2a4\ub97c \ub85c\uceec \ud658\uacbd\uc5d0 \uc62c\ub9b4 \uc218 \uc788\ub2e4.  \\n\uc774\ubc88 \uae00\uc740 \uc774\uba54\uc77c \ubc1c\uc1a1 \uc11c\ube44\uc2a4\uc778 `SES` \ub97c \ud14c\uc2a4\ud2b8 \ud574\ubcf4\uae30 \uc704\ud55c \uc124\uc815\uacfc\uc815\uc744 \uae30\uc220\ud558\uace0\uc790 \ud55c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n> \uacfc\uc815\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \ucf54\ub4dc\ub294 \ub2e4\uc74c URL\uc744 \ucc38\uc870\ud55c\ub2e4.  \\n> https://github.com/jbl428/study-note/tree/master/localstack\\n\\n## \ud658\uacbd\\n\\n`node.js` \ud658\uacbd\uc5d0\uc11c `jest` \ub97c \ud65c\uc6a9\ud574 \ud14c\uc2a4\ud2b8 \ud558\uc600\uc73c\uba70 `testcontainers` \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud65c\uc6a9\ud558\uc600\ub2e4.\\n\\n> \ubcf8 \uae00\uc744 \uc791\uc131\ud558\ub294 \uc2dc\uc810\uc5d0\uc11c\ub294 `SES API` \ubc84\uc804\uc774 v2 \uac00 \ub098\uc654\uc9c0\ub9cc `localstack` \uc774 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc544 v1 \uc744 \uc774\uc6a9\ud558\uc600\ub2e4.\\n\\n`localstack` \uc758 \uacbd\uc6b0 \uc608\uc804 \ubc84\uc804\uc740 \uac01 \uc11c\ube44\uc2a4 \ubcc4\ub85c \uc811\uc18d endpoint \uac00 \ub2ec\ub790\uc9c0\ub9cc \uc9c0\uae08\uc740 \ud558\ub098\ub85c \ud1b5\ud569\ub418\uc5c8\ub2e4.  \\n\uc720\ub8cc\ubc84\uc804\uc774 \ub530\ub85c \uc788\uc73c\uba70 \ub354 \ub9ce\uc740 \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud55c\ub2e4\uace0 \ud55c\ub2e4. `SES` \uc11c\ube44\uc2a4\ub294 \ubb34\ub8cc\ubc84\uc804\ub3c4 \uc9c0\uc6d0\ud55c\ub2e4.\\n\\n## testcontainers\\n\\n`testcontainers` \ub294 \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108\ub97c \ud65c\uc6a9\ud574 \ud14c\uc2a4\ud2b8\ub97c \uc704\ud55c \ud658\uacbd\uc744 \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub85c \ucf54\ub4dc\ub85c \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589 \ubc0f \uc885\ub8cc \ud560 \uc218 \uc788\ub294\uac70\ub77c \ubcf4\uba74\ub41c\ub2e4.  \\n\uc5ec\ub7ec \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\ub97c \uc9c0\uc6d0\ud558\uba70 \uac00\uc7a5 \ub9ce\uc740 star \ub97c \ubcf4\uc720\ud55c \uc5b8\uc5b4\ub294 \uc790\ubc14\uc774\ub2e4.  \\n\uadf8\ub798\uc11c localstack \uc6a9 \ubaa8\ub4c8\uc744 \ub530\ub85c \uc9c0\uc6d0\ud574 \ud3b8\ud558\uac8c \uc4f8 \uc218 \uc788\uc9c0\ub9cc node.js \uc6a9\uc740 \uc5c6\uae30\uc5d0 \ubc88\uac70\ub85c\uc6b4 \uacfc\uc815\uc744 \uac70\uccd0\uc57c\ud55c\ub2e4.\\n\\n```sh\\nyarn add -D testcontainers\\n```\\n\\n\ubcf4\ud1b5 \ud14c\uc2a4\ud2b8 \ud30c\uc77c\uc758 beforeAll \uc5d0 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 \ub85c\uc9c1\uc744 \ub123\uc5b4\uc900\ub2e4.\\n\\n```ts\\nimport { GenericContainer, StartedTestContainer, Wait } from \'testcontainers\';\\n\\ndescribe(\'localstack test\', () => {\\n  let localstackPort: number;\\n  let container: StartedTestContainer;\\n\\n  beforeAll(async () => {\\n    container = await new GenericContainer(\'localstack/localstack\')\\n      .withExposedPorts(4566)\\n      .withEnv(\'SERVICES\', \'ses\')\\n      .withWaitStrategy(Wait.forLogMessage(\'Execution of \\"preload_services\\"\'))\\n      .start();\\n\\n    localstackPort = container.getMappedPort(4566);\\n  });\\n\\n  afterAll(() => container.stop());\\n\\n  // ...\ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\\n\\n};\\n```\\n\\n```ts\\ncontainer = await new GenericContainer(\\"localstack/localstack\\");\\n```\\n\\nGenericContainer \ud074\ub798\uc2a4\uc758 \uc0dd\uc131\uc790 \ud30c\ub77c\ubbf8\ud130\ub85c \uc2e4\ud589\uc744 \uc6d0\ud558\ub294 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \uc774\ub984\uc744 \ub123\uc5b4\uc900\ub2e4.\\n\\n```ts\\n    .withExposedPorts(4566)\\n```\\n\\n\ucee8\ud14c\uc774\ub108 \ub0b4\ubd80\uc758 \ud2b9\uc815 \ud3ec\ud2b8\ub97c \uc678\ubd80\uc758 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uc784\uc758\uc758 \ud3ec\ud2b8\ub85c expose \ud574\uc8fc\ub294 \uc5ed\ud560\uc744 \ud55c\ub2e4.  \\n\uc704\uc758 \uacbd\uc6b0 \ucee8\ud14c\uc774\ub108\uc758 4566 \ud3ec\ud2b8\ub97c \uc678\ubd80\ub85c \ub178\ucd9c\uc2dc\ud0a4\uba70 \ub85c\uceec\uc758 \ubbf8\uc0ac\uc6a9 \ud3ec\ud2b8\ubc88\ud638 \uc911\uc5d0 \uc784\uc758\ub85c \uc124\uc815\ud574\uc900\ub2e4.  \\n\uc774\ub97c \ud1b5\ud574 \uc5ec\ub7ec \ucee8\ud14c\uc774\ub108\ub97c \ub3d9\uc2dc\uc5d0 \uc2e4\ud589\uc2dc\ucf1c\ub3c4 \uac01\uac01 \ub2e4\ub978 \ud3ec\ud2b8\ub85c \ub178\ucd9c\ub418\uae30\uc5d0 \ud14c\uc2a4\ud2b8\ub97c \ubcd1\ub82c\ub85c \uc2e4\ud589\ud558\uba74\uc11c \uac01 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uac04\uc758 \ub3c5\ub9bd\uc131\uc744 \uc9c0\ucf1c\uc900\ub2e4.\\n\\n```ts\\n    .withWaitStrategy(Wait.forLogMessage(\'Execution of \\"preload_services\\"\'))\\n```\\n\\n\ud2b9\uc815 \ucee8\ud14c\uc774\ub108\ub294 \uc2e4\ud589\uc774 \uc644\ub8cc\ub418\ub3c4 \uc774\ud6c4\uc5d0 \ucd08\uae30 \uc138\ud305\uacfc\uc815\uc774 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9 \ucee8\ud14c\uc774\ub108\ub97c \uc628\uc804\ud788 \uc0ac\uc6a9\ud558\uae30 \uae4c\uc9c0 \uae30\ub2e4\ub824\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \ubc1c\uc0dd\ud55c\ub2e4.  \\n\ub530\ub77c\uc11c withWaitStrategy \ub97c \ud1b5\ud574 \uc5b4\ub5a4 \uc870\uac74\uc5d0 \ud574\ub2f9\ud560 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9b4 \uac83\uc778\uc9c0 \uc124\uc815\ud560 \uc218 \uc788\ub2e4.  \\n\uc704\uc758 \uacbd\uc6b0\ub294 \ucee8\ud14c\uc774\ub108 \ub85c\uadf8 \uba54\uc138\uc9c0 \uc911\uc5d0 Execution of \\"preload_services\\" \ubb38\uad6c\uac00 \ud3ec\ucc29\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9b0\ub2e4\ub294 \uc124\uc815\uc774\ub2e4.  \\nwait strategy \ub294 \uc5ec\ub7ec\uac00\uc9c0\uac00 \uc788\uc73c\uba70 \uac01 \ud56d\ubaa9\uc740 \uc544\ub798 \ubb38\uc11c\ub97c \ucc38\uc870\ud55c\ub2e4.\\n\\nhttps://www.testcontainers.org/features/startup_and_waits/\\n\\n```ts\\nlocalstackPort = container.getMappedPort(4566);\\n```\\n\\nwithExposedPorts \ub97c \ud1b5\ud574 \ub178\ucd9c\ud55c \ud3ec\ud2b8\ub97c \uc54c\uc544\ub0b8 \ud6c4 localstackPort \ubcc0\uc218\uc5d0 \ud560\ub2f9\ud558\uba70 \uc774\ub97c \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc5d0\uc11c \ud65c\uc6a9\ud55c\ub2e4.\\n\\n```ts\\nafterAll(() => container.stop());\\n```\\n\\n\ud14c\uc2a4\ud2b8\uac00 \uc885\ub8cc\ub418\uba74 \ucee8\ud14c\uc774\ub108\ub97c \uc885\ub8cc\ud558\ub294 \ucf54\ub4dc\uc774\uba70 \uc0ac\uc2e4 testcontainer \ub294 \uc885\ub8cc\ub85c\uc9c1\uc744 \ub123\uc9c0 \uc54a\uc544\ub3c4 \uc77c\uc815 \uc2dc\uac04\ub3d9\uc548 \ud65c\ub3d9\uc774 \uc5c6\uc73c\uba74 \uc790\ub3d9\uc73c\ub85c \ucee8\ud14c\uc774\ub108\ub97c \uc885\ub8cc\uc2dc\ucf1c\uc8fc\ub294 \uae30\ub2a5\uc774 \uc788\ub2e4.  \\nryuk container \ub77c\uace0 \ubd88\ub9ac\ub294 \ucee8\ud14c\uc774\ub108\uac00 \uadf8 \uc5ed\ud560\uc744 \ud55c\ub2e4.\\n\\nhttps://hub.docker.com/r/testcontainers/ryuk\\n\\n```ts\\nconst client = new SESClient({\\n  region: \\"local\\",\\n  endpoint: `http://localhost:${localstackPort}`, // localstackPort \uc73c\ub85c \ud3ec\ud2b8\uc124\uc815\\n  credentials: {\\n    accessKeyId: \\"test\\",\\n    secretAccessKey: \\"test\\",\\n  },\\n});\\n```\\n\\n\uc6b4\uc601 aws \uc744 \uc0ac\uc6a9\ud558\ub824\uba74 `accessKeyId` \ub098 `secretAccessKey` \uac19\uc740 \uc811\uc18d\uc815\ubcf4\ub97c \uc81c\uacf5\ud574\uc57c \ud558\ub294\ub370 localstack \uc5d0\uc11c\ub294 \ube48 \ubb38\uc790\uc5f4\uc774 \uc544\ub2cc \uc784\uc758\uc758 \ubb38\uc790\uc5f4\uc744 \uc9c0\uc815\ud574\ub3c4 \uc815\uc0c1\ub3d9\uc791\ud568\uc744 \ud655\uc778\ud588\ub2e4.  \\n\ud558\uc9c0\ub9cc \ubb38\uc11c\ub97c \ubcf4\ub2c8 S3\ub97c \uc774\uc6a9\ud558\ub294 \uacbd\uc6b0 test \ub85c \uc124\uc815\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud558\uae30\uc5d0 \ub530\ub77c\uc11c \uc9c0\uc815\ud55c\ub2e4.\\n\\nSES \uacbd\uc6b0 \uc778\uc99d\ub41c \uba54\uc77c \uc8fc\uc18c\ub85c\ub9cc \ubc1c\uc1a1\uc8fc\uc18c\ub97c \uc124\uc815\ud560 \uc218 \uc788\uace0 localstack \ub3c4 \ub611\uac19\uc774 \uba54\uc77c\ubc1c\uc1a1 api \ud638\ucd9c \uc804\uc5d0 \uc778\uc99d api \ub97c \uc0ac\uc6a9\ud574 \uba54\uc77c\uc8fc\uc18c\ub97c \ub4f1\ub85d\ud574\uc57c \ud55c\ub2e4.\\n\\n```ts\\nconst command = new VerifyEmailAddressCommand({\\n  EmailAddress: \\"from@inflab.com\\",\\n});\\nawait client.send(command);\\n```\\n\\n\uc774\ud6c4\uc5d0 sdk \uc5d0 \uc694\uad6c\ud558\ub294 \uc2a4\ud329\uc5d0 \ub9de\uac8c \ubc1c\uc1a1\ub85c\uc9c1\uc744 \ucd94\uac00\ud55c\ub2e4.\\n\\n```ts\\nconst sendCommand = new SendEmailCommand({\\n  // \uba54\uc77c \uc804\uc1a1 \uc635\uc158\ub4e4...\\n});\\nawait client.send(sendCommand);\\n```\\n\\n## \ucc38\uace0\uc790\ub8cc\\n\\n- testcontainers: https://www.testcontainers.org\\n- localstack: https://github.com/localstack/localstack"},{"id":"/2021/10/21/functional-programming-material","metadata":{"permalink":"/2021/10/21/functional-programming-material","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2021-10-21-functional-programming-material/index.mdx","source":"@site/blog/2021-10-21-functional-programming-material/index.mdx","title":"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \uad00\ub828 \uc790\ub8cc","description":"\uadf8\ub3d9\uc548 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0 \ub300\ud55c \uacf5\ubd80\ub97c \ud558\uba74\uc11c \ubcf4\uc558\ub358 \uc790\ub8cc\ub4e4\uc744 \uc774\uacf3\uc5d0 \uae30\ub85d\ud558\ub824\uace0 \ud55c\ub2e4.","date":"2021-10-21T00:00:00.000Z","formattedDate":"2021\ub144 10\uc6d4 21\uc77c","tags":[{"label":"functional programming","permalink":"/tags/functional-programming"}],"readingTime":5.01,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \uad00\ub828 \uc790\ub8cc","authors":"jake","tags":["functional programming"]},"prevItem":{"title":"Localstack \uc744 \ud65c\uc6a9\ud55c AWS SES \ud1b5\ud569\ud14c\uc2a4\ud2b8","permalink":"/2021/10/31/local-stack"},"nextItem":{"title":"Docusaurus \uc5d0 utterances \uc5f0\ub3d9","permalink":"/2021/10/19/utterances"}},"content":"\uadf8\ub3d9\uc548 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0 \ub300\ud55c \uacf5\ubd80\ub97c \ud558\uba74\uc11c \ubcf4\uc558\ub358 \uc790\ub8cc\ub4e4\uc744 \uc774\uacf3\uc5d0 \uae30\ub85d\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## \uc11c\uc801\\n\\n### \ud568\uc218\ud615 \uc0ac\uace0 (Neal Ford)\\n\\n\uba54\ubaa8\uc774\uc81c\uc774\uc158 \uac1c\ub150\uc5d0 \ub300\ud574 \ucc98\uc74c \uc54c\uac8c\ub41c \ucc45\uc774\ub2e4.\\n\\n### \ud568\uc218\ud615 \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 (Luis Atencio)\\n\\n\uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\ub85c \ud558\ub294 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \ucc45\uc73c\ub85c \uc77d\uc740\uac83\uc740 \uae30\uc5b5\ub098\ub294\ub370 \ub531\ud788 \uae30\uc5b5\uc5d0 \ub0a8\ub294 \ub0b4\uc6a9\uc740 \uc5c6\uc5c8\ub2e4.\\n\\n### Grokking Simplicity Taming complex software with functional thinking (Eric Normand)\\n\\n\ud504\ub85c\uadf8\ub7a8\uc744 Action, Calculation, Data \ub85c \ub098\ub204\uc5b4 \uc0dd\uac01\ud558\uace0 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc744 \uc804\uc5fc\uc131\uc774 \uac15\ud558\uace0 \ud14c\uc2a4\ud2b8 \ud558\uae30 \ud798\ub4e0 Action \uc744 Calculation \uc73c\ub85c \ub9cc\ub4dc\ub294 \ud328\ub7ec\ub2e4\uc784\uc73c\ub85c \uc124\uba85\ud558\uace0 \uc788\ub2e4.  \\n\ucd08\ubc18\ubd80\ub294 \ud765\ubbf8\ub86d\uac8c \uc77d\uc5c8\uc9c0\ub9cc \uc774\ud6c4\uc5d0\ub294 \uc774\ubbf8 \uc775\uc219\ud55c \ub0b4\uc6a9\uc774 \ub9ce\uc544\uc11c \ub05d\uae4c\uc9c0 \uc77d\uc9c0\ub294 \uc54a\uc558\ub2e4.\\n\\n### Learning Functional Programming in Go (Lex Sheehan)\\n\\n\uace0\uc5b8\uc5b4\ub85c \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uc744 \uc5b4\ub5bb\uac8c \ud560 \uc218 \uc788\ub294\uc9c0 \uc54c \uc218 \uc788\ub294 \ucc45.  \\n\uace0\uc5b8\uc5b4\ub294 \ud568\uc218\ub97c `type` \uba85\ub839\uc5b4\ub85c \uc0c8\ub85c\uc6b4 \ud0c0\uc785\uc73c\ub85c \ub9cc\ub4e4\uba74 \ud568\uc218\uc758 \uba54\uc18c\ub4dc\ub77c\ub294 \ub3c5\ud2b9\ud55c \uc131\uc9c8\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub294\ub370 \uc774\ub97c \ud65c\uc6a9\ud574\uc11c \ud568\uc218 \uccb4\uc774\ub2dd\uc744 \uad6c\ud604\ud55c\uac8c \ucc38\uc2e0\ud588\ub2e4.  \\n\ucc44\ub110\uc744 \ud65c\uc6a9\ud574 pipeline\uc744 \ub9cc\ub4e0\ub294 \ucf54\ub4dc\ub3c4 \ub180\ub77c\uc6cc \uc9c1\uc811 \uad6c\ud604\ud574\ubcf4\uae30\ub3c4 \ud558\uc600\ub2e4.\\n\\n> https://github.com/jbl428/study-note/tree/master/go-pipeline\\n\\n### \uc2a4\uce7c\ub77c\ub85c \ubc30\uc6b0\ub294 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d (Paul Chiusano and Runar Bjarnason)\\n\\n\ubaa8\ub098\ub4dc\ub97c \uc774\uc6a9\ud574 side effect \uc788\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc21c\uc218\ud55c \ud568\uc218\ub4e4\uc758 \ud569\uc131\uc73c\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub294\uc9c0 \uac10\uc744 \uc7a1\uac8c \ud574\uc900 \ucc45\uc774\ub2e4.  \\n\uc5f0\uc2b5\ubb38\uc81c \uc911\uc5d0 \uc0c1\ud0dc\ubaa8\ub098\ub4dc\ub97c \ud65c\uc6a9\ud574\uc57c \ud558\ub294\uac8c \uc788\uc5c8\ub294\ub370 \ud480\uba74\uc11c \uc5b4\ub824\uc6e0\ub358 \uc0c1\ud0dc\ubaa8\ub098\ub4dc\ub97c \uc774\ud574\ud560 \uc218 \uc788\uac8c\ub418\uc5c8\ub2e4.  \\n\ud480\uc5c8\ub358 \ubb38\uc81c\uc640 \ub2f5\uc740 \uc544\ub798 \ub9c1\ud06c\uc5d0 \uc788\ub2e4.\\n\\n> https://github.com/jbl428/study-note/tree/master/haskell/candy-machine\\n\\n## \uc601\uc0c1\\n\\n### Monad\ub780 \ubb34\uc5c7\uc778\uac00?\\n\\nhttps://www.youtube.com/watch?v=jI4aMyqvpfQ\\n\\n\uac1c\uc778\uc801\uc73c\ub85c \ubaa8\ub098\ub4dc\uc5d0 \ub300\ud574 \uc27d\uac8c \uc124\uba85\ud588\ub2e4\uace0 \ub290\ub080 \uc601\uc0c1\uc774\uc5c8\ub2e4. `flatMap` \uc5d0 \ub300\ud55c \uac1c\ub150\uc744 \uc775\ud788\ub294\ub370 \ub3c4\uc6c0\uc774 \ub418\uc5c8\ub2e4.\\n\\n### haskell rank\\n\\nhttps://www.youtube.com/watch?v=h_D4P-KRNKs&list=PLguYJK7ydFE4aS8fq4D6DqjF6qsysxTnx\\n\\nhttps://www.hackerrank.com/ \uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud504\ub85c\uadf8\ub798\ubc0d \ubb38\uc81c\ub97c \ud558\uc2a4\ucf08\uc744 \uc774\uc6a9\ud574 \ud480\uc774\ud558\ub294 \uc601\uc0c1\uc774 \uc788\ub2e4.  \\n\uba85\ub839\ud615 \uc5b8\uc5b4\ub85c \uad6c\ud604\ud558\uba74 \uae38\uc5b4\uc9c8 \uc218 \uc788\ub294 \ucf54\ub4dc\ub97c \ud558\uc2a4\ucf08\ub85c \uac04\uacb0\ud558\uac8c \ub9cc\ub4dc\ub294 \uacfc\uc815\uc774 \uc2e0\uae30\ud588\ub2e4.  \\n\uadf8\ub9ac\uace0 \uc720\ud22c\ubc84\uac00 `emacs` \ub97c \uc815\ub9d0 \uc798 \uc0ac\uc6a9\ud558\ub294\ub370 \ud55c \ubc88 \uc2dc\uccad\ud558\uae38 \uad8c\ud574\ubcf8\ub2e4.\\n\\n### JSON Parser 100% From Scratch in Haskell (only 111 lines)\\n\\nhttps://www.youtube.com/watch?v=N9RUqGYuGfw\\n\\n\uc704 \uc601\uc0c1\uc744 \ub9cc\ub4e0 \uc720\ud29c\ubc84\uc758 \ub610 \ub2e4\ub978 \uc601\uc0c1\uc73c\ub85c \ud558\uc2a4\ucf08\ub85c `JSON` \ud30c\uc11c\ub97c \ub9cc\ub4dc\ub294 \uacfc\uc815\uc744 \ub2f4\uace0\uc788\ub2e4.  \\n\ubaa8\ub098\ub4dc\ub97c \uc2e4\uc81c\ub85c \uc5b4\ub5bb\uac8c \ud65c\uc6a9\ud558\ub294\uc9c0 \uc54c \uc218 \uc788\uc5c8\ub358 \uc88b\uc740 \uc601\uc0c1\uc774\uc5c8\uace0 \ud558\uc2a4\ucf08\uc744 \uaf2d \ub9c8\uc2a4\ud130 \ud574\ubcf4\uace0 \uc2f6\uc5b4\uc9c4 \uacc4\uae30\uac00 \ub418\uc5c8\ub2e4.\\n\\n## \uac15\uc758\\n\\n### \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d\uacfc JavaScript ES6+\\n\\nhttps://www.inflearn.com/course/functional-es6/dashboard\\n\\n\uc720\uc778\ub3d9\ub2d8\uc758 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \uac15\uc758\ub85c ES6 \uc774\ud130\ub808\uc774\ud130\ub97c \ud65c\uc6a9\ud574 `fxjs` \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \ud575\uc2ec \ud568\uc218\ub97c \uad6c\ud604\ud558\ub294 \uacfc\uc815\uc744 \ub2f4\uace0\uc788\ub2e4.  \\n\uac1c\uc778\uc801\uc73c\ub85c \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8\ub85c \uc9c0\uc5f0\ud3c9\uac00\ub97c \uad6c\ud604\ud588\ub2e4\ub294\uac8c \uac00\uc7a5 \ub180\ub77c\uc6e0\ub2e4.  \\n\uadf8\ub9ac\uace0 `go` \ud568\uc218\uc5d0 \ud30c\ub77c\ubbf8\ud130\ub85c \ub4e4\uc5b4\uac00\ub294 \ud568\uc218\uac00 promise \ub97c \ubc18\ud658\ud558\uba74 \uc801\uc808\ud788 \ub2e4\uc74c \ud568\uc218\uc5d0 promise \uc548\uc758 \uac12\uc744 \uc804\ub2ec\ud574 \uc8fc\ub3c4\ub85d \uad6c\ud604\ud55c \uc544\uc774\ub514\uc5b4\uac00 \ub9e4\uc6b0 \uc88b\uc558\ub2e4.\\n\\n## \ubb38\uc11c\\n\\n### fp-ts Learning Resources \ubc88\uc5ed\ubb38\uc11c\\n\\nhttps://github.com/alstn2468/getting-started-fp-ts\\n\\nfp-ts \uacf5\uc2dd\ubb38\uc11c\uc758 Learning Resources\uc5d0\uc11c \uc18c\uac1c\ud558\ub294 \ubb38\uc11c\ub4e4\uc744 \ubc88\uc5ed\ud55c \uc800\uc7a5\uc18c\ub85c \uc601\uc5b4\uc5d0 \uc775\uc219\ud558\uc9c0 \uc54a\ub2e4\uba74 \uc774\uacf3\uc744 \ucc38\uace0\ud558\ub294\uac83\ub3c4 \uc88b\uc744\uac70 \uac19\ub2e4.\\n\\n### TypeScript \uc640 fp-ts \ub97c \ud65c\uc6a9\ud55c \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \uc18c\uac1c\\n\\nhttps://github.com/jbl428/functional-programming\\n\\nfp-ts \uba54\uc778\ud14c\uc774\ub108\uac00 \ub9cc\ub4e0 \ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \uac15\uc758\uc790\ub8cc, \uc6d0\ubb38\uc740 \uc774\ud0c8\ub9ac\uc544\uc5b4\ub85c \uc791\uc131\ub418\uc5c8\uace0 \uc601\uc5b4\ub85c \ubc88\uc5ed\ud55c \ub2e4\ub978 \uc800\uc7a5\uc18c\ub97c \ud65c\uc6a9\ud574 \ud55c\uad6d\uc5b4\ub85c \ubc88\uc5ed\ud558\uace0 \uc788\ub2e4."},{"id":"/2021/10/19/utterances","metadata":{"permalink":"/2021/10/19/utterances","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2021-10-19-utterances/index.mdx","source":"@site/blog/2021-10-19-utterances/index.mdx","title":"Docusaurus \uc5d0 utterances \uc5f0\ub3d9","description":"utterances \ub294 GitHub \uc774\uc288 \ub97c \uc774\uc6a9\ud574\uc11c \uc6d0\ud558\ub294 \uc0ac\uc774\ud2b8\uc758 \ub313\uae00 \uae30\ub2a5\uc744 \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \uc11c\ube44\uc2a4\uc774\ub2e4.","date":"2021-10-19T00:00:00.000Z","formattedDate":"2021\ub144 10\uc6d4 19\uc77c","tags":[{"label":"blog","permalink":"/tags/blog"},{"label":"docusaurus","permalink":"/tags/docusaurus"},{"label":"utterances","permalink":"/tags/utterances"}],"readingTime":4.62,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"Docusaurus \uc5d0 utterances \uc5f0\ub3d9","authors":"jake","tags":["blog","docusaurus","utterances"]},"prevItem":{"title":"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \uad00\ub828 \uc790\ub8cc","permalink":"/2021/10/21/functional-programming-material"},"nextItem":{"title":"Docusaurus \ub97c \uc774\uc6a9\ud55c \ube14\ub85c\uadf8 \uad6c\ucd95","permalink":"/2021/10/17/docusaurus-for-blog"}},"content":"[utterances](https://utteranc.es/) \ub294 `GitHub \uc774\uc288` \ub97c \uc774\uc6a9\ud574\uc11c \uc6d0\ud558\ub294 \uc0ac\uc774\ud2b8\uc758 \ub313\uae00 \uae30\ub2a5\uc744 \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \uc11c\ube44\uc2a4\uc774\ub2e4.  \\n\ub530\ub77c\uc11c github \uacc4\uc815\uc774 \uc874\uc7ac\ud574\uc57c \ub313\uae00 \uc791\uc131\uc774 \uac00\ub2a5\ud558\uc9c0\ub9cc \uac1c\ubc1c\uc5d0 \uad00\ub828 \uae00\uc744 \uc791\uc131\ud560 \uc608\uc815\uc774\ub77c \ud070 \ubb38\uc81c\ub294 \uc544\ub2c8\uc5c8\ub2e4.  \\n\ub9cc\uc57d \ub2e4\ub978 \uc18c\uc15c \ub85c\uadf8\uc778\ub3c4 \uc9c0\uc6d0\ud558\uace0 \uc2f6\ub2e4\uba74 [disqus](https://disqus.com/) \uac19\uc740 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \ub41c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n`docusaurus` \uc5d0 `utterances` \ub97c \uc5f0\ub3d9\ud558\ub294 \ubc29\ubc95\uc5d0 \uad00\ud55c \ubb38\uc11c\ub97c \uac80\uc0c9\ud574\ubcf4\uc558\ub294\ub370 \ub531 \ud558\ub098 \uc874\uc7ac\ud588\ub2e4.\\n\\n- https://younho9.dev/docusaurus-manage-docs-2\\n\\n\ud574\ub2f9 \uae00\uc744 \ucc38\uc870\ud574\uc11c \uc5f0\ub3d9\ud558\uc600\uc9c0\ub9cc \ubaa8\ub4e0 \ubd80\ubd84\uc744 \uadf8\ub300\ub85c \ub530\ub77c\ud558\uc9c0\ub294 \uc54a\uc558\ub2e4.  \\n\ud14c\ub9c8\uc5d0 \ub530\ub77c `utterances` \uc758 \ud14c\ub9c8\ub3c4 \ub611\uac19\uc774 \uc218\uc815\ud558\ub294 \ucf54\ub4dc\ub294 \ub9ce\uc740 \ub3c4\uc6c0\uc774 \ub418\uc5c8\ub2e4.\\n\\n## utterances \uc0ac\uc804 \uc124\uc815\\n\\nutterances \uc5f0\ub3d9\ud558\ub824\uba74 github \uc800\uc7a5\uc18c\uac00 public \uc774\uc5b4\uc57c \ud55c\ub2e4.  \\n\uc800\uc7a5\uc18c\uac00 [utterances app](https://github.com/apps/utterances) \uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud574\uc57c \ud55c\ub2e4.  \\n\ub9c1\ud06c\ub97c \ub204\ub978 \ud6c4 `Configure` \ub97c \ub204\ub978 \ud6c4 github \ub85c\uadf8\uc778 \ud6c4 \uc544\ub798 \ud654\uba74\ucc98\ub7fc \uc800\uc7a5\uc18c\ub97c \uc120\ud0dd\ud55c\uace0 `Save` \ub97c \ub204\ub978\ub2e4.\\n\\n![utterances-app](./utterances-app.png)\\n\\n## docusaurus \ud14c\ub9c8 \ucef4\ud3ec\ub10c\ud2b8 \uc218\uc815\\n\\n\uac80\uc0c9\ud55c \uae00\uc5d0\uc11c\ub294 `swizzle` \uba85\ub839\uc5b4\ub97c \ud1b5\ud574\uc11c `docusaurus` \uac00 \ub0b4\ubd80\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \ucef4\ud3ec\ub10c\ud2b8\ub97c \uc9c1\uc811 \uc218\uc815\ud574\uc11c \uc0ac\uc6a9\ud588\ub2e4.  \\n\ud558\uc9c0\ub9cc [\uacf5\uc2dd\ubb38\uc11c](https://docusaurus.io/ko/docs/using-themes#swizzling-theme-components) \ub97c \ubcf4\uba74 \uad8c\uc7a5\ud558\ub294 \ubc29\ubc95\uc740 \uc544\ub2c8\ub2e4.  \\n\ud574\ub2f9 \ucef4\ud3ec\ub10c\ud2b8\uac00 \ubc84\uc804\uc774 \uc62c\ub77c\uac00\uba74 \ubcc0\uacbd\ub420 \uac00\ub2a5\uc131\uc774 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4.  \\n\ub530\ub77c\uc11c \ud574\ub2f9 \uae00\uc758 \uc544\ub798 \ubd80\ubd84\uc5d0 \uc788\ub294 [\ud14c\ub9c8 \ucef4\ud3ec\ub10c\ud2b8 \uac10\uc2f8\uae30](https://docusaurus.io/ko/docs/using-themes#wrapping-theme-components) \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud588\ub2e4.  \\n\uadf8\ub7ec\uba74 \uae30\uc874 \ucef4\ud3ec\ub10c\ud2b8\uc758 \uc18c\uc2a4\ub294 \uac74\ub4e4\uc9c0 \uc54a\uace0 utterances \ub97c \uc704\ud55c \ub85c\uc9c1\ub9cc \ucd94\uac00\ud558\uba74 \ub418\uae30\uc5d0 \ub354 \uc548\uc804\ud558\ub2e4.  \\n\ud14c\ub9c8\uc5d0 \ub530\ub77c utterances \uc758 \ud14c\ub9c8\ub3c4 \ubc14\ub00c\ub294 \ub85c\uc9c1\uc744 \ud3ec\ud568\ud55c \uc804\uccb4 \ucf54\ub4dc\ub294 \uc544\ub798\uc640 \uac19\ub2e4.\\n\\n:::info\\n`<\uc0ac\uc6a9\uc790\uc774\ub984>` \ubd80\ubd84\uc744 \uc801\uc808\ud788 \uc218\uc815\ud55c\ub2e4.  \\n:::\\n\\n```jsx title=\\"src/theme/BlogPostItem.tsx\\"\\nimport React, { useEffect, useRef } from \\"react\\";\\nimport OriginalBlogPostItem from \\"@theme-original/BlogPostItem\\";\\nimport { useColorMode } from \\"@docusaurus/theme-common\\";\\n\\nconst utterancesSelector = \\"iframe.utterances-frame\\";\\n\\nfunction BlogPostItem(props) {\\n  const { isDarkTheme } = useColorMode();\\n  const utterancesTheme = isDarkTheme ? \\"github-dark\\" : \\"github-light\\";\\n  const containerRef = useRef(null);\\n\\n  useEffect(() => {\\n    if (!props.isBlogPostPage) return;\\n\\n    const utterancesEl = containerRef.current.querySelector(utterancesSelector);\\n\\n    const createUtterancesEl = () => {\\n      const script = document.createElement(\\"script\\");\\n\\n      script.src = \\"https://utteranc.es/client.js\\";\\n      script.setAttribute(\\"repo\\", \\"<\uc0ac\uc6a9\uc790\uc774\ub984>/<\uc0ac\uc6a9\uc790\uc774\ub984>.github.io\\");\\n      script.setAttribute(\\"issue-term\\", \\"pathname\\");\\n      script.setAttribute(\\"label\\", \\"comment\\");\\n      script.setAttribute(\\"theme\\", utterancesTheme);\\n      script.crossOrigin = \\"anonymous\\";\\n      script.async = true;\\n\\n      containerRef.current.appendChild(script);\\n    };\\n\\n    const postThemeMessage = () => {\\n      const message = {\\n        type: \\"set-theme\\",\\n        theme: utterancesTheme,\\n      };\\n\\n      utterancesEl.contentWindow.postMessage(message, \\"https://utteranc.es\\");\\n    };\\n\\n    utterancesEl ? postThemeMessage() : createUtterancesEl();\\n  }, [utterancesTheme]);\\n\\n  return (\\n    <>\\n      <OriginalBlogPostItem {...props} />\\n      {props.isBlogPostPage && <div ref={containerRef} />}\\n    </>\\n  );\\n}\\n\\nexport default BlogPostItem;\\n```\\n\\n`src/theme/` \uacbd\ub85c \ubc11\uc5d0 `<\ucef4\ud3ec\ub10c\ud2b8 \uc774\ub984>.tsx` \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uba74 \ud574\ub2f9 \ucef4\ud3ec\ub10c\ud2b8\ub97c \ucee4\uc2a4\ud140 \ud560 \uc218 \uc788\ub2e4.  \\n`@theme-original/<\ucef4\ud3ec\ub10c\ud2b8>` \ub97c import \ud558\uba74 \uc6d0\ubcf8 \ucef4\ud3ec\ub10c\ud2b8\ub97c \uac00\uc838\uc62c \uc218 \uc788\uace0 \ud574\ub2f9 \ucef4\ud3ec\ub10c\ud2b8\uc5d0 utterances \uad00\ub828 \ub0b4\uc6a9\ub9cc \ucd94\uac00\ud558\uba74 \ub41c\ub2e4.\\n\\n```jsx {2,7-11} title=\\"src/theme/BlogPostItem.tsx\\"\\nimport React, { useEffect, useRef } from \\"react\\";\\nimport OriginalBlogPostItem from \\"@theme-original/BlogPostItem\\"; // \uc6d0\ubcf8 \ucef4\ud3ec\ub10c\ud2b8 \uac00\uc838\uc624\uae30\\nimport useThemeContext from \\"@theme/hooks/useThemeContext\\";\\n\\n  ...\\n\\n  return (\\n    <>\\n      <OriginalBlogPostItem {...props} />\\n      {props.isBlogPostPage && <div ref={containerRef} />} // \ub313\uae00 \ud654\uba74 \ucd94\uac00\\n    </>\\n```\\n\\n\uc774\uc81c \ub313\uae00 \uae30\ub2a5\uc774 \uc81c\ub300\ub85c \ub418\ub294\uc9c0 \ud655\uc778\ud574\ubcf8\ub2e4.\\n\\n## \uacf5\uc2dd\ubb38\uc11c\ub97c \uc77d\uc790\\n\\n\uc774\uc804 \uae00\uc5d0\uc11c \ub9d0\ud55c \ub0b4\uc6a9\uc774\uc9c0\ub9cc \ube14\ub85c\uadf8 \uae00\uc740 \ucc38\uc870\uc6a9\uc73c\ub85c\ub9cc \uc0ac\uc6a9\ud558\uace0 \uacf5\uc2dd\ubb38\uc11c\ub97c \uba54\uc778\uc73c\ub85c \ud65c\uc6a9\ud558\ub294\uac8c \uc911\uc694\ud558\ub2e4\uace0 \uc0dd\uac01\ud55c\ub2e4.  \\n\ub9cc\uc57d \ube14\ub85c\uadf8 \uae00\ub9cc \ucc38\uc870\ud588\ub2e4\uba74 `\ud14c\ub9c8 \ucef4\ud3ec\ub10c\ud2b8 \uac10\uc2f8\uae30` \ub77c\ub294 \uae30\ub2a5\uc744 \ubab0\ub790\uc744\ud14c\uace0 \ub354 \uc88b\uc740 \uc5f0\ub3d9\ubc29\ubc95\uc744 \uc801\uc6a9\ud558\uc9c0 \ubabb\ud588\uc744\uac83\uc774\ub2e4.  \\n\uc774 \uae00\ub3c4 \ub204\uad70\uac00\uc5d0\uac8c \ucc38\uace0\uc6a9\uc73c\ub85c\ub9cc \uc0ac\uc6a9\ub418\uae30\ub97c \ubc14\ub77c\uba70 \ub354 \uc88b\uc740 \ubc29\ubc95\uc744 \ucc3e\uc544\ubcf4\uace0 \uc801\uc6a9\ud558\uc168\uc73c\uba74 \uc88b\uaca0\ub2e4.\\n\\n## \ucc38\uace0\uc790\ub8cc\\n\\n- Docusaurus\ub85c \ubb38\uc11c \uad00\ub9ac\ud558\uae30 - 2: https://younho9.dev/docusaurus-manage-docs-2"},{"id":"/2021/10/17/docusaurus-for-blog","metadata":{"permalink":"/2021/10/17/docusaurus-for-blog","editUrl":"https://github.com/jbl428/jbl428.github.io/edit/main/blog/2021-10-17-docusaurus-for-blog/index.mdx","source":"@site/blog/2021-10-17-docusaurus-for-blog/index.mdx","title":"Docusaurus \ub97c \uc774\uc6a9\ud55c \ube14\ub85c\uadf8 \uad6c\ucd95","description":"\uae30\uc220 \ube14\ub85c\uadf8\ub97c \uc704\ud574 \uc5b4\ub5a4 \ud50c\ub7ab\ud3fc\uc744 \uc0ac\uc6a9\ud560\uc9c0 \uace0\ubbfc\ud558\ub2e4\uac00 \uc9c1\uc7a5 \ub3d9\ub8cc\uac00 Docusaurus \ub97c \ucd94\ucc9c\ud574\uc8fc\uc5c8\ub2e4.","date":"2021-10-17T00:00:00.000Z","formattedDate":"2021\ub144 10\uc6d4 17\uc77c","tags":[{"label":"blog","permalink":"/tags/blog"},{"label":"docusaurus","permalink":"/tags/docusaurus"}],"readingTime":6.32,"truncated":true,"authors":[{"name":"Jake Son","title":"Backend Developer","url":"https://github.com/jbl428","imageURL":"https://avatars.githubusercontent.com/u/22140938?v=4","key":"jake"}],"frontMatter":{"title":"Docusaurus \ub97c \uc774\uc6a9\ud55c \ube14\ub85c\uadf8 \uad6c\ucd95","authors":"jake","tags":["blog","docusaurus"]},"prevItem":{"title":"Docusaurus \uc5d0 utterances \uc5f0\ub3d9","permalink":"/2021/10/19/utterances"}},"content":"\uae30\uc220 \ube14\ub85c\uadf8\ub97c \uc704\ud574 \uc5b4\ub5a4 \ud50c\ub7ab\ud3fc\uc744 \uc0ac\uc6a9\ud560\uc9c0 \uace0\ubbfc\ud558\ub2e4\uac00 \uc9c1\uc7a5 \ub3d9\ub8cc\uac00 `Docusaurus` \ub97c \ucd94\ucc9c\ud574\uc8fc\uc5c8\ub2e4.  \\n\ub2e4\ud06c\ubaa8\ub4dc\ub97c \uc9c0\uc6d0\ud558\uace0 \ud06c\uac8c \ucee4\uc2a4\ud140\ud558\uc9c0 \uc54a\uc544\ub3c4 \uc4f8\ub9cc\ud55c \ube14\ub85c\uadf8\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc744\uac70\uac19\uc558\ub2e4.  \\n\uadf8\ub798\uc11c \uccab \ube14\ub85c\uadf8 \uae00\ub85c \uad6c\ucd95\ud55c \ub0b4\uc6a9\uc744 \uacf5\uc720\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n\uac1c\uc778\uc801\uc73c\ub85c \uae30\uc220\uad00\ub828 \ud658\uacbd\uc744 \uc138\ud305\ud560 \ub54c\uc5d0\ub294 \ube14\ub85c\uadf8 \ubcf4\ub2e4\ub294 \uacf5\uc2dd\ubb38\uc11c\ub97c \ud65c\uc6a9\ud55c\ub2e4.  \\n\ube14\ub85c\uadf8 \uae00\uc740 \uc791\uc131 \ub2f9\uc2dc\uc5d0\ub294 \ub9de\ub294 \uc124\uce58\ubc29\ubc95\uc774\uc5c8\uc9c0\ub9cc \uc2dc\uac04\uc774 \uc9c0\ub098 \ubc84\uc804\uc774 \uc62c\ub77c\uac00\ub294 \uacbd\uc6b0 \uadf8\ub300\ub85c \ub530\ub77c\ud558\uba74 \uc81c\ub300\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0\uac00 \ub9ce\uae30 \ub54c\ubb38\uc774\ub2e4.  \\n\uadf8\ub807\uae30\uc5d0 \uc774 \uae00\uc744 \uadf8\ub300\ub85c \ub530\ub77c\ud558\uc5ec \uad6c\ucd95\ud558\uae30 \ubcf4\ub2e4 \ucc38\uace0\uc6a9\uc73c\ub85c \ud65c\uc6a9\ud558\uace0 \uacf5\uc2dd\ubb38\uc11c\ub97c \uc8fc\ub85c \uc774\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ud55c\ub2e4.\\n\\n## \ud658\uacbd\\n\\n\ube14\ub85c\uadf8\ub97c \uc704\ud574 \uc0ac\uc6a9\ud55c \uae30\uc220\uacfc \uac01 \ubc84\uc804\uc740 \ub2e4\uc74c\uacfc \uac19\ub2e4.\\n\\n- Docusaurus (with typescript): 2.0.0-beta.15\\n- GitHub Page\\n- GitHub Action\\n\\n\uad00\ub828 \uc800\uc7a5\uc18c\ub294 \uc544\ub798 \ub9c1\ud06c\ub97c \ucc38\uc870\ud55c\ub2e4.\\n\\nhttps://github.com/jbl428/jbl428.github.io\\n\\n## GitHub \uc800\uc7a5\uc18c \uc0dd\uc131\\n\\n`GitHub Page` \ub294 \uae43\ud5c8\ube0c\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ubb34\ub8cc \ud638\uc2a4\ud305 \uc11c\ube44\uc2a4\uc774\ub2e4. \ube14\ub85c\uadf8\ub098 \ud3ec\ud2b8\ud3f4\ub9ac\uc624 \uac19\uc740 \uc815\uc801 \uc0ac\uc774\ud2b8\ub85c \uc8fc\ub85c \uc0ac\uc6a9\ub41c\ub2e4.  \\n\uae43\ud5c8\ube0c\uc5d0 \ub4e4\uc5b4\uac00\uc11c \uc800\uc7a5\uc18c\ub97c \uc0dd\uc131\ud558\ub294\ub370 \uc774\ub984\uc740 `<\uc0ac\uc6a9\uc790\uc774\ub984>.github.io` \ud615\ud0dc\ub85c \uc124\uc815\ud574\uc8fc\uace0 \ub098\uba38\uc9c0 \uc635\uc158\uc740 \uc0c1\ud669\uc5d0 \ub530\ub77c \uc801\uc808\ud788 \uc124\uc815\ud55c\ub2e4.  \\n\uc774\ud6c4 \ud574\ub2f9 \uc800\uc7a5\uc18c\ub97c clone \ud55c\ub2e4.\\n\\n```shell\\ngit clone https://github.com/<\uc0ac\uc6a9\uc790\uc774\ub984>/<\uc0ac\uc6a9\uc790\uc774\ub984>.github.io.git\\n```\\n\\n## Docusaurus \uc124\uce58\\n\\n\uc800\uc7a5\uc18c \ub8e8\ud2b8 \ub514\ub809\ud1a0\ub9ac\ub85c \uc774\ub3d9\ud55c \ub2e4\uc74c \uc544\ub798 \uba85\ub839\uc5b4\ub97c \uc218\ud589\ud55c\ub2e4.\\n\\n```shell\\nnpm init docusaurus@latest temp classic --typescript\\n```\\n\\n`temp` \ub514\ub809\ud1a0\ub9ac\uc5d0 docusaurus \uad00\ub828 \ud30c\uc77c\uc774 \ub4e4\uc5b4\uac00\ub294\ub370 \uc800\uc7a5\uc18c \ub8e8\ud2b8\ub85c \ubaa8\ub450 \uc774\ub3d9\ud55c\ub2e4.\\n\\n```shell\\nmv temp/* .\\nmv temp/.* .\\n```\\n\\n## \uae30\ubcf8\uc124\uc815\\n\\n`docusaurus.config.js` \ud30c\uc77c\uc5d0\ub294 `Docusaurus` \uc5d0 \ub300\ud55c \uc124\uc815\uc774 \ub4e4\uc5b4\uc788\ub2e4.  \\n\uac01 \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc124\uba85\uc740 [\ubb38\uc11c](https://docusaurus.io/ko/docs/docusaurus.config.js) \ub97c \ucc38\uc870\ud55c\ub2e4.\\n\\n```jsx {3-11} title=\\"docusaurus.config.js\\"\\nmodule.exports = {\\n  // ...\\n  title: \\"\uc0ac\uc774\ud2b8 \uc81c\ubaa9\\",\\n  tagline: \\"\uc0ac\uc774\ud2b8 \uc124\uba85\\",\\n  url: \\"https://<\uc0ac\uc6a9\uc790\uc774\ub984>.github.io\\",\\n  baseUrl: \\"/\\",\\n  onBrokenLinks: \\"throw\\",\\n  onBrokenMarkdownLinks: \\"warn\\",\\n  favicon: \\"img/favicon.ico\\",\\n  organizationName: \\"<\uc0ac\uc6a9\uc790\uc774\ub984>\\",\\n  projectName: \\"<\uc0ac\uc6a9\uc790\uc774\ub984>.github.io\\",\\n  // ...\\n};\\n```\\n\\n## \ubc30\ud3ec \uc124\uc815\\n\\n`GitHub Action` \uc744 \ud65c\uc6a9\ud574\uc11c `main` \ube0c\ub79c\uce58\uc5d0 \ud478\uc2dc\uac00 \uc77c\uc5b4\ub098\uba74 \ube4c\ub4dc\ub97c \uc218\ud589\ud558\uace0 `gh-pages` \ube0c\ub79c\uce58\ub85c \uacb0\uacfc\ub97c \ud478\uc2dc\ud558\ub294 \uc124\uc815\uc744 \ud574\uc900\ub2e4.  \\n[\ub9c1\ud06c](https://docusaurus.io/ko/docs/deployment#triggering-deployment-with-github-actions) \ub97c \ucc38\uc870\ud574\uc11c 5\ubc88 \ub2e8\uacc4\uae4c\uc9c0 \uc791\uc5c5\uc744 \ud574\uc900\ub2e4.  \\n\ub9c8\uc9c0\ub9c9 6\ubc88 \ub2e8\uacc4\uc778 `workflow` \ud30c\uc77c\uc744 \ub9cc\ub4dc\ub294 \ubd80\ubd84\ub9cc \uc544\ub798\ucc98\ub7fc \ud574\uc900\ub2e4.\\n\\n:::info\\n`<\uc774\uba54\uc77c>` \uacfc `<\uc774\ub984>` \ubd80\ubd84\uc744 \uc801\uc808\ud788 \uc218\uc815\ud558\ub3c4\ub85d \ud55c\ub2e4.  \\n:::\\n\\n```yaml title=\\".github/workflows/blog.yml\\"\\nname: blog\\n\\non:\\n  push:\\n    branches: [main]\\n\\njobs:\\n  gh-release:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v1\\n      - uses: actions/setup-node@v1\\n        with:\\n          node-version: \\"12.x\\"\\n      - uses: webfactory/ssh-agent@v0.5.0\\n        with:\\n          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}\\n      - name: Release to GitHub Pages\\n        env:\\n          USE_SSH: true\\n          GIT_USER: git\\n          DEPLOYMENT_BRANCH: gh-pages\\n          CURRENT_BRANCH: main\\n        run: |\\n          git config --global user.email \\"<\uc774\uba54\uc77c>\\"\\n          git config --global user.name \\"<\uc774\ub984>\\"\\n          if [ -e yarn.lock ]; then\\n            yarn install --frozen-lockfile\\n          elif [ -e package-lock.json ]; then\\n            npm ci\\n          else\\n            npm i\\n          fi\\n          npm run deploy\\n```\\n\\n## \ubcf4\uad00\uc18c \ud398\uc774\uc9c0 \ucd94\uac00\\n\\n\ucc98\uc74c\uc5d0\ub294 [John Reilly archive](https://blog.johnnyreilly.com/blog-archive) \ucc98\ub7fc \ubaa8\ub4e0 \uac8c\uc2dc\uae00\uc744 \uc5f0\ub3c4\ubcc4\ub85c \uc815\ub9ac\ud55c \ud398\uc774\uc9c0\ub97c \ucd94\uac00\ud558\uace0\uc790 \uc774\ubd84\uc758 \uc800\uc7a5\uc18c \ucf54\ub4dc\ub97c \ubcf5\uc0ac\ud574\uc11c \uc0ac\uc6a9\ud588\ub2e4.  \\n\ud558\uc9c0\ub9cc \uacf5\uc2dd\ubb38\uc11c\ub97c \ubcf4\ub2c8 \uc774\ubbf8 \uc704\uc640 \uac19\uc740 \uae30\ub2a5\uc774 `Docusaurus` \uc5d0 \ubc18\uc601\ub41c \uac83\uc744 \ud655\uc778\ud558\uc600\ub2e4.  \\n\uc544\ub798\ucc98\ub7fc \uc801\uc808\ud55c \uacbd\ub85c\uc5d0 \uac12\uc744 \ucd94\uac00\ud558\uba74\ub41c\ub2e4.\\n\\n```jsx {7,15} title=\\"docusaurus.config.js\\"\\nmodule.exports = {\\n  // ...\\n  presets: [\\n    [\\n      {\\n        blog: {\\n          archiveBasePath: \\"archive\\",\\n        },\\n      },\\n    ],\\n  ],\\n  // ...\\n  themeConfig: {\\n    navbar: {\\n      items: [{ to: \\"/archive\\", label: \\"Archive\\", position: \\"left\\" }],\\n    },\\n  },\\n  // ...\\n};\\n```\\n\\n## i18n \uc124\uc815\\n\\n\uae30\ubcf8 \uc5b8\uc5b4 \uc124\uc815\uc744 \ud55c\uae00\ub85c \ud558\uae30\uc704\ud574 \ub85c\ucf00\uc77c \uc124\uc815\uc744 \ud574\uc900\ub2e4.\\n\\n```jsx {3-6} title=\\"docusaurus.config.js\\"\\nmodule.exports = {\\n  // ...\\n  i18n: {\\n    defaultLocale: \\"ko\\",\\n    locales: [\\"ko\\"],\\n  },\\n  // ...\\n};\\n```\\n\\n\uadf8\ub9ac\uace0 \uc544\ub798 \uba85\ub839\uc5b4\ub97c \uc218\ud589\ud558\uba74 `i18n` \ub514\ub809\ud1a0\ub9ac \ubc11\uc5d0 \uac01\uc885 \ub808\uc774\ube14\uc5d0 \ub300\ud55c json \ud30c\uc77c\uc774 \uc0dd\uc131\ub41c\ub2e4.\\n\\n```shell\\nyarn docusaurus write-translations\\n```\\n\\n\ub0b4\uc6a9\uc744 \uc0b4\ud3b4\ubcf4\uba74 \ud55c\uae00\ub85c \ubc88\uc5ed\uc774 \uc548\ub41c \ubd80\ubd84\uc774 \uc788\ub294\ub370 \uc801\uc808\ud788 \uc218\uc815\ud574\uc900\ub2e4.\\n\\n```json title=\\"i18n/ko/code.json\\"\\n  \\"theme.blog.archive.title\\": {\\n    \\"message\\": \\"\ubcf4\uad00\uc18c\\",\\n    \\"description\\": \\"The page & hero title of the blog archive page\\"\\n  },\\n  \\"theme.blog.archive.description\\": {\\n    \\"message\\": \\"\ubaa8\ub4e0 \uac8c\uc2dc\ubb3c\\",\\n    \\"description\\": \\"The page & hero description of the blog archive page\\"\\n  }\\n```\\n\\n```json title=\\"i18n/ko/docusaurus-plugin-content-blog/options.json\\"\\n  \\"sidebar.title\\": {\\n    \\"message\\": \\"\ucd5c\uadfc \uac8c\uc2dc\ubb3c\\",\\n    \\"description\\": \\"The label for the left sidebar\\"\\n  }\\n```\\n\\n## GitHub Page \ub85c \uc0ac\uc6a9\ud560 \ube0c\ub79c\uce58 \uc124\uc815\\n\\n\uc800\uc7a5\uc18c\uc758 \uc5b4\ub5a4 \ube0c\ub79c\uce58\uc758 \ud2b9\uc815 \uacbd\ub85c\ub97c \uc6f9\ud398\uc774\uc9c0\ub85c \uc0ac\uc6a9\ud560 \uac83\uc778\uc9c0 \uc124\uc815\ud574\uc57c\ud55c\ub2e4.  \\n\ubc30\ud3ec\uc124\uc815\uc744 \ud1b5\ud574 `gh-pages` \ube0c\ub79c\uce58\uc758 \ub8e8\ud2b8\uc5d0 \uc815\uc801\ud30c\uc77c\uc774 \uc0dd\uc131\ub418\ubbc0\ub85c \uc544\ub798 \ud654\uba74\ucc98\ub7fc \uc124\uc815\ud55c\ub2e4.\\n\\n![github-setting](./github-setting.png)\\n\\n![github-page-setting](./github-page-setting.png)\\n\\n## \ub9c8\uc9c0\ub9c9\\n\\n\uc774\uc81c `https://<\uc0ac\uc6a9\uc790\uc774\ub984>.github.io` \ud398\uc774\uc9c0\uc5d0 \uc811\uc18d\ud558\uba74 \ub9cc\ub4e0 \ube14\ub85c\uadf8\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4.  \\n\ud558\uc9c0\ub9cc \ub313\uae00\uc744 \uc791\uc131\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc740 \uc5c6\ub294\ub370 \ucd94\ud6c4 \uac8c\uc2dc\uae00\ub85c \uc791\uc131\ud558\ub824\uace0 \ud55c\ub2e4.\\n\\n## \ucc38\uace0\uc790\ub8cc\\n\\n- Docusaurus \uacf5\uc2dd\ubb38\uc11c: https://docusaurus.io/ko/docs"}]}')}}]);